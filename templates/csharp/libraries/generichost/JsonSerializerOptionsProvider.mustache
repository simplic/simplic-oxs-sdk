// <auto-generated>
{{partial_header}}
{{#nrt}}
#nullable enable

{{/nrt}}
using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace {{packageName}}
{
    public class OptionJsonConverter<T> : JsonConverter<Option<T>>
    {
        public override Option<T> Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            var valueJson = reader.GetString()!;
            var value = JsonSerializer.Deserialize<T>(valueJson);
            return new Option<T>(value);
        }
    
        public override void Write(Utf8JsonWriter writer, Option<T> value, JsonSerializerOptions options)
        {
            var valueJson = JsonSerializer.Serialize(value.Value);
            writer.WriteStringValue(valueJson);
        }
    }

    /// <summary>
    /// Provides the JsonSerializerOptions
    /// </summary>
    {{>visibility}} class JsonSerializerOptionsProvider
    {
        /// <summary>
        /// the JsonSerializerOptions
        /// </summary>
        public JsonSerializerOptions Options { get; }

        /// <summary>
        /// Instantiates a JsonSerializerOptionsProvider
        /// </summary>
        public JsonSerializerOptionsProvider(JsonSerializerOptions options)
        {
            Options = options;
        }
    }
}