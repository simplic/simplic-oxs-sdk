// ------------------------- Custom -------------------------------
//: Interface
    {{>../../../.inject_shared/api_interface}}
//: Implementation
    {{#operations}}

    /// <summary>
    /// Client to interact with the API endpoints of the {{service}} service.
    /// </summary>
    {{>visibility}} interface {{interfacePrefix}}{{classname}}
    {
        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        string GetBasePath();

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        //IReadableConfiguration Configuration;


        {{#operation}}

        /// <summary>
        /// {{summary}} {{notes}}
        /// </summary>
        /// <exception cref="{{packageName}}.ApiException">Thrown when fails to make API call</exception>
        {{#allParams}}
        /// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}</param>
        {{/allParams}}
        /// <returns>{{returnType}}</returns>
        {{#isDeprecated}}
        [Obsolete]
        {{/isDeprecated}}
        {{{returnType}}}{{^returnType}}void{{/returnType}} {{operationId}}({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}});

        /// <summary>
        /// {{summary}} {{notes}}
        /// </summary>
        /// <exception cref="{{packageName}}.ApiException">Thrown when fails to make API call</exception>
        {{#allParams}}/// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}</param>
        {{/allParams}}
        /// <returns>ApiResponse of {{returnType}}{{^returnType}}Object(void){{/returnType}}</returns>
        {{#isDeprecated}}
        [Obsolete]
        {{/isDeprecated}}
        ApiResponse<{{{returnType}}}{{^returnType}}Object{{/returnType}}> {{operationId}}{{withHttpInfoSuffix}}({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}});
         
        {{#supportsAsync}}
        /// <summary>
        /// {{summary}} {{notes}}
        /// </summary>
        /// <exception cref="{{packageName}}.ApiException">Thrown when fails to make API call</exception>
        {{#allParams}}
        /// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}</param>
        {{/allParams}}
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of {{returnType}}{{^returnType}}void{{/returnType}}</returns>
        {{#isDeprecated}}
        [Obsolete]
        {{/isDeprecated}}
        {{#returnType}}Task<{{{.}}}>{{/returnType}}{{^returnType}}Task{{/returnType}} {{operationId}}Async({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}}{{#allParams.0}}, {{/allParams.0}}CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// {{summary}} {{notes}}
        /// </summary>
        /// <exception cref="{{packageName}}.ApiException">Thrown when fails to make API call</exception>
        {{#allParams}}
        /// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}</param>
        {{/allParams}}
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse{{#returnType}} ({{.}}){{/returnType}}</returns>
        {{#isDeprecated}}
        [Obsolete]
        {{/isDeprecated}}
        Task<ApiResponse<{{{returnType}}}{{^returnType}}Object{{/returnType}}>> {{operationId}}{{withHttpInfoSuffix}}Async({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}}{{#allParams.0}}, {{/allParams.0}}CancellationToken cancellationToken = default(CancellationToken));
        {{/supportsAsync}}

        {{/operation}}
    }

    /// <inheritdoc cref="{{interfacePrefix}}{{classname}}">
    {{>visibility}} class {{classname}} : {{interfacePrefix}}{{classname}}
    {
        private __{{classname}} _internalClient;
        private HttpClient _httpClient;

        public {{classname}}(string host, string? authorization = null)
        {
            _httpClient = new HttpClient() { BaseAddress = new Uri($"{host}/{{service}}-api/{{apiVersion}}") };
            var jsonSerializerOptions = new JsonSerializerOptions { DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull };
            var jsonSerializerOptionsProvider = new JsonSerializerOptionsProvider(jsonSerializerOptions);
            var events = new {{classname}}Events();
            if (authorization is null)
            {
                _internalClient = new __{{classname}}(_httpClient, jsonSerializerOptionsProvider, events, new NullTokenProvider<ApiKeyToken>());
            }
            else
            {
                var token = new ApiKeyToken(authorization, "Authorization", "");
                _internalClient = new __{{classname}}(_httpClient, jsonSerializerOptionsProvider, events, new ApiKeyTokenProvider(new[] { token }));
            }
        }

        public {{classname}}(Environment env, string? authorization = null)
            : this(
                env == Environment.Development
                    ? "{{environmentDevelopmentUrl}}"
                    : "{{environmentProductionUrl}}",
                authorization
            ) { }

        /// <inheritdoc />
        public string GetBasePath() => _httpClient.BaseAddress.ToString();

        {{#operation}}
        /// <inheritdoc />
        {{#isDeprecated}}
        [Obsolete]
        {{/isDeprecated}}
        public {{{returnType}}}{{^returnType}}void{{/returnType}} {{operationId}}({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}})
        {
            try
            {
                var response = _internalClient.{{operationId}}Async({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}}).GetAwaiter().GetResult();
                {{#returnType}}return response.Ok();{{/returnType}}
                
            }
            catch (ApiException e)
            {
                throw new ApiException(e.ErrorCode, FormatErrorMessage(e.Message, e.ErrorCode), e.ErrorContent, e.Headers);
            }
        }

        /// <inheritdoc />
        {{#isDeprecated}}
        [Obsolete]
        {{/isDeprecated}}
        public ApiResponse<{{{returnType}}}{{^returnType}}Object{{/returnType}}> {{operationId}}{{withHttpInfoSuffix}}({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}})
        {
            try
            {
                var response = _internalClient.{{operationId}}Async({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}}).GetAwaiter().GetResult();
                {{^returnType}}return new ApiResponse<Object>(response.StatusCode, response.Headers.ToMultimap(), null, response.RawContent);{{/returnType}}
                {{#returnType}}return new ApiResponse<{{{returnType}}}>(response.StatusCode, response.Headers.ToMultimap(), response.Ok(), response.RawContent);{{/returnType}}
            }
            catch (ApiException e)
            {
                throw new ApiException(e.ErrorCode, FormatErrorMessage(e.Message, e.ErrorCode), e.ErrorContent, e.Headers);
            }
        } 

        {{#supportsAsync}}
        /// <inheritdoc />
        {{#isDeprecated}}
        [Obsolete]
        {{/isDeprecated}}
        {{#returnType}}public async Task<{{{.}}}>{{/returnType}}{{^returnType}}public async Task{{/returnType}} {{operationId}}Async({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}}{{#allParams.0}}, {{/allParams.0}}CancellationToken cancellationToken = default(CancellationToken))
        {
            try
            {
                var response = await _internalClient.{{operationId}}Async({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}}{{#allParams.0}}, {{/allParams.0}}cancellationToken: cancellationToken);
                {{#returnType}}return response.Ok();{{/returnType}}
            }
            catch (ApiException e)
            {
                throw new ApiException(e.ErrorCode, FormatErrorMessage(e.Message, e.ErrorCode), e.ErrorContent, e.Headers);
            }
        }

        /// <inheritdoc />
        {{#isDeprecated}}
        [Obsolete]
        {{/isDeprecated}}
        public async Task<ApiResponse<{{{returnType}}}{{^returnType}}Object{{/returnType}}>> {{operationId}}{{withHttpInfoSuffix}}Async({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}}{{#allParams.0}}, {{/allParams.0}}CancellationToken cancellationToken = default(CancellationToken))
        {
            try
            {
                var response = await _internalClient.{{operationId}}Async({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}}{{#allParams.0}}, {{/allParams.0}}cancellationToken: cancellationToken);
                {{^returnType}}return new ApiResponse<Object>(response.StatusCode, response.Headers.ToMultimap(), null, response.RawContent);{{/returnType}}
                {{#returnType}}return new ApiResponse<{{{returnType}}}>(response.StatusCode, response.Headers.ToMultimap(), response.Ok(), response.RawContent);{{/returnType}}
            }
            catch (ApiException e)
            {
                throw new ApiException(e.ErrorCode, FormatErrorMessage(e.Message, e.ErrorCode), e.ErrorContent, e.Headers);
            }
        }    
        {{/supportsAsync}}
        {{/operation}}

        private string FormatErrorMessage(string message, int errorCode) => $"<{errorCode} - {(HttpStatusCode)errorCode}> {message}";
    }

    {{/operations}}
// ------------------------^ Custom ^------------------------------