{{#operations}}

/// <summary>
/// Client to interact with the API endpoints of the {{service}} service.
/// </summary>
{{>visibility}} interface {{interfacePrefix}}{{classname}}
{
    /// <summary>
    /// Gets the base path of the API client.
    /// </summary>
    /// <value>The base path</value>
    string GetBasePath();

    {{#operation}}

    /// <summary>
    /// {{summary}} {{notes}}
    /// </summary>
    /// <exception cref="{{packageName}}.ApiException">Thrown when fails to make API call</exception>
    {{#allParams}}
    /// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}</param>
    {{/allParams}}
    /// <returns>{{returnType}}</returns>
    {{#isDeprecated}}
    [Obsolete]
    {{/isDeprecated}}
    {{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}void{{/returnType}} {{operationId}}({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}});

    /// <summary>
    /// {{summary}} {{notes}}
    /// </summary>
    /// <exception cref="{{packageName}}.ApiException">Thrown when fails to make API call</exception>
    {{#allParams}}
    /// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}</param>
    {{/allParams}}
    /// <returns>ApiResponse of {{returnType}}{{^returnType}}Object(void){{/returnType}}</returns>
    {{#isDeprecated}}
    [Obsolete]
    {{/isDeprecated}}
    ApiResponse<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}> {{operationId}}{{withHttpInfoSuffix}}({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}});
        
    {{#supportsAsync}}
    /// <summary>
    /// {{summary}} {{notes}}
    /// </summary>
    /// <exception cref="{{packageName}}.ApiException">Thrown when fails to make API call</exception>
    {{#allParams}}
    /// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}</param>
    {{/allParams}}
    /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
    /// <returns>Task of {{returnType}}{{^returnType}}void{{/returnType}}</returns>
    {{#isDeprecated}}
    [Obsolete]
    {{/isDeprecated}}
    {{#returnType}}Task<{{{.}}}>{{/returnType}}{{^returnType}}Task{{/returnType}} {{operationId}}Async({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}}{{#allParams.0}}, {{/allParams.0}}CancellationToken cancellationToken = default(CancellationToken));

    /// <summary>
    /// {{summary}} {{notes}}
    /// </summary>
    /// <exception cref="{{packageName}}.ApiException">Thrown when fails to make API call</exception>
    {{#allParams}}
    /// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}</param>
    {{/allParams}}
    /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
    /// <returns>Task of ApiResponse{{#returnType}} ({{.}}){{/returnType}}</returns>
    {{#isDeprecated}}
    [Obsolete]
    {{/isDeprecated}}
    Task<ApiResponse<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}>> {{operationId}}{{withHttpInfoSuffix}}Async({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = default({{{dataType}}}){{/optionalMethodArgument}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}}{{#allParams.0}}, {{/allParams.0}}CancellationToken cancellationToken = default(CancellationToken));
    {{/supportsAsync}}

    {{/operation}}
}

{{/operations}}