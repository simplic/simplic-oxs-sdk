/*
 * Simplic.OxS.Contract
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Simplic.OxS.SDK.OpenAPIDateConverter;

using Simplic.OxS.SDK;

namespace Simplic.OxS.SDK.Contract
{
    /// <summary>
    /// UpdateContractRequest
    /// </summary>
    [DataContract(Name = "UpdateContractRequest")]
    public partial class UpdateContractRequest : IEquatable<UpdateContractRequest>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets BillingType
        /// </summary>
        [DataMember(Name = "billingType", EmitDefaultValue = false)]
        public BillingTypeModel? BillingType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateContractRequest" /> class.
        /// </summary>
        /// <param name="number">number.</param>
        /// <param name="name">name.</param>
        /// <param name="referenceNumber">referenceNumber.</param>
        /// <param name="orderDate">orderDate.</param>
        /// <param name="startDate">startDate.</param>
        /// <param name="endDate">endDate.</param>
        /// <param name="billingType">billingType.</param>
        /// <param name="projectId">projectId.</param>
        /// <param name="termOfPayment">termOfPayment.</param>
        /// <param name="submissionDate">submissionDate.</param>
        /// <param name="insurance">insurance.</param>
        /// <param name="creditworthiness">creditworthiness.</param>
        /// <param name="creditLimit">creditLimit.</param>
        /// <param name="isDeleted">isDeleted.</param>
        /// <param name="businessPartnerContactId">businessPartnerContactId.</param>
        /// <param name="businessPartnerPersonalAccountId">businessPartnerPersonalAccountId.</param>
        /// <param name="customerContactId">customerContactId.</param>
        /// <param name="customerPersonalAccountId">customerPersonalAccountId.</param>
        /// <param name="representativeUserId">representativeUserId.</param>
        /// <param name="contactPersonContactId">contactPersonContactId.</param>
        /// <param name="items">items.</param>
        /// <param name="statusId">statusId.</param>
        public UpdateContractRequest(string number = default(string), string name = default(string), string referenceNumber = default(string), DateTime? orderDate = default(DateTime?), DateTime? startDate = default(DateTime?), DateTime? endDate = default(DateTime?), BillingTypeModel? billingType = default(BillingTypeModel?), Guid? projectId = default(Guid?), TermsOfPaymentModel termOfPayment = default(TermsOfPaymentModel), string submissionDate = default(string), double? insurance = default(double?), string creditworthiness = default(string), string creditLimit = default(string), bool? isDeleted = default(bool?), Guid? businessPartnerContactId = default(Guid?), Guid? businessPartnerPersonalAccountId = default(Guid?), Guid? customerContactId = default(Guid?), Guid? customerPersonalAccountId = default(Guid?), Guid? representativeUserId = default(Guid?), Guid? contactPersonContactId = default(Guid?), List<PatchItemModel> items = default(List<PatchItemModel>), Guid? statusId = default(Guid?))
        {
            this.Number = number;
            this.Name = name;
            this.ReferenceNumber = referenceNumber;
            this.OrderDate = orderDate;
            this.StartDate = startDate;
            this.EndDate = endDate;
            this.BillingType = billingType;
            this.ProjectId = projectId;
            this.TermOfPayment = termOfPayment;
            this.SubmissionDate = submissionDate;
            this.Insurance = insurance;
            this.Creditworthiness = creditworthiness;
            this.CreditLimit = creditLimit;
            this.IsDeleted = isDeleted;
            this.BusinessPartnerContactId = businessPartnerContactId;
            this.BusinessPartnerPersonalAccountId = businessPartnerPersonalAccountId;
            this.CustomerContactId = customerContactId;
            this.CustomerPersonalAccountId = customerPersonalAccountId;
            this.RepresentativeUserId = representativeUserId;
            this.ContactPersonContactId = contactPersonContactId;
            this.Items = items;
            this.StatusId = statusId;
        }

        /// <summary>
        /// Gets or Sets Number
        /// </summary>
        [DataMember(Name = "number", EmitDefaultValue = true)]
        public string Number { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ReferenceNumber
        /// </summary>
        [DataMember(Name = "referenceNumber", EmitDefaultValue = true)]
        public string ReferenceNumber { get; set; }

        /// <summary>
        /// Gets or Sets OrderDate
        /// </summary>
        [DataMember(Name = "orderDate", EmitDefaultValue = true)]
        public DateTime? OrderDate { get; set; }

        /// <summary>
        /// Gets or Sets StartDate
        /// </summary>
        [DataMember(Name = "startDate", EmitDefaultValue = true)]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// Gets or Sets EndDate
        /// </summary>
        [DataMember(Name = "endDate", EmitDefaultValue = true)]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or Sets ProjectId
        /// </summary>
        [DataMember(Name = "projectId", EmitDefaultValue = true)]
        public Guid? ProjectId { get; set; }

        /// <summary>
        /// Gets or Sets TermOfPayment
        /// </summary>
        [DataMember(Name = "termOfPayment", EmitDefaultValue = false)]
        public TermsOfPaymentModel TermOfPayment { get; set; }

        /// <summary>
        /// Gets or Sets SubmissionDate
        /// </summary>
        [DataMember(Name = "submissionDate", EmitDefaultValue = true)]
        public string SubmissionDate { get; set; }

        /// <summary>
        /// Gets or Sets Insurance
        /// </summary>
        [DataMember(Name = "insurance", EmitDefaultValue = true)]
        public double? Insurance { get; set; }

        /// <summary>
        /// Gets or Sets Creditworthiness
        /// </summary>
        [DataMember(Name = "creditworthiness", EmitDefaultValue = true)]
        public string Creditworthiness { get; set; }

        /// <summary>
        /// Gets or Sets CreditLimit
        /// </summary>
        [DataMember(Name = "creditLimit", EmitDefaultValue = true)]
        public string CreditLimit { get; set; }

        /// <summary>
        /// Gets or Sets IsDeleted
        /// </summary>
        [DataMember(Name = "isDeleted", EmitDefaultValue = true)]
        public bool? IsDeleted { get; set; }

        /// <summary>
        /// Gets or Sets BusinessPartnerContactId
        /// </summary>
        [DataMember(Name = "businessPartnerContactId", EmitDefaultValue = true)]
        public Guid? BusinessPartnerContactId { get; set; }

        /// <summary>
        /// Gets or Sets BusinessPartnerPersonalAccountId
        /// </summary>
        [DataMember(Name = "businessPartnerPersonalAccountId", EmitDefaultValue = true)]
        public Guid? BusinessPartnerPersonalAccountId { get; set; }

        /// <summary>
        /// Gets or Sets CustomerContactId
        /// </summary>
        [DataMember(Name = "customerContactId", EmitDefaultValue = true)]
        public Guid? CustomerContactId { get; set; }

        /// <summary>
        /// Gets or Sets CustomerPersonalAccountId
        /// </summary>
        [DataMember(Name = "customerPersonalAccountId", EmitDefaultValue = true)]
        public Guid? CustomerPersonalAccountId { get; set; }

        /// <summary>
        /// Gets or Sets RepresentativeUserId
        /// </summary>
        [DataMember(Name = "representativeUserId", EmitDefaultValue = true)]
        public Guid? RepresentativeUserId { get; set; }

        /// <summary>
        /// Gets or Sets ContactPersonContactId
        /// </summary>
        [DataMember(Name = "contactPersonContactId", EmitDefaultValue = true)]
        public Guid? ContactPersonContactId { get; set; }

        /// <summary>
        /// Gets or Sets Items
        /// </summary>
        [DataMember(Name = "items", EmitDefaultValue = true)]
        public List<PatchItemModel> Items { get; set; }

        /// <summary>
        /// Gets or Sets StatusId
        /// </summary>
        [DataMember(Name = "statusId", EmitDefaultValue = true)]
        public Guid? StatusId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateContractRequest {\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ReferenceNumber: ").Append(ReferenceNumber).Append("\n");
            sb.Append("  OrderDate: ").Append(OrderDate).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  BillingType: ").Append(BillingType).Append("\n");
            sb.Append("  ProjectId: ").Append(ProjectId).Append("\n");
            sb.Append("  TermOfPayment: ").Append(TermOfPayment).Append("\n");
            sb.Append("  SubmissionDate: ").Append(SubmissionDate).Append("\n");
            sb.Append("  Insurance: ").Append(Insurance).Append("\n");
            sb.Append("  Creditworthiness: ").Append(Creditworthiness).Append("\n");
            sb.Append("  CreditLimit: ").Append(CreditLimit).Append("\n");
            sb.Append("  IsDeleted: ").Append(IsDeleted).Append("\n");
            sb.Append("  BusinessPartnerContactId: ").Append(BusinessPartnerContactId).Append("\n");
            sb.Append("  BusinessPartnerPersonalAccountId: ").Append(BusinessPartnerPersonalAccountId).Append("\n");
            sb.Append("  CustomerContactId: ").Append(CustomerContactId).Append("\n");
            sb.Append("  CustomerPersonalAccountId: ").Append(CustomerPersonalAccountId).Append("\n");
            sb.Append("  RepresentativeUserId: ").Append(RepresentativeUserId).Append("\n");
            sb.Append("  ContactPersonContactId: ").Append(ContactPersonContactId).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  StatusId: ").Append(StatusId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateContractRequest);
        }

        /// <summary>
        /// Returns true if UpdateContractRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateContractRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateContractRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Number == input.Number ||
                    (this.Number != null &&
                    this.Number.Equals(input.Number))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.ReferenceNumber == input.ReferenceNumber ||
                    (this.ReferenceNumber != null &&
                    this.ReferenceNumber.Equals(input.ReferenceNumber))
                ) && 
                (
                    this.OrderDate == input.OrderDate ||
                    (this.OrderDate != null &&
                    this.OrderDate.Equals(input.OrderDate))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                ) && 
                (
                    this.BillingType == input.BillingType ||
                    this.BillingType.Equals(input.BillingType)
                ) && 
                (
                    this.ProjectId == input.ProjectId ||
                    (this.ProjectId != null &&
                    this.ProjectId.Equals(input.ProjectId))
                ) && 
                (
                    this.TermOfPayment == input.TermOfPayment ||
                    (this.TermOfPayment != null &&
                    this.TermOfPayment.Equals(input.TermOfPayment))
                ) && 
                (
                    this.SubmissionDate == input.SubmissionDate ||
                    (this.SubmissionDate != null &&
                    this.SubmissionDate.Equals(input.SubmissionDate))
                ) && 
                (
                    this.Insurance == input.Insurance ||
                    (this.Insurance != null &&
                    this.Insurance.Equals(input.Insurance))
                ) && 
                (
                    this.Creditworthiness == input.Creditworthiness ||
                    (this.Creditworthiness != null &&
                    this.Creditworthiness.Equals(input.Creditworthiness))
                ) && 
                (
                    this.CreditLimit == input.CreditLimit ||
                    (this.CreditLimit != null &&
                    this.CreditLimit.Equals(input.CreditLimit))
                ) && 
                (
                    this.IsDeleted == input.IsDeleted ||
                    (this.IsDeleted != null &&
                    this.IsDeleted.Equals(input.IsDeleted))
                ) && 
                (
                    this.BusinessPartnerContactId == input.BusinessPartnerContactId ||
                    (this.BusinessPartnerContactId != null &&
                    this.BusinessPartnerContactId.Equals(input.BusinessPartnerContactId))
                ) && 
                (
                    this.BusinessPartnerPersonalAccountId == input.BusinessPartnerPersonalAccountId ||
                    (this.BusinessPartnerPersonalAccountId != null &&
                    this.BusinessPartnerPersonalAccountId.Equals(input.BusinessPartnerPersonalAccountId))
                ) && 
                (
                    this.CustomerContactId == input.CustomerContactId ||
                    (this.CustomerContactId != null &&
                    this.CustomerContactId.Equals(input.CustomerContactId))
                ) && 
                (
                    this.CustomerPersonalAccountId == input.CustomerPersonalAccountId ||
                    (this.CustomerPersonalAccountId != null &&
                    this.CustomerPersonalAccountId.Equals(input.CustomerPersonalAccountId))
                ) && 
                (
                    this.RepresentativeUserId == input.RepresentativeUserId ||
                    (this.RepresentativeUserId != null &&
                    this.RepresentativeUserId.Equals(input.RepresentativeUserId))
                ) && 
                (
                    this.ContactPersonContactId == input.ContactPersonContactId ||
                    (this.ContactPersonContactId != null &&
                    this.ContactPersonContactId.Equals(input.ContactPersonContactId))
                ) && 
                (
                    this.Items == input.Items ||
                    this.Items != null &&
                    input.Items != null &&
                    this.Items.SequenceEqual(input.Items)
                ) && 
                (
                    this.StatusId == input.StatusId ||
                    (this.StatusId != null &&
                    this.StatusId.Equals(input.StatusId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Number != null)
                {
                    hashCode = (hashCode * 59) + this.Number.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.ReferenceNumber != null)
                {
                    hashCode = (hashCode * 59) + this.ReferenceNumber.GetHashCode();
                }
                if (this.OrderDate != null)
                {
                    hashCode = (hashCode * 59) + this.OrderDate.GetHashCode();
                }
                if (this.StartDate != null)
                {
                    hashCode = (hashCode * 59) + this.StartDate.GetHashCode();
                }
                if (this.EndDate != null)
                {
                    hashCode = (hashCode * 59) + this.EndDate.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.BillingType.GetHashCode();
                if (this.ProjectId != null)
                {
                    hashCode = (hashCode * 59) + this.ProjectId.GetHashCode();
                }
                if (this.TermOfPayment != null)
                {
                    hashCode = (hashCode * 59) + this.TermOfPayment.GetHashCode();
                }
                if (this.SubmissionDate != null)
                {
                    hashCode = (hashCode * 59) + this.SubmissionDate.GetHashCode();
                }
                if (this.Insurance != null)
                {
                    hashCode = (hashCode * 59) + this.Insurance.GetHashCode();
                }
                if (this.Creditworthiness != null)
                {
                    hashCode = (hashCode * 59) + this.Creditworthiness.GetHashCode();
                }
                if (this.CreditLimit != null)
                {
                    hashCode = (hashCode * 59) + this.CreditLimit.GetHashCode();
                }
                if (this.IsDeleted != null)
                {
                    hashCode = (hashCode * 59) + this.IsDeleted.GetHashCode();
                }
                if (this.BusinessPartnerContactId != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessPartnerContactId.GetHashCode();
                }
                if (this.BusinessPartnerPersonalAccountId != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessPartnerPersonalAccountId.GetHashCode();
                }
                if (this.CustomerContactId != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerContactId.GetHashCode();
                }
                if (this.CustomerPersonalAccountId != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerPersonalAccountId.GetHashCode();
                }
                if (this.RepresentativeUserId != null)
                {
                    hashCode = (hashCode * 59) + this.RepresentativeUserId.GetHashCode();
                }
                if (this.ContactPersonContactId != null)
                {
                    hashCode = (hashCode * 59) + this.ContactPersonContactId.GetHashCode();
                }
                if (this.Items != null)
                {
                    hashCode = (hashCode * 59) + this.Items.GetHashCode();
                }
                if (this.StatusId != null)
                {
                    hashCode = (hashCode * 59) + this.StatusId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
