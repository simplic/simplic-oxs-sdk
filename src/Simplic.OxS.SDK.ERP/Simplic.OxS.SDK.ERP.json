{
    "openapi": "3.0.1",
    "info": {
        "title": "Simplic.OxS.ERP",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://dev-oxs.simplic.io/erp-api/v1"
        }
    ],
    "paths": {
        "/CostCenter/{id}": {
            "get": {
                "tags": [
                    "CostCenter"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "CostCenter"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCostCenterRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCostCenterRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCostCenterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CostCenter"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/CostCenter": {
            "post": {
                "tags": [
                    "CostCenter"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCostCenterRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCostCenterRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCostCenterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Currency": {
            "post": {
                "tags": [
                    "Currency"
                ],
                "summary": "Creates a new currency.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Currency/{id}": {
            "patch": {
                "tags": [
                    "Currency"
                ],
                "summary": "Patches a currency.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCurrencyRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCurrencyRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCurrencyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Currency"
                ],
                "summary": "Deletes a currency.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Gets a currency by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ElectronicInvoicing/create": {
            "post": {
                "tags": [
                    "ElectronicInvoicing"
                ],
                "summary": "Creates a PDF file that constitutes a hybrid electronic invoice according to the ZUGFeRD standard from an invoice PDF file and the relevant invoice data.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateElectronicInvoiceRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateElectronicInvoiceRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateElectronicInvoiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElectronicInvoiceCreateResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElectronicInvoiceCreateResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElectronicInvoiceCreateResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ElectronicInvoicing/import": {
            "post": {
                "tags": [
                    "ElectronicInvoicing"
                ],
                "summary": "Extracts the invoice data from an electronic invoice (either ZUGFeRD hybrid electronic invoice PDF or XRechnung XML) and validates it.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportElectronicInvoiceRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportElectronicInvoiceRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportElectronicInvoiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElectronicInvoiceImportResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElectronicInvoiceImportResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElectronicInvoiceImportResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/FiscalYear": {
            "post": {
                "tags": [
                    "FiscalYear"
                ],
                "summary": "Creates a new fiscal year.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FiscalYearRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FiscalYearRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FiscalYearRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYearModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYearModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYearModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/FiscalYear/{id}": {
            "patch": {
                "tags": [
                    "FiscalYear"
                ],
                "summary": "Patches a fiscal year.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFiscalYearRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFiscalYearRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFiscalYearRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYearModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYearModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYearModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "FiscalYear"
                ],
                "summary": "Deletes a fiscal year.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "FiscalYear"
                ],
                "summary": "Gets a fiscal year by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYearModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYearModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiscalYearModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/internal/InternalCostCenter/get-by-id": {
            "get": {
                "tags": [
                    "InternalCostCenter"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenterModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/internal/InternalCurrency/get-by-id": {
            "get": {
                "tags": [
                    "InternalCurrency"
                ],
                "summary": "Get a currency by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/internal/InternalPersonalAccount/get-by-id": {
            "get": {
                "tags": [
                    "InternalPersonalAccount"
                ],
                "summary": "Gets a personal account by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OrganizationSettings": {
            "get": {
                "tags": [
                    "OrganizationSettings"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationSettingResult"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationSettingResult"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationSettingResult"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/OrganizationSettings/{internalName}": {
            "get": {
                "tags": [
                    "OrganizationSettings"
                ],
                "parameters": [
                    {
                        "name": "internalName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationSettingResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationSettingResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationSettingResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "OrganizationSettings"
                ],
                "parameters": [
                    {
                        "name": "internalName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSettingRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSettingRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSettingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PaymentMethod": {
            "post": {
                "tags": [
                    "PaymentMethod"
                ],
                "summary": "Creates a new payment method.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PaymentMethod/{id}": {
            "patch": {
                "tags": [
                    "PaymentMethod"
                ],
                "summary": "Patches a payment method.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePaymentMethodRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePaymentMethodRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePaymentMethodRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "PaymentMethod"
                ],
                "summary": "Deletes a payment method.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "PaymentMethod"
                ],
                "summary": "Gets a payment method by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PersonalAccount": {
            "post": {
                "tags": [
                    "PersonalAccount"
                ],
                "summary": "Creates a new personal account.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonalAccountRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonalAccountRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonalAccountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PersonalAccount/{id}": {
            "patch": {
                "tags": [
                    "PersonalAccount"
                ],
                "summary": "Patches a personal account.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePersonalAccountRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePersonalAccountRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePersonalAccountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "PersonalAccount"
                ],
                "summary": "Patches a personal account.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePersonalAccountRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePersonalAccountRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePersonalAccountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "PersonalAccount"
                ],
                "summary": "Deletes a personal account.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "PersonalAccount"
                ],
                "summary": "Gets a personal account by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PersonalAccount/get-by-contact-id/{contactId}": {
            "get": {
                "tags": [
                    "PersonalAccount"
                ],
                "summary": "Get all personal accounts, attached to a contact",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "Unique contact id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccountModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccountModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccountModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PersonalAccount/add-address/{id}/{contactId}": {
            "put": {
                "tags": [
                    "PersonalAccount"
                ],
                "summary": "Adds an address given by ID to a personal account.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PersonalAccount/remove-address/{id}/{contactId}": {
            "put": {
                "tags": [
                    "PersonalAccount"
                ],
                "summary": "Removes an address given by ID from a personal account.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccountModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PersonalAccount/search": {
            "get": {
                "tags": [
                    "PersonalAccount"
                ],
                "summary": "Retrieves a data page of personal accounts for comboboxes.",
                "parameters": [
                    {
                        "name": "text",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccountModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccountModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccountModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PersonalAccount/reindex": {
            "post": {
                "tags": [
                    "PersonalAccount"
                ],
                "summary": "Retrieves a data page of personal accounts for comboboxes.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccountModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccountModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccountModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TaxGroup": {
            "post": {
                "tags": [
                    "TaxGroup"
                ],
                "summary": "Creates a new tax group.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxGroupRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxGroupRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxGroupModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxGroupModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxGroupModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TaxGroup/{id}": {
            "patch": {
                "tags": [
                    "TaxGroup"
                ],
                "summary": "Patches a tax group.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaxGroupRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaxGroupRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaxGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxGroupModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxGroupModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxGroupModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TaxGroup"
                ],
                "summary": "Deletes a tax group.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "TaxGroup"
                ],
                "summary": "Gets a tax group by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxGroupModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxGroupModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxGroupModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TaxRateType": {
            "post": {
                "tags": [
                    "TaxRateType"
                ],
                "summary": "Creates a new tax rate type.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxRateTypeRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxRateTypeRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxRateTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRateTypeModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRateTypeModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRateTypeModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TaxRateType/{id}": {
            "patch": {
                "tags": [
                    "TaxRateType"
                ],
                "summary": "Patches a tax rate type.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaxRateTypeRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaxRateTypeRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaxRateTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRateTypeModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRateTypeModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRateTypeModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TaxRateType"
                ],
                "summary": "Deletes a tax rate type.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "TaxRateType"
                ],
                "summary": "Gets a tax rate type by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRateTypeModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRateTypeModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRateTypeModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TermsOfPayment": {
            "post": {
                "tags": [
                    "TermsOfPayment"
                ],
                "summary": "Creates a new terms of payment configuration.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TermsOfPaymentRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TermsOfPaymentRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TermsOfPaymentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermsOfPaymentModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermsOfPaymentModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermsOfPaymentModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TermsOfPayment/{id}": {
            "patch": {
                "tags": [
                    "TermsOfPayment"
                ],
                "summary": "Patches a terms of payment configuration.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTermsOfPaymentRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTermsOfPaymentRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTermsOfPaymentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermsOfPaymentModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermsOfPaymentModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermsOfPaymentModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TermsOfPayment"
                ],
                "summary": "Deletes a terms of payment configuration.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "TermsOfPayment"
                ],
                "summary": "Gets a terms of payment configuration by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermsOfPaymentModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermsOfPaymentModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermsOfPaymentModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Transaction": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Creates a new transaction.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTransactionRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTransactionRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Transaction/{id}": {
            "patch": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Patches a transaction.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Deletes a transaction.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Gets a transaction by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "lockResource",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Transaction/convert-transactions": {
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Converts a set of transactions.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConvertTransactionsRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConvertTransactionsRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConvertTransactionsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConvertResultModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConvertResultModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConvertResultModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Transaction/cancel": {
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Cancels a transaction.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResultModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Transaction/get-by-barcode": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Gets a transaction by barcode.",
                "parameters": [
                    {
                        "name": "barcode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Transaction/get-by-date": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Gets a set of transactions occuring between two points in time.",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "The first point in time",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "The second point in time",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Transaction/get-by-number": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Gets a set of transactions by number.",
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TransactionItemType": {
            "post": {
                "tags": [
                    "TransactionItemType"
                ],
                "summary": "Creates a new transaction item type.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionItemTypeRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionItemTypeRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionItemTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionItemTypeModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionItemTypeModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionItemTypeModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TransactionItemType/{id}": {
            "patch": {
                "tags": [
                    "TransactionItemType"
                ],
                "summary": "Patches a transaction item type.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionItemTypeRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionItemTypeRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionItemTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionItemTypeModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionItemTypeModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionItemTypeModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TransactionItemType"
                ],
                "summary": "Deletes a transaction item type.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "TransactionItemType"
                ],
                "summary": "Gets a transaction item type by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionItemTypeModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionItemTypeModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionItemTypeModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TransactionType": {
            "post": {
                "tags": [
                    "TransactionType"
                ],
                "summary": "Creates a new transaction type.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionTypeRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionTypeRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionTypeModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionTypeModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionTypeModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TransactionType/{id}": {
            "patch": {
                "tags": [
                    "TransactionType"
                ],
                "summary": "Patches a transaction type.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionTypeRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionTypeRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionTypeModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionTypeModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionTypeModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TransactionType"
                ],
                "summary": "Deletes a transaction type.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "TransactionType"
                ],
                "summary": "Gets a transaction type by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionTypeModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionTypeModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionTypeModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AssignmentMode": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "format": "int32"
            },
            "Bank": {
                "type": "object",
                "properties": {
                    "bankId": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BankAccount": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "iban": {
                        "type": "string",
                        "nullable": true
                    },
                    "bic": {
                        "type": "string",
                        "nullable": true
                    },
                    "bank": {
                        "$ref": "#/components/schemas/Bank"
                    }
                },
                "additionalProperties": false
            },
            "BankAccountRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the bank account name.",
                        "nullable": true
                    },
                    "iban": {
                        "type": "string",
                        "description": "Gets or sets the IBAN.",
                        "nullable": true
                    },
                    "bic": {
                        "type": "string",
                        "description": "Gets or sets the BIC.",
                        "nullable": true
                    },
                    "bank": {
                        "$ref": "#/components/schemas/BankRequest"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a bank account request."
            },
            "BankRequest": {
                "type": "object",
                "properties": {
                    "bankId": {
                        "type": "string",
                        "description": "Gets or sets the bank ID (= Bankleitzahl).",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the bank name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a bank request."
            },
            "BehaviorDefinitionModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "target": {
                        "type": "string",
                        "description": "Gets or sets the targeted variable.",
                        "nullable": true
                    },
                    "expression": {
                        "type": "string",
                        "description": "Gets or sets the behavior defining expression.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a behavior definition. A behavior definition is a pair of an expression and a target that is modified by the expression result.\r\n\n\r\nUsing behavior definitions the operation performed by applying an operation item can depend on the set of items assigned to it. For example if a discount only applies if the price of all assigned items is above a minimum threshold.\r\nA target can be a property whose value is set as the expression result.\r\nThe set of items the operation item applies to can be filtered. If the assigned items are targeted, the expression is interpreted as a condition to filter the items by.\r\n"
            },
            "BehaviorDefinitionRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "target": {
                        "type": "string",
                        "description": "Gets or sets the targeted variable.",
                        "nullable": true
                    },
                    "expression": {
                        "type": "string",
                        "description": "Gets or sets the behavior defining expression.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create or update a Simplic.OxS.ERP.Transaction.BehaviorDefinition"
            },
            "BillingPeriodRequest": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "string",
                        "description": "Gets or sets the point in time that marks the beginning of the billing period.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "end": {
                        "type": "string",
                        "description": "Gets or sets the point in time that marks the end of the billing period.",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Rerpesents a billing period request."
            },
            "ConvertErrorInfoModel": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Gets or sets the message.",
                        "nullable": true
                    },
                    "invalidPropertyName": {
                        "type": "string",
                        "description": "Gets or sets the name of the invalid property causing the error.",
                        "nullable": true
                    },
                    "itemId": {
                        "type": "string",
                        "description": "Gets or sets the item ID that was not found.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "bookedQuantity": {
                        "type": "number",
                        "description": "Gets or sets the booked quantity.",
                        "format": "double",
                        "nullable": true
                    },
                    "remainingQuantity": {
                        "type": "number",
                        "description": "Gets or sets the remaining quantity.",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for convert error infos."
            },
            "ConvertResultModel": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/TransactionModel"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConvertErrorInfoModel"
                        },
                        "description": "Gets or sets a set of Simplic.OxS.ERP.ConvertErrorInfo objects.",
                        "nullable": true
                    },
                    "convertStates": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TransactionConvertState"
                        },
                        "description": "Gets or sets a set of convert states.\r\nFor each converted transaction the convert state is given as the value of a dictionary entry, the key being the transaction's ID.\r\n<para></para>",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for the result of converting a transaction."
            },
            "ConvertTransactionsRequest": {
                "required": [
                    "commit",
                    "targetTypeId",
                    "transactionSubsets"
                ],
                "type": "object",
                "properties": {
                    "transactionSubsets": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "description": "Gets or sets the set of transactions mapped to their booked transaction item IDs and quantities."
                    },
                    "targetTypeId": {
                        "type": "string",
                        "description": "Gets or sets the type of the result transaction by ID.",
                        "format": "uuid"
                    },
                    "targetSubtypeId": {
                        "type": "string",
                        "description": "Gets or sets the subtype of the result transaction by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "checkCompatibleProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets the set of properties to check for each input transaction to ensure compatibility.",
                        "nullable": true
                    },
                    "commit": {
                        "type": "boolean",
                        "description": "Gets or sets the commit flag. If raised, the convert operation will be committed"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to convert a set of transactions."
            },
            "CostCenterModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the cost center.",
                        "nullable": true
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the unique number of the cost center.",
                        "format": "int32"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "Gets or sets the valid from date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "validTo": {
                        "type": "string",
                        "description": "Gets or sets the valid to date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "Gets or sets the organization id.",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the cost center is deleted."
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the create date time.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the create user id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the create user name.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the update date time.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the update user id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the udate user name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a cost center model."
            },
            "CountryCode": {
                "enum": [
                    0,
                    4,
                    8,
                    10,
                    12,
                    16,
                    20,
                    24,
                    28,
                    31,
                    32,
                    36,
                    40,
                    44,
                    48,
                    50,
                    51,
                    52,
                    56,
                    60,
                    64,
                    68,
                    70,
                    72,
                    74,
                    76,
                    84,
                    86,
                    90,
                    92,
                    96,
                    100,
                    104,
                    108,
                    112,
                    116,
                    120,
                    124,
                    132,
                    136,
                    140,
                    144,
                    148,
                    152,
                    156,
                    158,
                    162,
                    166,
                    170,
                    174,
                    175,
                    178,
                    180,
                    184,
                    188,
                    191,
                    192,
                    196,
                    203,
                    204,
                    208,
                    212,
                    214,
                    218,
                    222,
                    226,
                    231,
                    232,
                    233,
                    234,
                    238,
                    239,
                    242,
                    246,
                    248,
                    250,
                    254,
                    258,
                    260,
                    262,
                    266,
                    268,
                    270,
                    275,
                    276,
                    288,
                    292,
                    296,
                    300,
                    304,
                    308,
                    312,
                    316,
                    320,
                    324,
                    328,
                    332,
                    334,
                    336,
                    340,
                    344,
                    348,
                    352,
                    356,
                    360,
                    364,
                    368,
                    372,
                    376,
                    380,
                    384,
                    388,
                    392,
                    398,
                    400,
                    404,
                    408,
                    410,
                    414,
                    417,
                    418,
                    422,
                    426,
                    428,
                    430,
                    434,
                    438,
                    440,
                    442,
                    446,
                    450,
                    454,
                    458,
                    462,
                    466,
                    470,
                    474,
                    478,
                    480,
                    484,
                    492,
                    496,
                    498,
                    499,
                    500,
                    504,
                    508,
                    512,
                    516,
                    520,
                    524,
                    528,
                    531,
                    533,
                    534,
                    535,
                    540,
                    548,
                    554,
                    558,
                    562,
                    566,
                    570,
                    574,
                    578,
                    580,
                    581,
                    583,
                    584,
                    585,
                    586,
                    591,
                    598,
                    600,
                    604,
                    608,
                    612,
                    616,
                    620,
                    624,
                    626,
                    630,
                    634,
                    638,
                    642,
                    643,
                    646,
                    652,
                    654,
                    659,
                    660,
                    662,
                    663,
                    666,
                    670,
                    674,
                    678,
                    682,
                    686,
                    688,
                    690,
                    694,
                    702,
                    703,
                    704,
                    705,
                    706,
                    710,
                    716,
                    724,
                    728,
                    729,
                    732,
                    740,
                    744,
                    748,
                    752,
                    756,
                    760,
                    762,
                    764,
                    768,
                    772,
                    776,
                    780,
                    784,
                    788,
                    792,
                    795,
                    796,
                    798,
                    800,
                    804,
                    807,
                    818,
                    826,
                    831,
                    832,
                    833,
                    834,
                    840,
                    850,
                    854,
                    858,
                    860,
                    862,
                    876,
                    882,
                    887,
                    894,
                    999
                ],
                "type": "integer",
                "format": "int32"
            },
            "CreateCostCenterRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the cost center.",
                        "nullable": true
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the unique number of the cost center.",
                        "format": "int32"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "Gets or sets the valid from date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "validTo": {
                        "type": "string",
                        "description": "Gets or sets the valid to date",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a create cost center request."
            },
            "CreateElectronicInvoiceRequest": {
                "type": "object",
                "properties": {
                    "pdf": {
                        "type": "string",
                        "description": "Gets or sets the input PDF invoice file.\r\n\n\r\nThis is only required if ElectronicInvoiceType is set to ZUGFeRD.\r\n",
                        "format": "byte",
                        "nullable": true
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "version": {
                        "$ref": "#/components/schemas/ZUGFeRDVersion"
                    },
                    "roundingMode": {
                        "$ref": "#/components/schemas/RoundingMode"
                    },
                    "electronicInvoiceType": {
                        "$ref": "#/components/schemas/ElectronicInvoiceType"
                    },
                    "addPeppolAddress": {
                        "type": "boolean",
                        "description": "Gets or sets whether to add a PEPPOL address for buyer and seller."
                    },
                    "leitwegIdRequired": {
                        "type": "boolean",
                        "description": "Gets or sets a flag indicating if the Leitweg ID (for invoices addressed to German public institution) is required.\r\n\n\r\nIf true the buyer reference field is validated. Currently it is only checked if the buyer reference contains a value at all. \r\nSee https://en.e-rechnung-bund.de/e-invoicing-faq/buyer-reference\r\n",
                        "default": false
                    },
                    "invoiceData": {
                        "$ref": "#/components/schemas/InvoiceDataRequest"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the request containing configuration and invoice data for creating a hybrid electronic invoice according to the ZUGFeRD standard."
            },
            "CreatePersonalAccountRequest": {
                "type": "object",
                "properties": {
                    "addressContactIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets the contact id's for the addresses contained in the personal account.",
                        "nullable": true
                    },
                    "saleTermsOfPaymentId": {
                        "type": "string",
                        "description": "Gets or sets the id of the sale terms of payment.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "purchaseTermsOfPaymentId": {
                        "type": "string",
                        "description": "Gets or sets the id of the purchase terms of payment.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "taxGroupId": {
                        "type": "string",
                        "description": "Gets or sets the id of the tax group.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "gets or sets the number.",
                        "nullable": true
                    },
                    "vatId": {
                        "type": "string",
                        "description": "Gets or sets the vat id.",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the personal account type. (creditor / debitor)",
                        "nullable": true
                    },
                    "creditLimit": {
                        "$ref": "#/components/schemas/CreditLimitModel"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a personal account."
            },
            "CreateTransactionRequest": {
                "required": [
                    "creator",
                    "currencyId",
                    "date",
                    "financialAccountingPeriodId",
                    "financialPartner",
                    "invoiceRecipient",
                    "number",
                    "payer",
                    "paymentMethodId",
                    "periodId",
                    "representative",
                    "responsible",
                    "subtypeId",
                    "taxGroupId",
                    "termsOfPaymentId",
                    "typeId"
                ],
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "number": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the transaction number."
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the reference.",
                        "nullable": true
                    },
                    "typeId": {
                        "type": "string",
                        "description": "Gets or sets the type by ID.",
                        "format": "uuid"
                    },
                    "subtypeId": {
                        "type": "string",
                        "description": "Gets or sets the subtype by ID.",
                        "format": "uuid"
                    },
                    "date": {
                        "type": "string",
                        "description": "Gets or sets the time of the underlying transaction.",
                        "format": "date-time"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "description": "Gets or sets the time of delivery.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "termsOfPaymentId": {
                        "type": "string",
                        "description": "Gets or sets the terms of payment by ID.\r\n\n\r\nThe terms of payment include the payment deadline, a potential cash discount and the number of days the discount applies.\r\n",
                        "format": "uuid"
                    },
                    "paymentMethodId": {
                        "type": "string",
                        "description": "Gets or sets the payment method for this transaction given by ID.",
                        "format": "uuid"
                    },
                    "currencyId": {
                        "type": "string",
                        "description": "Gets or sets the currency used to quantify this transaction by ID.",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description.",
                        "nullable": true
                    },
                    "financialPartner": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "deliveryAddress": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "invoiceRecipient": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "payer": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "responsible": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "representative": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionItemRequest"
                        },
                        "description": "Gets or sets the items of this transaction.",
                        "nullable": true
                    },
                    "alternativePaymentDeadline": {
                        "type": "string",
                        "description": "Gets or sets an alternative payment deadline to the one defined in the terms of payment.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "balance": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "barcode": {
                        "type": "string",
                        "description": "Gets or sets the barcode.",
                        "nullable": true
                    },
                    "billToText": {
                        "type": "string",
                        "description": "Gets or sets the bill as a text.",
                        "nullable": true
                    },
                    "cashDiscountPercentValue": {
                        "type": "number",
                        "description": "Gets or sets the relative cash discount.",
                        "format": "double",
                        "nullable": true
                    },
                    "cashDiscountTotal": {
                        "type": "number",
                        "description": "Gets or sets the total cash discount.",
                        "format": "double",
                        "nullable": true
                    },
                    "financialAccountingPeriodId": {
                        "type": "string",
                        "description": "Gets or sets the financial year period of this transaction given by ID.",
                        "format": "uuid"
                    },
                    "periodId": {
                        "type": "string",
                        "description": "Gets or sets the financial year period of this transaction for inventory management given by ID.",
                        "format": "uuid"
                    },
                    "manualVAT": {
                        "$ref": "#/components/schemas/TransactionManualVatRequest"
                    },
                    "notes": {
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets notes.",
                        "nullable": true
                    },
                    "dueDate": {
                        "type": "string",
                        "description": "Gets or sets the due date.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "referenceNr": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the reference number.",
                        "nullable": true
                    },
                    "taxGroupId": {
                        "type": "string",
                        "description": "Gets or sets the tax group by ID.",
                        "format": "uuid"
                    },
                    "operationItemCombinationMode": {
                        "$ref": "#/components/schemas/OperationItemCombinationMode"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a Simplic.OxS.ERP.Transaction.Transaction."
            },
            "CreditLimitModel": {
                "type": "object",
                "properties": {
                    "insurance": {
                        "type": "number",
                        "description": "Gets the insurance amount.",
                        "format": "double"
                    },
                    "creditworthiness": {
                        "type": "string",
                        "description": "Gets the creditworthiness of the customer.",
                        "nullable": true
                    },
                    "limit": {
                        "type": "string",
                        "description": "Gets the credit limit.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the model of a credit limit."
            },
            "CurrencyCode": {
                "enum": [
                    0,
                    4,
                    8,
                    12,
                    20,
                    24,
                    31,
                    32,
                    36,
                    40,
                    44,
                    48,
                    50,
                    51,
                    52,
                    56,
                    60,
                    64,
                    68,
                    70,
                    72,
                    76,
                    84,
                    90,
                    96,
                    100,
                    104,
                    108,
                    112,
                    116,
                    124,
                    132,
                    136,
                    144,
                    152,
                    156,
                    170,
                    174,
                    180,
                    188,
                    191,
                    192,
                    196,
                    200,
                    203,
                    208,
                    214,
                    218,
                    222,
                    226,
                    230,
                    232,
                    233,
                    238,
                    242,
                    246,
                    250,
                    262,
                    268,
                    270,
                    276,
                    278,
                    288,
                    292,
                    300,
                    320,
                    324,
                    328,
                    332,
                    340,
                    344,
                    348,
                    352,
                    356,
                    360,
                    364,
                    368,
                    372,
                    376,
                    380,
                    388,
                    392,
                    398,
                    400,
                    404,
                    408,
                    410,
                    414,
                    417,
                    418,
                    422,
                    426,
                    428,
                    430,
                    434,
                    440,
                    442,
                    446,
                    450,
                    454,
                    458,
                    462,
                    466,
                    470,
                    478,
                    480,
                    484,
                    496,
                    498,
                    504,
                    508,
                    512,
                    516,
                    524,
                    528,
                    532,
                    533,
                    548,
                    554,
                    558,
                    566,
                    578,
                    586,
                    590,
                    598,
                    600,
                    604,
                    608,
                    616,
                    620,
                    624,
                    626,
                    634,
                    642,
                    643,
                    646,
                    654,
                    678,
                    682,
                    690,
                    694,
                    702,
                    703,
                    704,
                    705,
                    706,
                    710,
                    716,
                    720,
                    724,
                    728,
                    736,
                    740,
                    748,
                    752,
                    756,
                    760,
                    762,
                    764,
                    776,
                    780,
                    784,
                    788,
                    792,
                    795,
                    800,
                    804,
                    807,
                    810,
                    818,
                    826,
                    834,
                    840,
                    858,
                    860,
                    862,
                    882,
                    886,
                    890,
                    891,
                    894,
                    901,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945,
                    946,
                    947,
                    948,
                    949,
                    950,
                    951,
                    952,
                    953,
                    954,
                    955,
                    956,
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    967,
                    968,
                    969,
                    970,
                    971,
                    972,
                    973,
                    974,
                    975,
                    976,
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988,
                    989,
                    990,
                    991,
                    992,
                    993,
                    994,
                    995,
                    996,
                    997,
                    998,
                    999
                ],
                "type": "integer",
                "format": "int32"
            },
            "CurrencyModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "shortName": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "symbol": {
                        "type": "string",
                        "description": "Gets or sets the symbol representing the currency.",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the currency is created.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that created the currency.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that created the currency.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the currency is updated.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that updated the currency.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that updated the currency.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.Currency."
            },
            "CurrencyRequest": {
                "required": [
                    "name",
                    "number",
                    "shortName",
                    "symbol"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string",
                        "description": "Gets or sets the name."
                    },
                    "shortName": {
                        "maxLength": 10,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the short name."
                    },
                    "symbol": {
                        "maxLength": 5,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the symbol representing the currency."
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a Simplic.OxS.ERP.Currency."
            },
            "DiscountSurchargeMode": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "format": "int32"
            },
            "DiscountSurchargeRequest": {
                "type": "object",
                "properties": {
                    "discountSurchargeType": {
                        "$ref": "#/components/schemas/DiscountSurchargeType"
                    },
                    "discountSurchargeMode": {
                        "$ref": "#/components/schemas/DiscountSurchargeMode"
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description.",
                        "nullable": true
                    },
                    "deltaValueAbsolute": {
                        "type": "number",
                        "description": "Gets or sets the absolute delta value in case of an absolute discount/surcharge.",
                        "format": "double",
                        "nullable": true
                    },
                    "deltaValueRelative": {
                        "type": "number",
                        "description": "Gets or sets the relative delta value in case of a relative discount/surcharge.",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents an item level discount/surcharge request."
            },
            "DiscountSurchargeType": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "format": "int32"
            },
            "DueDateMode": {
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "description": "Represents the mode of handling due dates.",
                "format": "int32"
            },
            "ElectronicAddressType": {
                "enum": [
                    88,
                    204,
                    9910,
                    9922,
                    9923,
                    9924,
                    9925,
                    9926,
                    9927,
                    9928,
                    9929,
                    9930,
                    9931,
                    9932,
                    9933,
                    9934,
                    9935,
                    9936,
                    9937,
                    9938,
                    9939,
                    9940,
                    9941,
                    9942,
                    9943,
                    9944,
                    9945,
                    9946,
                    9947,
                    9948,
                    9949,
                    9950,
                    9951,
                    9952,
                    9953,
                    9955,
                    9956,
                    9957,
                    9958,
                    9959,
                    9960,
                    9961,
                    9962,
                    9963,
                    9964
                ],
                "type": "integer",
                "format": "int32"
            },
            "ElectronicInvoiceCreateResult": {
                "type": "object",
                "properties": {
                    "electronicInvoice": {
                        "type": "string",
                        "format": "byte",
                        "nullable": true
                    },
                    "validationResult": {
                        "$ref": "#/components/schemas/InvoiceValidationResult"
                    }
                },
                "additionalProperties": false
            },
            "ElectronicInvoiceImportResult": {
                "type": "object",
                "properties": {
                    "invoiceData": {
                        "$ref": "#/components/schemas/ImportedInvoiceData"
                    },
                    "validationResult": {
                        "$ref": "#/components/schemas/InvoiceValidationResult"
                    },
                    "xml": {
                        "type": "string",
                        "format": "byte",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ElectronicInvoiceType": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "format": "int32"
            },
            "ElectronicInvoicingPaymentMethodRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/PaymentMethodType"
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description.",
                        "nullable": true
                    },
                    "sepaCreditorIdentifier": {
                        "type": "string",
                        "description": "Gets or sets the SEPA creditor identifier (= Gl\u00e4ubiger-Identifikationsnummer https://de.wikipedia.org/wiki/Gl%C3%A4ubiger-Identifikationsnummer).",
                        "nullable": true
                    },
                    "sepaMandateReference": {
                        "type": "string",
                        "description": "Gets or sets the SEPA mandate reference (= Mandatsreferenz https://de.wikipedia.org/wiki/Mandatsreferenz).",
                        "nullable": true
                    },
                    "cardNumber": {
                        "type": "string",
                        "description": "Gets or sets the credit/debit card number.",
                        "nullable": true
                    },
                    "cardHolderName": {
                        "type": "string",
                        "description": "Gets or sets the credit/debit card card holder.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a payment method request."
            },
            "ElectronicInvoicingTermsOfPaymentRequest": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description/name.",
                        "nullable": true
                    },
                    "paymentDue": {
                        "type": "string",
                        "description": "Gets or sets the point in time when the payment is due.",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a terms of payment request."
            },
            "ErrorInfoModel": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Gets or sets the error information represented by a text.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for information concerning an error that occured while performing an operation."
            },
            "ExportCostQuantityType": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "Represents the export cost quantity type.\r\n<list type=\"bullet\"><item>\r\nNo = 0\r\n</item><item>\r\nExactValue = 1\r\n</item><item>\r\nAbsoluteValue = 2\r\n</item></list>",
                "format": "int32"
            },
            "FiscalYearModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Gets or sets the point in time the fiscal year begins.",
                        "format": "date-time"
                    },
                    "to": {
                        "type": "string",
                        "description": "Gets or sets the point in time the fiscal year ends.",
                        "format": "date-time"
                    },
                    "periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PeriodModel"
                        },
                        "description": "Gets or sets the contained periods.",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the fiscal year is created.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that created the fiscal year.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that created the fiscal year.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the fiscal year is updated.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that updated the fiscal year.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that updated the fiscal year.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.FiscalYear."
            },
            "FiscalYearRequest": {
                "required": [
                    "from",
                    "name",
                    "number",
                    "periods",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string",
                        "description": "Gets or sets the name."
                    },
                    "from": {
                        "type": "string",
                        "description": "Gets or sets the point in time the fiscal year begins.",
                        "format": "date-time"
                    },
                    "to": {
                        "type": "string",
                        "description": "Gets or sets the point in time the fiscal year ends.",
                        "format": "date-time"
                    },
                    "periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PeriodRequest"
                        },
                        "description": "Gets or sets the contained periods."
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a Simplic.OxS.ERP.FiscalYear."
            },
            "ImportElectronicInvoiceRequest": {
                "type": "object",
                "properties": {
                    "fileToImport": {
                        "type": "string",
                        "description": "Gets or sets the electronic invoice file to import as a byte array (ZUGFeRD PDF or XRechnung XML).",
                        "format": "byte",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request for importing an electronic invoice (extracting and validating electronic invoice data)."
            },
            "ImportedBillingPeriod": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ImportedDiscountSurcharge": {
                "type": "object",
                "properties": {
                    "discountSurchargeType": {
                        "$ref": "#/components/schemas/DiscountSurchargeType"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "basisAmount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "discountSurchargeAmount": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "ImportedInvoiceData": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliveryDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "billingPeriod": {
                        "$ref": "#/components/schemas/ImportedBillingPeriod"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/CurrencyCode"
                    },
                    "totals": {
                        "$ref": "#/components/schemas/ImportedTotals"
                    },
                    "businessProcess": {
                        "type": "string",
                        "nullable": true
                    },
                    "referenceNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "buyerReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "buyer": {
                        "$ref": "#/components/schemas/ImportedParty"
                    },
                    "seller": {
                        "$ref": "#/components/schemas/ImportedParty"
                    },
                    "debitorBankAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccount"
                        },
                        "nullable": true
                    },
                    "creditorBankAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccount"
                        },
                        "nullable": true
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "paymentMethod": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    },
                    "termsOfPayment": {
                        "$ref": "#/components/schemas/TermsOfPayment"
                    },
                    "taxes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportedTax"
                        },
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/InvoiceType"
                    },
                    "textItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportedInvoiceItemText"
                        },
                        "nullable": true
                    },
                    "billableItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportedInvoiceItemBillable"
                        },
                        "nullable": true
                    },
                    "discountsSurcharges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportedInvoiceDiscountSurcharge"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ImportedInvoiceDiscountSurcharge": {
                "type": "object",
                "properties": {
                    "discountSurchargeType": {
                        "$ref": "#/components/schemas/DiscountSurchargeType"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "basisAmount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "discountSurchargeAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "taxType": {
                        "$ref": "#/components/schemas/TaxType"
                    },
                    "taxCategory": {
                        "$ref": "#/components/schemas/TaxCategory"
                    },
                    "taxRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ImportedInvoiceItemBillable": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantityUnit": {
                        "$ref": "#/components/schemas/QuantityCode"
                    },
                    "articleName": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "taxType": {
                        "$ref": "#/components/schemas/TaxType"
                    },
                    "taxCategory": {
                        "$ref": "#/components/schemas/TaxCategory"
                    },
                    "discountsSurcharges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportedDiscountSurcharge"
                        },
                        "nullable": true
                    },
                    "taxRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "singlePriceNetBase": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "singlePriceNet": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPriceNet": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ImportedInvoiceItemText": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ImportedParty": {
                "type": "object",
                "properties": {
                    "contactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipcode": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "street": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "emailAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "faxNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "taxRegistrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRegistration"
                        },
                        "nullable": true
                    },
                    "electronicAddressType": {
                        "$ref": "#/components/schemas/ElectronicAddressType"
                    }
                },
                "additionalProperties": false
            },
            "ImportedTax": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/TaxType"
                    },
                    "category": {
                        "$ref": "#/components/schemas/TaxCategory"
                    },
                    "rate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "basisAmount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "taxAmount": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "ImportedTotals": {
                "type": "object",
                "properties": {
                    "totalPriceNet": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPriceNetWithoutInvoiceDiscountsSurcharges": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPriceGross": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPriceTax": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPriceDiscount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPriceSurcharge": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "InputPriceType": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "description": "Represents a mode of interpretation for the user price input for price transaction items.",
                "format": "int32"
            },
            "InvoiceDataRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the invoice number.",
                        "nullable": true
                    },
                    "invoiceDate": {
                        "type": "string",
                        "description": "Gets or sets the invoice date.",
                        "format": "date-time"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "description": "Gets or sets the delivery date.",
                        "format": "date-time"
                    },
                    "billingPeriod": {
                        "$ref": "#/components/schemas/BillingPeriodRequest"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/CurrencyCode"
                    },
                    "businessProcess": {
                        "type": "string",
                        "description": "Gets or sets the business process.",
                        "nullable": true
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Gets or sets the reference number.",
                        "nullable": true
                    },
                    "buyerReference": {
                        "type": "string",
                        "description": "Gets or sets the buyer reference.\r\n\n\r\nThis is where the Leitweg-ID for German public institution invoices needs to be passed. \r\nSee https://en.e-rechnung-bund.de/e-invoicing-faq/buyer-reference\r\n",
                        "nullable": true
                    },
                    "buyer": {
                        "$ref": "#/components/schemas/PartyRequest"
                    },
                    "seller": {
                        "$ref": "#/components/schemas/PartyRequest"
                    },
                    "debitorBankAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccountRequest"
                        },
                        "description": "Gets or sets the debitor bank accounts.",
                        "nullable": true
                    },
                    "creditorBankAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccountRequest"
                        },
                        "description": "Gets or sets the creditor bank accounts.",
                        "nullable": true
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets the notes.",
                        "nullable": true
                    },
                    "paymentMethod": {
                        "$ref": "#/components/schemas/ElectronicInvoicingPaymentMethodRequest"
                    },
                    "termsOfPayment": {
                        "$ref": "#/components/schemas/ElectronicInvoicingTermsOfPaymentRequest"
                    },
                    "taxes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRequest"
                        },
                        "description": "Gets or sets the taxes.",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/InvoiceType"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceItemRequest"
                        },
                        "description": "Gets or sets the set of invoice items.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the request object for the data contained in an electronic invoice."
            },
            "InvoiceItemRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "nullable": true
                    },
                    "text": {
                        "type": "string",
                        "description": "Gets or sets the text.",
                        "nullable": true
                    },
                    "quantityUnit": {
                        "$ref": "#/components/schemas/QuantityCode"
                    },
                    "articleName": {
                        "type": "string",
                        "description": "Gets or sets the article name.",
                        "nullable": true
                    },
                    "singlePriceNetBase": {
                        "type": "number",
                        "description": "Gets or sets the single price excluding discounts and surcharges.",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPriceNetBase": {
                        "type": "number",
                        "description": "Gets or sets the total price excluding discounts and surcharges.\r\n\n\r\nTotalPriceBase corresponds to the ZUGFeRD property GrossPriceProductTradePrice.\r\n",
                        "format": "double",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Gets or sets the quantity.",
                        "format": "double",
                        "nullable": true
                    },
                    "taxType": {
                        "$ref": "#/components/schemas/TaxType"
                    },
                    "taxCategory": {
                        "$ref": "#/components/schemas/TaxCategory"
                    },
                    "discountsSurcharges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DiscountSurchargeRequest"
                        },
                        "description": "Gets or sets the item level discounts and surcharges.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the request object for an electronic invoice item."
            },
            "InvoiceType": {
                "enum": [
                    0,
                    84,
                    261,
                    326,
                    380,
                    381,
                    383,
                    384,
                    386,
                    389,
                    457,
                    751,
                    875,
                    876,
                    877,
                    1380
                ],
                "type": "integer",
                "format": "int32"
            },
            "InvoiceValidationResult": {
                "type": "object",
                "properties": {
                    "validationErrors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "valid": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ModelAssignmentMode": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "Represents a mode of assigning transaction items to operation transaction items.\r\n\n\r\nThis type name had to be changed from AssignmentMode to ModelAssignmentMode to avoid a \"Failed to load API definition\" error.\r\n",
                "format": "int32"
            },
            "ModelValueOperator": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "description": "Represents a mode of applying operation transaction items to their assigned transaction items.\r\n\n\r\nThis type name had to be changed from ValueOperator to ModelValueOperator to avoid a \"Failed to load API definition\" error.\r\n",
                "format": "int32"
            },
            "OperationItemCombinationMode": {
                "enum": [
                    0
                ],
                "type": "integer",
                "description": "Represents a mode of applying multiple operation items to a transaction.",
                "format": "int32"
            },
            "OrganizationSettingResult": {
                "type": "object",
                "properties": {
                    "internalName": {
                        "type": "string",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "displayKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "nullable": true
                    },
                    "defaultValue": {
                        "nullable": true
                    },
                    "valueTypeName": {
                        "type": "string",
                        "nullable": true
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettingOption"
                        },
                        "nullable": true
                    },
                    "hasOptions": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "groupKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "groupDisplayKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "groupDisplayName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PartyRequest": {
                "type": "object",
                "properties": {
                    "contactName": {
                        "type": "string",
                        "description": "Gets or sets the contact name.",
                        "nullable": true
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Gets or sets the company name.",
                        "nullable": true
                    },
                    "zipcode": {
                        "type": "string",
                        "description": "Gets or sets the zipcode.",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "description": "Gets or sets the city.",
                        "nullable": true
                    },
                    "street": {
                        "type": "string",
                        "description": "Gets or sets the street.",
                        "nullable": true
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "emailAddress": {
                        "type": "string",
                        "description": "Gets or sets the email address.",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Gets or sets the phone number.",
                        "nullable": true
                    },
                    "faxNumber": {
                        "type": "string",
                        "description": "Gets or sets the fax number.",
                        "nullable": true
                    },
                    "taxRegistrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRegistrationRequest"
                        },
                        "description": "Gets or sets the set of tax registrations.",
                        "nullable": true
                    },
                    "electronicAddressType": {
                        "$ref": "#/components/schemas/ElectronicAddressType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents either the seller or buyer party in an electronic invoice."
            },
            "PaymentMethod": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/PaymentMethodType"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "sepaCreditorIdentifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "sepaMandateReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "cardNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "cardHolderName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PaymentMethodModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the payment method is created.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that created the payment method.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that created the payment method.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the payment method is updated.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that updated the payment method.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that updated the payment method.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.PaymentMethod."
            },
            "PaymentMethodRequest": {
                "required": [
                    "name",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string",
                        "description": "Gets or sets the name."
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a Simplic.OxS.ERP.PaymentMethod."
            },
            "PaymentMethodType": {
                "enum": [
                    0,
                    1,
                    3,
                    10,
                    20,
                    30,
                    31,
                    42,
                    48,
                    49,
                    57,
                    58,
                    59,
                    97
                ],
                "type": "integer",
                "format": "int32"
            },
            "PeriodModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets a number representing the chronological location of this PeriodModel.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Gets or sets the point in time the PeriodModel begins.",
                        "format": "date-time"
                    },
                    "to": {
                        "type": "string",
                        "description": "Gets or sets the point in time the PeriodModel ends.",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/PeriodStatus"
                    }
                },
                "additionalProperties": false
            },
            "PeriodRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets a number representing the chronological location of this period.",
                        "format": "int32",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Gets or sets the point in time the period begins.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Gets or sets the point in time the period ends.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/PeriodStatus"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets the deleted flag.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create or update a Simplic.OxS.ERP.Period."
            },
            "PeriodStatus": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "description": "Represents the state of a Simplic.OxS.ERP.Server.PeriodModel.",
                "format": "int32"
            },
            "PersonalAccountAddressModel": {
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "string",
                        "description": "Gets or sets the contact id for the contact the address is based on.",
                        "format": "uuid"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Gets or sets the first name.",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Gets or sets the last name.",
                        "nullable": true
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Gets or sets the company name.",
                        "nullable": true
                    },
                    "additional01": {
                        "type": "string",
                        "description": "Gets or sets the first additional data.",
                        "nullable": true
                    },
                    "additional02": {
                        "type": "string",
                        "description": "Gets or sets the second additional data.",
                        "nullable": true
                    },
                    "street": {
                        "type": "string",
                        "description": "Gets or sets the street.",
                        "nullable": true
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "Gets or sets the house number.",
                        "nullable": true
                    },
                    "zipcode": {
                        "type": "string",
                        "description": "Gets or sets the zipcode.",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "description": "Gets or sets the city.",
                        "nullable": true
                    },
                    "district": {
                        "type": "string",
                        "description": "Gets or sets the district.",
                        "nullable": true
                    },
                    "federalState": {
                        "type": "string",
                        "description": "Gets or sets the federal state of the address.",
                        "nullable": true
                    },
                    "countryIso": {
                        "type": "string",
                        "description": "Gets or sets the country iso.",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Gets or sets the latitude.",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Gets or sets the longitude.",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the model for a personal account address."
            },
            "PersonalAccountModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "string",
                        "description": "gets or sets the number.",
                        "nullable": true
                    },
                    "vatId": {
                        "type": "string",
                        "description": "Gets or sets the vat id.",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the personal account type. (creditor / debitor)",
                        "nullable": true
                    },
                    "creditLimit": {
                        "$ref": "#/components/schemas/CreditLimitModel"
                    },
                    "saleTermsOfPayment": {
                        "$ref": "#/components/schemas/TermsOfPaymentModel"
                    },
                    "purchaseTermsOfPayment": {
                        "$ref": "#/components/schemas/TermsOfPaymentModel"
                    },
                    "taxGroup": {
                        "$ref": "#/components/schemas/TaxGroupModel"
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PersonalAccountAddressModel"
                        },
                        "description": "Gets or sets the addresses.\r\n\n\r\nA personal account can contain multiple addresses.\r\n",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the create date time.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the create user id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the create user name.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the update date time.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the update user id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the udate user name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.PersonalAccount."
            },
            "ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": {}
            },
            "Profile": {
                "enum": [
                    1,
                    2,
                    4,
                    8,
                    16,
                    32,
                    64,
                    128,
                    65536
                ],
                "type": "integer",
                "format": "int32"
            },
            "QuantityCode": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                ],
                "type": "integer",
                "format": "int32"
            },
            "QuantityUnitModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.QuantityUnit."
            },
            "RoundingMode": {
                "enum": [
                    0
                ],
                "type": "integer",
                "format": "int32"
            },
            "SettingOption": {
                "type": "object",
                "properties": {
                    "value": {
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "displayKey": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "StringTransactionPriceObjectModelKeyValuePair": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "$ref": "#/components/schemas/TransactionPriceObjectModel"
                    }
                },
                "additionalProperties": false
            },
            "TaxCategory": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21
                ],
                "type": "integer",
                "format": "int32"
            },
            "TaxGroupCountryModel": {
                "type": "object",
                "properties": {
                    "isoCode": {
                        "type": "string",
                        "description": "Gets or sets the ISO code.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.TaxGroupCountry."
            },
            "TaxGroupModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxGroupCountryModel"
                        },
                        "description": "Gets or sets the set of countries.",
                        "nullable": true
                    },
                    "taxRates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRateModel"
                        },
                        "description": "Gets or sets the tax rates for this tax group.",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the tax group is created.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that created the tax group.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that created the tax group.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the tax group is updated.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that updated the tax group.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that updated the tax group.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.TaxGroup."
            },
            "TaxGroupRequest": {
                "required": [
                    "countryIsoCodes",
                    "name",
                    "number",
                    "taxRates"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string",
                        "description": "Gets or sets the name."
                    },
                    "countryIsoCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets the set of countries given by ISO code."
                    },
                    "taxRates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRateRequest"
                        },
                        "description": "Gets or sets the tax rates for this tax group."
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a Simplic.OxS.ERP.TaxGroup."
            },
            "TaxRateModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TaxRateTypeModel"
                    },
                    "value": {
                        "type": "number",
                        "description": "Gets or sets the tax rate value given in percent.",
                        "format": "double"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "Gets or sets the point in time this tax rate is valid from.",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.TaxRate."
            },
            "TaxRateRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "typeId": {
                        "type": "string",
                        "description": "Gets or sets the tax rate type given by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "value": {
                        "type": "number",
                        "description": "Gets or sets the tax rate value given in percent.",
                        "format": "double",
                        "nullable": true
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "Gets or sets the point in time this tax rate is valid from.",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create or update a Simplic.OxS.ERP.TaxRate."
            },
            "TaxRateTypeModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the tax rate type is created.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that created the tax rate type.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that created the tax rate type.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the tax rate type is updated.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that updated the tax rate type.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that updated the tax rate type.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.TaxRateType."
            },
            "TaxRateTypeRequest": {
                "required": [
                    "name",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string",
                        "description": "Gets or sets the name."
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a Simplic.OxS.ERP.TaxRateType."
            },
            "TaxRegistration": {
                "type": "object",
                "properties": {
                    "taxRegistrationMode": {
                        "$ref": "#/components/schemas/TaxRegistrationMode"
                    },
                    "taxId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TaxRegistrationMode": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "format": "int32"
            },
            "TaxRegistrationRequest": {
                "type": "object",
                "properties": {
                    "taxRegistrationMode": {
                        "$ref": "#/components/schemas/TaxRegistrationMode"
                    },
                    "taxId": {
                        "type": "string",
                        "description": "Gets or sets the ID used in the tax registration.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the request object for a tax registration according to ZUGFeRD standard."
            },
            "TaxRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/TaxType"
                    },
                    "category": {
                        "$ref": "#/components/schemas/TaxCategory"
                    },
                    "rate": {
                        "type": "number",
                        "description": "Gets or sets the tax rate in percent.",
                        "format": "double"
                    },
                    "assignedItems": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets the billable invoice items assigned to the tax by ID.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the request object for a tax."
            },
            "TaxType": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54
                ],
                "type": "integer",
                "format": "int32"
            },
            "TermsOfPayment": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymentDue": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TermsOfPaymentModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the create date time.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the create user id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the create user name.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the update date time.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the update user id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the update user name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.TermsOfPayment."
            },
            "TermsOfPaymentRequest": {
                "required": [
                    "name",
                    "number",
                    "paymentDeadlineDays"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string",
                        "description": "Gets or sets the name."
                    },
                    "cashDiscount": {
                        "type": "number",
                        "description": "Gets or sets the cash discount quantity.",
                        "format": "double"
                    },
                    "cashDiscountDays": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Gets or sets the number of days the cash discount applies for.",
                        "format": "int32"
                    },
                    "paymentDeadlineDays": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Gets or sets the number of days until payment deadline.",
                        "format": "int32"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a set of states that apply to the terms of payment.\r\n\n\r\nExamples for states are: outgoing, incoming\r\n",
                        "nullable": true
                    },
                    "formattedText": {
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the formatted text.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a Simplic.OxS.ERP.TermsOfPayment configuration."
            },
            "TransactionAddressModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number.",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "street": {
                        "type": "string",
                        "description": "Gets or sets the street.",
                        "nullable": true
                    },
                    "zipcode": {
                        "type": "string",
                        "description": "Gets or sets the zipcode.",
                        "nullable": true
                    },
                    "district": {
                        "type": "string",
                        "description": "Gets or sets the district.",
                        "nullable": true
                    },
                    "federalState": {
                        "type": "string",
                        "description": "Gets or sets the land. E.g. lower saxony or bavaria.",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "description": "Gets or sets the country.",
                        "nullable": true
                    },
                    "countryIso": {
                        "type": "string",
                        "description": "Gets or sets the country ISO.",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "description": "Gets or sets the city.",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Gets or sets the latitude.",
                        "format": "double",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Gets or sets the longitude.",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for an address in a transaction."
            },
            "TransactionContactModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "accountNumber": {
                        "type": "string",
                        "description": "Gets or sets the account number.",
                        "nullable": true
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Gets or sets the company name.",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Gets or sets the first name.",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Gets or sets the last name.",
                        "nullable": true
                    },
                    "address": {
                        "$ref": "#/components/schemas/TransactionAddressModel"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a contact in a transaction."
            },
            "TransactionContactRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the contact ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "personalAccountId": {
                        "type": "string",
                        "description": "Gets or sets the personal account ID.",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create or update a contact in a transaction."
            },
            "TransactionConvertState": {
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "description": "Represents the degree to which a N:Simplic.OxS.ERP.Transaction has been converted.",
                "format": "int32"
            },
            "TransactionDocumentModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a document in a transaction."
            },
            "TransactionItemModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "text": {
                        "type": "string",
                        "description": "Gets or sets the text.",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransactionItemTypeModel"
                    },
                    "bookedFromTransactionId": {
                        "type": "string",
                        "description": "Gets or sets the transaction this item has been booked from by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "transactionItemCollectionId": {
                        "type": "string",
                        "description": "Gets or sets the Simplic.OxS.ERP.TransactionItemCollection.TransactionItemCollection this transaction item is part of by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "sortNumber": {
                        "type": "integer",
                        "description": "Gets or sets the sort number.",
                        "format": "int32"
                    },
                    "deserializationType": {
                        "type": "string",
                        "description": "Gets or sets an identifier for the type of the item for correct deserialization.",
                        "nullable": true
                    },
                    "assignedTransactionItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionItemModel"
                        },
                        "nullable": true
                    },
                    "valueOperator": {
                        "$ref": "#/components/schemas/ModelValueOperator"
                    },
                    "assignmentMode": {
                        "$ref": "#/components/schemas/ModelAssignmentMode"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Gets the amount the operation item results in.\r\n\n\r\nThe amount can be positive or negative representing a surcharge or a discount.\r\n",
                        "format": "double",
                        "nullable": true
                    },
                    "behaviorDefinitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BehaviorDefinitionModel"
                        },
                        "description": "Gets or sets a set of Simplic.OxS.ERP.Server.BehaviorDefinitionModel",
                        "nullable": true
                    },
                    "originalOperationItem": {
                        "$ref": "#/components/schemas/TransactionItemModel"
                    },
                    "inputPrice": {
                        "type": "number",
                        "description": "Gets or sets the price user input.",
                        "format": "double",
                        "nullable": true
                    },
                    "inputPriceType": {
                        "$ref": "#/components/schemas/InputPriceType"
                    },
                    "singlePrice": {
                        "type": "number",
                        "description": "Gets or sets the resulting single price.",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPrice": {
                        "type": "number",
                        "description": "Gets or sets the resulting total price.",
                        "format": "double",
                        "nullable": true
                    },
                    "singlePriceNet": {
                        "type": "number",
                        "description": "Gets or sets the resulting net single price.",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPriceNet": {
                        "type": "number",
                        "description": "Gets or sets the resulting net total price.",
                        "format": "double",
                        "nullable": true
                    },
                    "singlePriceGross": {
                        "type": "number",
                        "description": "Gets or sets the gross single price.",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPriceGross": {
                        "type": "number",
                        "description": "Gets or sets the gross total price.",
                        "format": "double",
                        "nullable": true
                    },
                    "singlePriceVat": {
                        "type": "number",
                        "description": "Gets or sets the VAT contained in the net single price.",
                        "format": "double",
                        "nullable": true
                    },
                    "totalPriceVat": {
                        "type": "number",
                        "description": "Gets or sets the VAT contained in the net total price.",
                        "format": "double",
                        "nullable": true
                    },
                    "pricing": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StringTransactionPriceObjectModelKeyValuePair"
                        },
                        "description": "Gets or sets a set of Simplic.OxS.ERP.Server.TransactionPriceObjectModel representing the price development history.\r\n\n\r\nEach tuple represents the transaction item pricing data resulting from a specific operation. The list contains the tuples in the order these operation are applied in.\r\n",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Gets or sets the quantity.",
                        "format": "double",
                        "nullable": true
                    },
                    "unit": {
                        "$ref": "#/components/schemas/QuantityUnitModel"
                    },
                    "articleId": {
                        "type": "string",
                        "description": "Gets or sets the article by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "deltaValue": {
                        "type": "number",
                        "description": "Gets or sets the discount/surcharge value as an absolute price value or a percentage value depending on the value operator.",
                        "format": "double",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionItemModel"
                        },
                        "description": "Gets or sets a set of transaction items that are part of the group.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a transaction item."
            },
            "TransactionItemRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "text": {
                        "type": "string",
                        "description": "Gets or sets the text.",
                        "nullable": true
                    },
                    "typeId": {
                        "type": "string",
                        "description": "Gets or sets the item type by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "sortNumber": {
                        "type": "integer",
                        "description": "Gets or sets the sort number.",
                        "format": "int32",
                        "nullable": true
                    },
                    "deserializationType": {
                        "type": "string",
                        "description": "Gets or sets an identifier for the type of the item for correct deserialization.",
                        "nullable": true
                    },
                    "valueOperator": {
                        "$ref": "#/components/schemas/ValueOperator"
                    },
                    "assignmentMode": {
                        "$ref": "#/components/schemas/AssignmentMode"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Gets the amount the operation item results in.\r\n\n\r\nThe amount can be positive or negative representing a surcharge or a discount.\r\n",
                        "format": "double",
                        "nullable": true
                    },
                    "behaviorDefinitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BehaviorDefinitionRequest"
                        },
                        "description": "Gets or sets a set of Simplic.OxS.ERP.Server.BehaviorDefinitionRequest.",
                        "nullable": true
                    },
                    "inputPrice": {
                        "type": "number",
                        "description": "Gets or sets the price user input.",
                        "format": "double",
                        "nullable": true
                    },
                    "inputPriceType": {
                        "$ref": "#/components/schemas/InputPriceType"
                    },
                    "quantity": {
                        "minimum": 0,
                        "type": "number",
                        "description": "Gets or sets the quantity.",
                        "format": "double",
                        "nullable": true
                    },
                    "unitId": {
                        "type": "string",
                        "description": "Gets or sets the unit the quantity is measured in by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "articleId": {
                        "type": "string",
                        "description": "Gets or sets the article by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "deltaValue": {
                        "type": "number",
                        "description": "Gets or sets the discount/surcharge value as an absolute price value or a percentage value depending on the value operator.",
                        "format": "double",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionItemRequest"
                        },
                        "description": "Gets or sets a set of transaction items that are part of the group.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create or update a transaction item of a Simplic.OxS.ERP.Transaction.Transaction."
            },
            "TransactionItemTypeModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "hasPositionNumber": {
                        "type": "boolean",
                        "description": "Gets or sets the has position number flag."
                    },
                    "isSelectable": {
                        "type": "boolean",
                        "description": "Gets or sets the is selectable flag."
                    },
                    "detailHtml": {
                        "type": "string",
                        "description": "Gets or sets the detail HTML.",
                        "nullable": true
                    },
                    "dataTemplate": {
                        "type": "string",
                        "description": "Gets or sets the data template.",
                        "nullable": true
                    },
                    "articleGLAResolver": {
                        "type": "string",
                        "description": "Gets or sets the article GLA resolver.",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the transaction item type is created.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that created the transaction item type.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that created the transaction item type.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the transaction item type is updated.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that updated the transaction item type.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that updated the transaction item type.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a transaction item type."
            },
            "TransactionItemTypeRequest": {
                "required": [
                    "hasPositionNumber",
                    "isSelectable",
                    "name",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string",
                        "description": "Gets or sets the name."
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "hasPositionNumber": {
                        "type": "boolean",
                        "description": "Gets or sets the has position number flag."
                    },
                    "isSelectable": {
                        "type": "boolean",
                        "description": "Gets or sets the is selectable flag."
                    },
                    "detailHtml": {
                        "maxLength": 10000,
                        "type": "string",
                        "description": "Gets or sets the detail HTML.",
                        "nullable": true
                    },
                    "dataTemplate": {
                        "maxLength": 1000,
                        "type": "string",
                        "description": "Gets or sets the data template.",
                        "nullable": true
                    },
                    "articleGLAResolver": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Gets or sets the article GLA resolver.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a transaction item type."
            },
            "TransactionManualVatModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "Gets or sets the value.",
                        "format": "double"
                    },
                    "date": {
                        "type": "string",
                        "description": "Gets or sets the date.",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/TransactionUserModel"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a manual VAT setting in a transaction."
            },
            "TransactionManualVatRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "Gets or sets the value.",
                        "format": "double"
                    },
                    "date": {
                        "type": "string",
                        "description": "Gets or sets the date.",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create or update a manual VAT setting in a transaction."
            },
            "TransactionModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the transaction number.",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the reference.",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransactionTransactionTypeModel"
                    },
                    "date": {
                        "type": "string",
                        "description": "Gets or sets the time of the underlying transaction.",
                        "format": "date-time"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "description": "Gets or sets the time of delivery.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "termsOfPayment": {
                        "$ref": "#/components/schemas/TermsOfPaymentModel"
                    },
                    "paymentMethod": {
                        "$ref": "#/components/schemas/PaymentMethodModel"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/CurrencyModel"
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description.",
                        "nullable": true
                    },
                    "financialPartner": {
                        "$ref": "#/components/schemas/TransactionContactModel"
                    },
                    "deliveryAddress": {
                        "$ref": "#/components/schemas/TransactionContactModel"
                    },
                    "invoiceRecipient": {
                        "$ref": "#/components/schemas/TransactionContactModel"
                    },
                    "payer": {
                        "$ref": "#/components/schemas/TransactionContactModel"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/TransactionContactModel"
                    },
                    "responsible": {
                        "$ref": "#/components/schemas/TransactionContactModel"
                    },
                    "representative": {
                        "$ref": "#/components/schemas/TransactionContactModel"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionItemModel"
                        },
                        "description": "Gets or sets the items of this transaction.",
                        "nullable": true
                    },
                    "convertState": {
                        "$ref": "#/components/schemas/TransactionConvertState"
                    },
                    "alternativePaymentDeadline": {
                        "type": "string",
                        "description": "Gets or sets an alternative payment deadline to the one defined in the terms of payment.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "balance": {
                        "type": "number",
                        "description": "Gets or sets the balance.",
                        "format": "double"
                    },
                    "barcode": {
                        "type": "string",
                        "description": "Gets or sets the barcode.",
                        "nullable": true
                    },
                    "billToText": {
                        "type": "string",
                        "description": "Gets or sets the bill as a text.",
                        "nullable": true
                    },
                    "cashDiscountPercentValue": {
                        "type": "number",
                        "description": "Gets or sets the relative cash discount.",
                        "format": "double"
                    },
                    "cashDiscountTotal": {
                        "type": "number",
                        "description": "Gets or sets the total cash discount.",
                        "format": "double"
                    },
                    "document": {
                        "$ref": "#/components/schemas/TransactionDocumentModel"
                    },
                    "financialAccountingPeriod": {
                        "$ref": "#/components/schemas/TransactionPeriodModel"
                    },
                    "period": {
                        "$ref": "#/components/schemas/TransactionPeriodModel"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a set of states the transaction is in.\r\n\n\r\nExamples for states are: cancelled, exported, gross, paid, printed, transferredToAccounting\r\n",
                        "nullable": true
                    },
                    "manualVat": {
                        "$ref": "#/components/schemas/TransactionManualVatModel"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Gets or sets notes.",
                        "nullable": true
                    },
                    "dueDate": {
                        "type": "string",
                        "description": "Gets or sets the due date.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "referenceNr": {
                        "type": "string",
                        "description": "Gets or sets the reference number.",
                        "nullable": true
                    },
                    "taxGroup": {
                        "$ref": "#/components/schemas/TaxGroupModel"
                    },
                    "totalPrice": {
                        "type": "number",
                        "description": "Gets or sets the total price.",
                        "format": "double"
                    },
                    "totalPriceGross": {
                        "type": "number",
                        "description": "Gets or sets the gross total price.",
                        "format": "double"
                    },
                    "totalPriceNet": {
                        "type": "number",
                        "description": "Gets or sets the net total price.",
                        "format": "double"
                    },
                    "totalPriceTax": {
                        "type": "number",
                        "description": "Gets or sets the total price tax.",
                        "format": "double"
                    },
                    "transactionYear": {
                        "type": "integer",
                        "description": "Gets or sets the transaction year.",
                        "format": "int32"
                    },
                    "updateUser": {
                        "$ref": "#/components/schemas/TransactionUserModel"
                    },
                    "signedTotalPriceNet": {
                        "type": "number",
                        "description": "Gets or sets the net signed total price.",
                        "format": "double"
                    },
                    "signedTotalPriceGross": {
                        "type": "number",
                        "description": "Gets or sets the gross signed total price.",
                        "format": "double"
                    },
                    "signedTotalPrice": {
                        "type": "number",
                        "description": "Gets or sets the signed total price.",
                        "format": "double"
                    },
                    "signedTotalPriceTax": {
                        "type": "number",
                        "description": "Gets or sets the signed total price tax.",
                        "format": "double"
                    },
                    "sign": {
                        "type": "integer",
                        "description": "Gets or sets the total price value sign.\r\n\n\r\nThe sign is the factor used for summations of transaction total values mainly in grids and is either 1 or -1.\r\n",
                        "format": "int32"
                    },
                    "operationItemCombinationMode": {
                        "$ref": "#/components/schemas/OperationItemCombinationMode"
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the transaction is created.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that created the transaction.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that created the transaction.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the transaction is updated.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that updated the transaction.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that updated the transaction.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for Simplic.OxS.ERP.Transaction.Transaction."
            },
            "TransactionNumberDateSourceType": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "description": "Represents the transaction number data source type.\r\n<list type=\"bullet\"><item>\r\nTransactionDate = 0\r\n</item><item>\r\nDeliveryDate = 1\r\n</item></list>",
                "format": "int32"
            },
            "TransactionPeriodModel": {
                "type": "object",
                "properties": {
                    "fiscalYearId": {
                        "type": "string",
                        "description": "Gets or sets the fiscal year ID.",
                        "format": "uuid"
                    },
                    "periodId": {
                        "type": "string",
                        "description": "Gets or sets the period ID.",
                        "format": "uuid"
                    },
                    "periodNumber": {
                        "type": "integer",
                        "description": "Gets or sets the period number.",
                        "format": "int32"
                    },
                    "from": {
                        "type": "string",
                        "description": "Gets or sets the point in time the period begins.",
                        "format": "date-time"
                    },
                    "to": {
                        "type": "string",
                        "description": "Gets or sets the point in time the period ends.",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a period of a fiscal year in a transaction."
            },
            "TransactionPriceObjectModel": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description of the operation resulting in the price values.",
                        "nullable": true
                    },
                    "singlePriceNet": {
                        "type": "number",
                        "description": "Gets or sets the net single price.",
                        "format": "double"
                    },
                    "totalPriceNet": {
                        "type": "number",
                        "description": "Gets or sets the net total price.",
                        "format": "double"
                    },
                    "singlePriceGross": {
                        "type": "number",
                        "description": "Gets or sets the gross single price.",
                        "format": "double"
                    },
                    "totalPriceGross": {
                        "type": "number",
                        "description": "Gets or sets the gross total price.",
                        "format": "double"
                    },
                    "singlePriceVat": {
                        "type": "number",
                        "description": "Gets or sets the VAT contained in the net single price.",
                        "format": "double"
                    },
                    "totalPriceVat": {
                        "type": "number",
                        "description": "Gets or sets the VAT contained in the net total price.",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for the set of all price values for a transaction item at a specific point in time."
            },
            "TransactionResultModel": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/TransactionModel"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorInfoModel"
                        },
                        "description": "Gets or sets the set of errors that occured during the operation represented as Simplic.OxS.ERP.Server.ErrorInfoModel objects.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model of the result of an operation performed on a transaction."
            },
            "TransactionSubtypeArchiveMode": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "Mode for archiving transaction documents",
                "format": "int32"
            },
            "TransactionSubtypeModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "report": {
                        "$ref": "#/components/schemas/TransactionSubtypeReportModel"
                    },
                    "sequence": {
                        "$ref": "#/components/schemas/TransactionSubtypeSequenceModel"
                    },
                    "outputConfiguration": {
                        "$ref": "#/components/schemas/TransactionSubtypeOutputConfigurationModel"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets a unique id.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the subtype name.",
                        "nullable": true
                    },
                    "documentTitleTemplate": {
                        "type": "string",
                        "description": "Gets or sets the document title template.",
                        "nullable": true
                    },
                    "archiveMode": {
                        "$ref": "#/components/schemas/TransactionSubtypeArchiveMode"
                    },
                    "barcodeTemplate": {
                        "type": "string",
                        "description": "Gets or sets the barcode template.",
                        "nullable": true
                    },
                    "useNumberReservation": {
                        "type": "boolean",
                        "description": "Gets or sets whether to use transaction number generation or not."
                    },
                    "customField2Template": {
                        "type": "string",
                        "description": "Gets or sets the template for the custom field 2 in a financial export.",
                        "nullable": true
                    },
                    "customField1Template": {
                        "type": "string",
                        "description": "Gets or sets the template for the custom field 1 in a financial export.",
                        "nullable": true
                    },
                    "bookingTextTemplate": {
                        "type": "string",
                        "description": "Gets or sets the template for the booking text.",
                        "nullable": true
                    },
                    "summarizeBookings": {
                        "type": "boolean",
                        "description": "Gets or sets whether to summarize datev bookings."
                    },
                    "accountingExportGroup": {
                        "type": "string",
                        "description": "Gets or sets the accounting export group.",
                        "nullable": true
                    },
                    "dueDateMode": {
                        "$ref": "#/components/schemas/DueDateMode"
                    },
                    "transactionNumberDateSource": {
                        "$ref": "#/components/schemas/TransactionNumberDateSourceType"
                    },
                    "exportCostQuantity": {
                        "$ref": "#/components/schemas/ExportCostQuantityType"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets the IsDeleted flag."
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a transaction subtype."
            },
            "TransactionSubtypeOutputConfigurationModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a transaction subtype output configuration."
            },
            "TransactionSubtypeReportModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a transaction subtype report."
            },
            "TransactionSubtypeRequest": {
                "required": [
                    "name",
                    "number",
                    "outputConfigurationId",
                    "reportId",
                    "sequenceId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "reportId": {
                        "type": "string",
                        "description": "Gets or sets an optional report for this subtype given by ID.",
                        "format": "uuid"
                    },
                    "sequenceId": {
                        "type": "string",
                        "description": "Gets or sets an optional sequence for this subtype given by ID.",
                        "format": "uuid"
                    },
                    "outputConfigurationId": {
                        "type": "string",
                        "description": "Gets or sets the output configuration given by ID..",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets a unique id",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string",
                        "description": "Gets or sets the subtype name"
                    },
                    "documentTitleTemplate": {
                        "type": "string",
                        "description": "Gets or sets the document title template.",
                        "nullable": true
                    },
                    "archiveMode": {
                        "$ref": "#/components/schemas/TransactionSubtypeArchiveMode"
                    },
                    "barcodeTemplate": {
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the barcode template",
                        "nullable": true
                    },
                    "useNumberReservation": {
                        "type": "boolean",
                        "description": "Gets or sets whether to use transaction number generation or not",
                        "nullable": true
                    },
                    "customField2Template": {
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the template for the custom field 2 in a financial export",
                        "nullable": true
                    },
                    "customField1Template": {
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the template for the custom field 1 in a financial export",
                        "nullable": true
                    },
                    "bookingTextTemplate": {
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the template for the booking text",
                        "nullable": true
                    },
                    "summarizeBookings": {
                        "type": "boolean",
                        "description": "Gets or sets whether to summarize datev bookings",
                        "nullable": true
                    },
                    "accountingExportGroup": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the accounting export group",
                        "nullable": true
                    },
                    "dueDateMode": {
                        "$ref": "#/components/schemas/DueDateMode"
                    },
                    "transactionNumberDateSource": {
                        "$ref": "#/components/schemas/TransactionNumberDateSourceType"
                    },
                    "exportCostQuantity": {
                        "$ref": "#/components/schemas/ExportCostQuantityType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a Simplic.OxS.ERP.Transaction.TransactionSubtype."
            },
            "TransactionSubtypeSequenceModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a transaction subtype sequence."
            },
            "TransactionTransactionTypeModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "reportName": {
                        "type": "string",
                        "description": "Gets or sets the report title.",
                        "nullable": true
                    },
                    "shortName": {
                        "type": "string",
                        "description": "Gets or sets the short name.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a set of functions the transaction type has.\r\n\n\r\nExamples for functions are: credit, debit, cancellation, incoming, outgoing, accounting_exportable, standing_order, workshop_order\r\n",
                        "nullable": true
                    },
                    "subtype": {
                        "$ref": "#/components/schemas/TransactionSubtypeModel"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a transaction type in a transaction."
            },
            "TransactionTypeModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "reportName": {
                        "type": "string",
                        "description": "Gets or sets the report title.",
                        "nullable": true
                    },
                    "shortName": {
                        "type": "string",
                        "description": "Gets or sets the short name.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a set of functions the transaction type has.\r\n\n\r\nExamples for functions are: credit, debit, cancellation, incoming, outgoing, accounting_exportable, standing_order, workshop_order\r\n",
                        "nullable": true
                    },
                    "subtypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionSubtypeModel"
                        },
                        "description": "Gets or sets the set of subtypes.",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the transaction type is created.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that created the transaction type.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that created the transaction type.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time the transaction type is updated.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the id of the user that updated the transaction type.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the name of the user that updated the transaction type.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a transaction type."
            },
            "TransactionTypeRequest": {
                "required": [
                    "name",
                    "number",
                    "subtypes"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string",
                        "description": "Gets or sets the name."
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32"
                    },
                    "reportName": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the report title.",
                        "nullable": true
                    },
                    "shortName": {
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string",
                        "description": "Gets or sets the short name.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a set of functions the transaction type has.\r\n\n\r\nExamples for functions are: credit, debit, cancellation, incoming, outgoing, accounting_exportable, standing_order, workshop_order\r\n",
                        "nullable": true
                    },
                    "subtypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionSubtypeRequest"
                        },
                        "description": "Gets or sets the set of subtypes."
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a Simplic.OxS.ERP.Transaction.TransactionType."
            },
            "TransactionUserModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the shared model for a user in a transaction."
            },
            "UpdateCostCenterRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the cost center.",
                        "nullable": true
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the unique number of the cost center.",
                        "format": "int32"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "Gets or sets the valid from date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "validTo": {
                        "type": "string",
                        "description": "Gets or sets the valid to date",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a update cost center request."
            },
            "UpdateCurrencyRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "shortName": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "symbol": {
                        "type": "string",
                        "description": "Gets or sets the symbol representing the currency.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update a Simplic.OxS.ERP.Currency."
            },
            "UpdateFiscalYearRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "from": {
                        "type": "string",
                        "description": "Gets or sets the point in time the fiscal year begins.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Gets or sets the point in time the fiscal year ends.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PeriodRequest"
                        },
                        "description": "Gets or sets the contained periods.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update a Simplic.OxS.ERP.FiscalYear."
            },
            "UpdatePaymentMethodRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update a Simplic.OxS.ERP.PaymentMethod."
            },
            "UpdatePersonalAccountRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID.",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "string",
                        "description": "gets or sets the number.",
                        "nullable": true
                    },
                    "vatId": {
                        "type": "string",
                        "description": "Gets or sets the vat id.",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the personal account type. (creditor / debitor)",
                        "nullable": true
                    },
                    "creditLimit": {
                        "$ref": "#/components/schemas/CreditLimitModel"
                    },
                    "saleTermsOfPaymentId": {
                        "type": "string",
                        "description": "Gets or sets the id of the sale terms of payment.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "purchaseTermsOfPaymentId": {
                        "type": "string",
                        "description": "Gets or sets the id of the purchase terms of payment.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "taxGroupId": {
                        "type": "string",
                        "description": "Gets or sets the id of the tax group.",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update a personal account."
            },
            "UpdateSettingRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateTaxGroupRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "countryIsoCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets the set of countries given by ISO code.",
                        "nullable": true
                    },
                    "taxRates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRateRequest"
                        },
                        "description": "Gets or sets the tax rates for this tax group.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update a Simplic.OxS.ERP.TaxGroup."
            },
            "UpdateTaxRateTypeRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update a Simplic.OxS.ERP.TaxRateType."
            },
            "UpdateTermsOfPaymentRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "cashDiscount": {
                        "type": "number",
                        "description": "Gets or sets the cash discount quantity.",
                        "format": "double",
                        "nullable": true
                    },
                    "cashDiscountDays": {
                        "type": "integer",
                        "description": "Gets or sets the number of days the cash discount applies for.",
                        "format": "int32",
                        "nullable": true
                    },
                    "paymentDeadlineDays": {
                        "type": "integer",
                        "description": "Gets or sets the number of days until payment deadline.",
                        "format": "int32",
                        "nullable": true
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a set of states that apply to the terms of payment.\r\n\n\r\nExamples for states are: outgoing, incoming\r\n",
                        "nullable": true
                    },
                    "formattedText": {
                        "type": "string",
                        "description": "Gets or sets the formatted text.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update a Simplic.OxS.ERP.TermsOfPayment configuration."
            },
            "UpdateTransactionItemTypeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32",
                        "nullable": true
                    },
                    "hasPositionNumber": {
                        "type": "boolean",
                        "description": "Gets or sets the has position number flag.",
                        "nullable": true
                    },
                    "isSelectable": {
                        "type": "boolean",
                        "description": "Gets or sets the is selectable flag.",
                        "nullable": true
                    },
                    "detailHtml": {
                        "type": "string",
                        "description": "Gets or sets the detail HTML.",
                        "nullable": true
                    },
                    "dataTemplate": {
                        "type": "string",
                        "description": "Gets or sets the data template.",
                        "nullable": true
                    },
                    "articleGLAResolver": {
                        "type": "string",
                        "description": "Gets or sets the article GLA resolver.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a transaction item type."
            },
            "UpdateTransactionRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the transaction number.",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the reference.",
                        "nullable": true
                    },
                    "typeId": {
                        "type": "string",
                        "description": "Gets or sets the type by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "subtypeId": {
                        "type": "string",
                        "description": "Gets or sets the subtype by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "date": {
                        "type": "string",
                        "description": "Gets or sets the time of the underlying transaction.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliveryDate": {
                        "type": "string",
                        "description": "Gets or sets the time of delivery.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "termsOfPaymentId": {
                        "type": "string",
                        "description": "Gets or sets the terms of payment by ID.\r\n\n\r\nThe terms of payment include the payment deadline, a potential cash discount and the number of days the discount applies.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "paymentMethodId": {
                        "type": "string",
                        "description": "Gets or sets the payment method for this transaction given by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "currencyId": {
                        "type": "string",
                        "description": "Gets or sets the currency used to quantify this transaction by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description.",
                        "nullable": true
                    },
                    "financialPartner": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "deliveryAddress": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "invoiceRecipient": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "payer": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "responsible": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "representative": {
                        "$ref": "#/components/schemas/TransactionContactRequest"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionItemRequest"
                        },
                        "description": "Gets or sets the items of this transaction.",
                        "nullable": true
                    },
                    "alternativePaymentDeadline": {
                        "type": "string",
                        "description": "Gets or sets an alternative payment deadline to the one defined in the terms of payment.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "balance": {
                        "type": "number",
                        "description": "Gets or sets the balance.",
                        "format": "double",
                        "nullable": true
                    },
                    "barcode": {
                        "type": "string",
                        "description": "Gets or sets the barcode.",
                        "nullable": true
                    },
                    "billToText": {
                        "type": "string",
                        "description": "Gets or sets the bill as a text.",
                        "nullable": true
                    },
                    "cashDiscountPercentValue": {
                        "type": "number",
                        "description": "Gets or sets the relative cash discount.",
                        "format": "double",
                        "nullable": true
                    },
                    "cashDiscountTotal": {
                        "type": "number",
                        "description": "Gets or sets the total cash discount.",
                        "format": "double",
                        "nullable": true
                    },
                    "financialAccountingPeriodId": {
                        "type": "string",
                        "description": "Gets or sets the financial year period of this transaction given by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "periodId": {
                        "type": "string",
                        "description": "Gets or sets the financial year period of this transaction for inventory management given by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "manualVAT": {
                        "$ref": "#/components/schemas/TransactionManualVatRequest"
                    },
                    "notes": {
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets notes.",
                        "nullable": true
                    },
                    "dueDate": {
                        "type": "string",
                        "description": "Gets or sets the due date.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "referenceNr": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the reference number.",
                        "nullable": true
                    },
                    "taxGroupId": {
                        "type": "string",
                        "description": "Gets or sets the tax group by ID.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "operationItemCombinationMode": {
                        "$ref": "#/components/schemas/OperationItemCombinationMode"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update a Simplic.OxS.ERP.Transaction.Transaction."
            },
            "UpdateTransactionTypeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.",
                        "format": "int32",
                        "nullable": true
                    },
                    "reportName": {
                        "type": "string",
                        "description": "Gets or sets the report title.",
                        "nullable": true
                    },
                    "shortName": {
                        "type": "string",
                        "description": "Gets or sets the short name.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a set of functions the transaction type has.\r\n\n\r\nExamples for functions are: credit, debit, cancellation, incoming, outgoing, accounting_exportable, standing_order, workshop_order\r\n",
                        "nullable": true
                    },
                    "subtypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionSubtypeRequest"
                        },
                        "description": "Gets or sets the set of subtypes.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update a Simplic.OxS.ERP.Transaction.TransactionSubtype."
            },
            "ValueOperator": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "format": "int32"
            },
            "ZUGFeRDVersion": {
                "enum": [
                    100,
                    200,
                    220
                ],
                "type": "integer",
                "format": "int32"
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "apiKey",
                "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",
                "name": "Authorization",
                "in": "header"
            },
            "ApiKey": {
                "type": "apiKey",
                "description": "API Key authentication. Example: 'x-api-key: {your-api-key}'",
                "name": "x-api-key",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "Bearer": [],
            "ApiKey": []
        }
    ]
}