/*
 * Simplic.OxS.ERP
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Simplic.OxS.SDK.OpenAPIDateConverter;

using Simplic.OxS.SDK;

namespace Simplic.OxS.SDK.ERP
{
    /// <summary>
    /// ImportedDiscountSurcharge
    /// </summary>
    [DataContract(Name = "ImportedDiscountSurcharge")]
    public partial class ImportedDiscountSurcharge : IEquatable<ImportedDiscountSurcharge>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets DiscountSurchargeType
        /// </summary>
        [DataMember(Name = "discountSurchargeType", EmitDefaultValue = false)]
        public DiscountSurchargeType? DiscountSurchargeType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ImportedDiscountSurcharge" /> class.
        /// </summary>
        /// <param name="discountSurchargeType">discountSurchargeType.</param>
        /// <param name="description">description.</param>
        /// <param name="basisAmount">basisAmount.</param>
        /// <param name="discountSurchargeAmount">discountSurchargeAmount.</param>
        public ImportedDiscountSurcharge(DiscountSurchargeType? discountSurchargeType = default(DiscountSurchargeType?), string description = default(string), double? basisAmount = default(double?), double discountSurchargeAmount = default(double))
        {
            this.DiscountSurchargeType = discountSurchargeType;
            this.Description = description;
            this.BasisAmount = basisAmount;
            this.DiscountSurchargeAmount = discountSurchargeAmount;
        }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets BasisAmount
        /// </summary>
        [DataMember(Name = "basisAmount", EmitDefaultValue = true)]
        public double? BasisAmount { get; set; }

        /// <summary>
        /// Gets or Sets DiscountSurchargeAmount
        /// </summary>
        [DataMember(Name = "discountSurchargeAmount", EmitDefaultValue = false)]
        public double DiscountSurchargeAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ImportedDiscountSurcharge {\n");
            sb.Append("  DiscountSurchargeType: ").Append(DiscountSurchargeType).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  BasisAmount: ").Append(BasisAmount).Append("\n");
            sb.Append("  DiscountSurchargeAmount: ").Append(DiscountSurchargeAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ImportedDiscountSurcharge);
        }

        /// <summary>
        /// Returns true if ImportedDiscountSurcharge instances are equal
        /// </summary>
        /// <param name="input">Instance of ImportedDiscountSurcharge to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ImportedDiscountSurcharge input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.DiscountSurchargeType == input.DiscountSurchargeType ||
                    this.DiscountSurchargeType.Equals(input.DiscountSurchargeType)
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.BasisAmount == input.BasisAmount ||
                    (this.BasisAmount != null &&
                    this.BasisAmount.Equals(input.BasisAmount))
                ) && 
                (
                    this.DiscountSurchargeAmount == input.DiscountSurchargeAmount ||
                    this.DiscountSurchargeAmount.Equals(input.DiscountSurchargeAmount)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.DiscountSurchargeType.GetHashCode();
                if (this.Description != null)
                {
                    hashCode = (hashCode * 59) + this.Description.GetHashCode();
                }
                if (this.BasisAmount != null)
                {
                    hashCode = (hashCode * 59) + this.BasisAmount.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.DiscountSurchargeAmount.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
