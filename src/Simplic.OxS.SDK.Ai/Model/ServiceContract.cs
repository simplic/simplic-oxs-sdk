/*
 * Simplic.OxS.ai
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Simplic.OxS.SDK.OpenAPIDateConverter;

using Simplic.OxS.SDK;

namespace Simplic.OxS.SDK.Ai
{
    /// <summary>
    /// ServiceContract
    /// </summary>
    [DataContract(Name = "ServiceContract")]
    public partial class ServiceContract : IEquatable<ServiceContract>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceContract" /> class.
        /// </summary>
        /// <param name="endpointContracts">endpointContracts.</param>
        /// <param name="requiredEndpointContracts">requiredEndpointContracts.</param>
        public ServiceContract(List<EndpointContractDefinition> endpointContracts = default(List<EndpointContractDefinition>), List<RequiredEndpointContractDefinition> requiredEndpointContracts = default(List<RequiredEndpointContractDefinition>))
        {
            this.EndpointContracts = endpointContracts;
            this.RequiredEndpointContracts = requiredEndpointContracts;
        }

        /// <summary>
        /// Gets or Sets EndpointContracts
        /// </summary>
        [DataMember(Name = "endpointContracts", EmitDefaultValue = true)]
        public List<EndpointContractDefinition> EndpointContracts { get; set; }

        /// <summary>
        /// Gets or Sets RequiredEndpointContracts
        /// </summary>
        [DataMember(Name = "requiredEndpointContracts", EmitDefaultValue = true)]
        public List<RequiredEndpointContractDefinition> RequiredEndpointContracts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceContract {\n");
            sb.Append("  EndpointContracts: ").Append(EndpointContracts).Append("\n");
            sb.Append("  RequiredEndpointContracts: ").Append(RequiredEndpointContracts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ServiceContract);
        }

        /// <summary>
        /// Returns true if ServiceContract instances are equal
        /// </summary>
        /// <param name="input">Instance of ServiceContract to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ServiceContract input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.EndpointContracts == input.EndpointContracts ||
                    this.EndpointContracts != null &&
                    input.EndpointContracts != null &&
                    this.EndpointContracts.SequenceEqual(input.EndpointContracts)
                ) && 
                (
                    this.RequiredEndpointContracts == input.RequiredEndpointContracts ||
                    this.RequiredEndpointContracts != null &&
                    input.RequiredEndpointContracts != null &&
                    this.RequiredEndpointContracts.SequenceEqual(input.RequiredEndpointContracts)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EndpointContracts != null)
                {
                    hashCode = (hashCode * 59) + this.EndpointContracts.GetHashCode();
                }
                if (this.RequiredEndpointContracts != null)
                {
                    hashCode = (hashCode * 59) + this.RequiredEndpointContracts.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
