/*
 * Simplic.OxS.storage-management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Simplic.OxS.SDK.OpenAPIDateConverter;

using Simplic.OxS.SDK;

namespace Simplic.OxS.SDK.Storage.Management
{
    /// <summary>
    /// PostBookingCreate
    /// </summary>
    [DataContract(Name = "PostBookingCreate")]
    public partial class PostBookingCreate : IEquatable<PostBookingCreate>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PostBookingCreate" /> class.
        /// </summary>
        /// <param name="locationId">locationId.</param>
        /// <param name="carrierId">carrierId.</param>
        /// <param name="carrierExt">carrierExt.</param>
        /// <param name="driverId">driverId.</param>
        /// <param name="driverExt">driverExt.</param>
        /// <param name="tractorUnitId">tractorUnitId.</param>
        /// <param name="tractorUnitExt">tractorUnitExt.</param>
        /// <param name="customerId">customerId.</param>
        /// <param name="date">date.</param>
        /// <param name="signatureUrl">signatureUrl.</param>
        /// <param name="signatureUrlUser">signatureUrlUser.</param>
        /// <param name="nameUser">nameUser.</param>
        /// <param name="ecoNumber">ecoNumber.</param>
        /// <param name="deliveryNote">deliveryNote.</param>
        /// <param name="loadingAids">loadingAids.</param>
        /// <param name="images">images.</param>
        public PostBookingCreate(Guid locationId = default(Guid), Guid? carrierId = default(Guid?), string carrierExt = default(string), Guid? driverId = default(Guid?), string driverExt = default(string), Guid? tractorUnitId = default(Guid?), string tractorUnitExt = default(string), Guid customerId = default(Guid), DateTime date = default(DateTime), Guid signatureUrl = default(Guid), Guid? signatureUrlUser = default(Guid?), string nameUser = default(string), string ecoNumber = default(string), string deliveryNote = default(string), List<LoadingAid> loadingAids = default(List<LoadingAid>), List<Guid> images = default(List<Guid>))
        {
            this.LocationId = locationId;
            this.CarrierId = carrierId;
            this.CarrierExt = carrierExt;
            this.DriverId = driverId;
            this.DriverExt = driverExt;
            this.TractorUnitId = tractorUnitId;
            this.TractorUnitExt = tractorUnitExt;
            this.CustomerId = customerId;
            this.Date = date;
            this.SignatureUrl = signatureUrl;
            this.SignatureUrlUser = signatureUrlUser;
            this.NameUser = nameUser;
            this.EcoNumber = ecoNumber;
            this.DeliveryNote = deliveryNote;
            this.LoadingAids = loadingAids;
            this.Images = images;
        }

        /// <summary>
        /// Gets or Sets LocationId
        /// </summary>
        [DataMember(Name = "locationId", EmitDefaultValue = false)]
        public Guid LocationId { get; set; }

        /// <summary>
        /// Gets or Sets CarrierId
        /// </summary>
        [DataMember(Name = "carrierId", EmitDefaultValue = true)]
        public Guid? CarrierId { get; set; }

        /// <summary>
        /// Gets or Sets CarrierExt
        /// </summary>
        [DataMember(Name = "carrierExt", EmitDefaultValue = true)]
        public string CarrierExt { get; set; }

        /// <summary>
        /// Gets or Sets DriverId
        /// </summary>
        [DataMember(Name = "driverId", EmitDefaultValue = true)]
        public Guid? DriverId { get; set; }

        /// <summary>
        /// Gets or Sets DriverExt
        /// </summary>
        [DataMember(Name = "driverExt", EmitDefaultValue = true)]
        public string DriverExt { get; set; }

        /// <summary>
        /// Gets or Sets TractorUnitId
        /// </summary>
        [DataMember(Name = "tractorUnitId", EmitDefaultValue = true)]
        public Guid? TractorUnitId { get; set; }

        /// <summary>
        /// Gets or Sets TractorUnitExt
        /// </summary>
        [DataMember(Name = "tractorUnitExt", EmitDefaultValue = true)]
        public string TractorUnitExt { get; set; }

        /// <summary>
        /// Gets or Sets CustomerId
        /// </summary>
        [DataMember(Name = "customerId", EmitDefaultValue = false)]
        public Guid CustomerId { get; set; }

        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name = "date", EmitDefaultValue = false)]
        public DateTime Date { get; set; }

        /// <summary>
        /// Gets or Sets SignatureUrl
        /// </summary>
        [DataMember(Name = "signatureUrl", EmitDefaultValue = false)]
        public Guid SignatureUrl { get; set; }

        /// <summary>
        /// Gets or Sets SignatureUrlUser
        /// </summary>
        [DataMember(Name = "signatureUrlUser", EmitDefaultValue = true)]
        public Guid? SignatureUrlUser { get; set; }

        /// <summary>
        /// Gets or Sets NameUser
        /// </summary>
        [DataMember(Name = "nameUser", EmitDefaultValue = true)]
        public string NameUser { get; set; }

        /// <summary>
        /// Gets or Sets EcoNumber
        /// </summary>
        [DataMember(Name = "ecoNumber", EmitDefaultValue = true)]
        public string EcoNumber { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryNote
        /// </summary>
        [DataMember(Name = "deliveryNote", EmitDefaultValue = true)]
        public string DeliveryNote { get; set; }

        /// <summary>
        /// Gets or Sets LoadingAids
        /// </summary>
        [DataMember(Name = "loadingAids", EmitDefaultValue = true)]
        public List<LoadingAid> LoadingAids { get; set; }

        /// <summary>
        /// Gets or Sets Images
        /// </summary>
        [DataMember(Name = "images", EmitDefaultValue = true)]
        public List<Guid> Images { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PostBookingCreate {\n");
            sb.Append("  LocationId: ").Append(LocationId).Append("\n");
            sb.Append("  CarrierId: ").Append(CarrierId).Append("\n");
            sb.Append("  CarrierExt: ").Append(CarrierExt).Append("\n");
            sb.Append("  DriverId: ").Append(DriverId).Append("\n");
            sb.Append("  DriverExt: ").Append(DriverExt).Append("\n");
            sb.Append("  TractorUnitId: ").Append(TractorUnitId).Append("\n");
            sb.Append("  TractorUnitExt: ").Append(TractorUnitExt).Append("\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  SignatureUrl: ").Append(SignatureUrl).Append("\n");
            sb.Append("  SignatureUrlUser: ").Append(SignatureUrlUser).Append("\n");
            sb.Append("  NameUser: ").Append(NameUser).Append("\n");
            sb.Append("  EcoNumber: ").Append(EcoNumber).Append("\n");
            sb.Append("  DeliveryNote: ").Append(DeliveryNote).Append("\n");
            sb.Append("  LoadingAids: ").Append(LoadingAids).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PostBookingCreate);
        }

        /// <summary>
        /// Returns true if PostBookingCreate instances are equal
        /// </summary>
        /// <param name="input">Instance of PostBookingCreate to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PostBookingCreate input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.LocationId == input.LocationId ||
                    (this.LocationId != null &&
                    this.LocationId.Equals(input.LocationId))
                ) && 
                (
                    this.CarrierId == input.CarrierId ||
                    (this.CarrierId != null &&
                    this.CarrierId.Equals(input.CarrierId))
                ) && 
                (
                    this.CarrierExt == input.CarrierExt ||
                    (this.CarrierExt != null &&
                    this.CarrierExt.Equals(input.CarrierExt))
                ) && 
                (
                    this.DriverId == input.DriverId ||
                    (this.DriverId != null &&
                    this.DriverId.Equals(input.DriverId))
                ) && 
                (
                    this.DriverExt == input.DriverExt ||
                    (this.DriverExt != null &&
                    this.DriverExt.Equals(input.DriverExt))
                ) && 
                (
                    this.TractorUnitId == input.TractorUnitId ||
                    (this.TractorUnitId != null &&
                    this.TractorUnitId.Equals(input.TractorUnitId))
                ) && 
                (
                    this.TractorUnitExt == input.TractorUnitExt ||
                    (this.TractorUnitExt != null &&
                    this.TractorUnitExt.Equals(input.TractorUnitExt))
                ) && 
                (
                    this.CustomerId == input.CustomerId ||
                    (this.CustomerId != null &&
                    this.CustomerId.Equals(input.CustomerId))
                ) && 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.SignatureUrl == input.SignatureUrl ||
                    (this.SignatureUrl != null &&
                    this.SignatureUrl.Equals(input.SignatureUrl))
                ) && 
                (
                    this.SignatureUrlUser == input.SignatureUrlUser ||
                    (this.SignatureUrlUser != null &&
                    this.SignatureUrlUser.Equals(input.SignatureUrlUser))
                ) && 
                (
                    this.NameUser == input.NameUser ||
                    (this.NameUser != null &&
                    this.NameUser.Equals(input.NameUser))
                ) && 
                (
                    this.EcoNumber == input.EcoNumber ||
                    (this.EcoNumber != null &&
                    this.EcoNumber.Equals(input.EcoNumber))
                ) && 
                (
                    this.DeliveryNote == input.DeliveryNote ||
                    (this.DeliveryNote != null &&
                    this.DeliveryNote.Equals(input.DeliveryNote))
                ) && 
                (
                    this.LoadingAids == input.LoadingAids ||
                    this.LoadingAids != null &&
                    input.LoadingAids != null &&
                    this.LoadingAids.SequenceEqual(input.LoadingAids)
                ) && 
                (
                    this.Images == input.Images ||
                    this.Images != null &&
                    input.Images != null &&
                    this.Images.SequenceEqual(input.Images)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LocationId != null)
                {
                    hashCode = (hashCode * 59) + this.LocationId.GetHashCode();
                }
                if (this.CarrierId != null)
                {
                    hashCode = (hashCode * 59) + this.CarrierId.GetHashCode();
                }
                if (this.CarrierExt != null)
                {
                    hashCode = (hashCode * 59) + this.CarrierExt.GetHashCode();
                }
                if (this.DriverId != null)
                {
                    hashCode = (hashCode * 59) + this.DriverId.GetHashCode();
                }
                if (this.DriverExt != null)
                {
                    hashCode = (hashCode * 59) + this.DriverExt.GetHashCode();
                }
                if (this.TractorUnitId != null)
                {
                    hashCode = (hashCode * 59) + this.TractorUnitId.GetHashCode();
                }
                if (this.TractorUnitExt != null)
                {
                    hashCode = (hashCode * 59) + this.TractorUnitExt.GetHashCode();
                }
                if (this.CustomerId != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerId.GetHashCode();
                }
                if (this.Date != null)
                {
                    hashCode = (hashCode * 59) + this.Date.GetHashCode();
                }
                if (this.SignatureUrl != null)
                {
                    hashCode = (hashCode * 59) + this.SignatureUrl.GetHashCode();
                }
                if (this.SignatureUrlUser != null)
                {
                    hashCode = (hashCode * 59) + this.SignatureUrlUser.GetHashCode();
                }
                if (this.NameUser != null)
                {
                    hashCode = (hashCode * 59) + this.NameUser.GetHashCode();
                }
                if (this.EcoNumber != null)
                {
                    hashCode = (hashCode * 59) + this.EcoNumber.GetHashCode();
                }
                if (this.DeliveryNote != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryNote.GetHashCode();
                }
                if (this.LoadingAids != null)
                {
                    hashCode = (hashCode * 59) + this.LoadingAids.GetHashCode();
                }
                if (this.Images != null)
                {
                    hashCode = (hashCode * 59) + this.Images.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
