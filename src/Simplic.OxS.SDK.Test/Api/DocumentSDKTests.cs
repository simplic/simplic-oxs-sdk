/*
 * Simplic.OxS.Document
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Simplic.OxS.SDK.Client;
using Simplic.OxS.SDK.Api;
// uncomment below to import models
//using Simplic.OxS.SDK.Model;

namespace Simplic.OxS.SDK.Test.Api
{
    /// <summary>
    ///  Class for testing DocumentSDK
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DocumentSDKTests : IDisposable
    {
        private DocumentSDK instance;

        public DocumentSDKTests()
        {
            instance = new DocumentSDK();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DocumentSDK
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DocumentSDK
            //Assert.IsType<DocumentSDK>(instance);
        }

        /// <summary>
        /// Test DocumentDocumentIdGet
        /// </summary>
        [Fact]
        public void DocumentDocumentIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid documentId = null;
            //var response = instance.DocumentDocumentIdGet(documentId);
            //Assert.IsType<DocumentResponse>(response);
        }

        /// <summary>
        /// Test DocumentGetCurrentDocumentIdGet
        /// </summary>
        [Fact]
        public void DocumentGetCurrentDocumentIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid documentId = null;
            //var response = instance.DocumentGetCurrentDocumentIdGet(documentId);
            //Assert.IsType<DocumentVersionResponse>(response);
        }

        /// <summary>
        /// Test DocumentGetVersionByIdVersionIdGet
        /// </summary>
        [Fact]
        public void DocumentGetVersionByIdVersionIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid versionId = null;
            //var response = instance.DocumentGetVersionByIdVersionIdGet(versionId);
            //Assert.IsType<DocumentVersionResponse>(response);
        }

        /// <summary>
        /// Test DocumentGetVersionDocumentIdGet
        /// </summary>
        [Fact]
        public void DocumentGetVersionDocumentIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid documentId = null;
            //int? varVersion = null;
            //var response = instance.DocumentGetVersionDocumentIdGet(documentId, varVersion);
            //Assert.IsType<DocumentVersionResponse>(response);
        }

        /// <summary>
        /// Test DocumentIdPatch
        /// </summary>
        [Fact]
        public void DocumentIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //PatchDocumentRequest? patchDocumentRequest = null;
            //var response = instance.DocumentIdPatch(id, patchDocumentRequest);
            //Assert.IsType<DocumentResponse>(response);
        }

        /// <summary>
        /// Test DocumentPost
        /// </summary>
        [Fact]
        public void DocumentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PostDocumentRequest? postDocumentRequest = null;
            //var response = instance.DocumentPost(postDocumentRequest);
            //Assert.IsType<DocumentResponse>(response);
        }
    }
}
