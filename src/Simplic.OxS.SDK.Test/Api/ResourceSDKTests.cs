/*
 * Simplic.OxS.Logistics
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Simplic.OxS.SDK.Client;
using Simplic.OxS.SDK.Api;
// uncomment below to import models
//using Simplic.OxS.SDK.Model;

namespace Simplic.OxS.SDK.Test.Api
{
    /// <summary>
    ///  Class for testing ResourceSDK
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ResourceSDKTests : IDisposable
    {
        private ResourceSDK instance;

        public ResourceSDKTests()
        {
            instance = new ResourceSDK();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ResourceSDK
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ResourceSDK
            //Assert.IsType<ResourceSDK>(instance);
        }

        /// <summary>
        /// Test ResourceGetAllByGroupGet
        /// </summary>
        [Fact]
        public void ResourceGetAllByGroupGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? group = null;
            //DateTime? useableUntil = null;
            //var response = instance.ResourceGetAllByGroupGet(group, useableUntil);
            //Assert.IsType<List<ResourceModel>>(response);
        }

        /// <summary>
        /// Test ResourceGetAllGet
        /// </summary>
        [Fact]
        public void ResourceGetAllGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? useableUntil = null;
            //var response = instance.ResourceGetAllGet(useableUntil);
            //Assert.IsType<List<ResourceModel>>(response);
        }

        /// <summary>
        /// Test ResourceGetPageDataGet
        /// </summary>
        [Fact]
        public void ResourceGetPageDataGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? skip = null;
            //int? page = null;
            //int? pageSize = null;
            //string? filterString = null;
            //var response = instance.ResourceGetPageDataGet(skip, page, pageSize, filterString);
            //Assert.IsType<List<ResourceModel>>(response);
        }

        /// <summary>
        /// Test ResourceIdGet
        /// </summary>
        [Fact]
        public void ResourceIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ResourceIdGet(id);
            //Assert.IsType<ResourceModel>(response);
        }

        /// <summary>
        /// Test ResourceIdPut
        /// </summary>
        [Fact]
        public void ResourceIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //UpdateResourceRequest? updateResourceRequest = null;
            //var response = instance.ResourceIdPut(id, updateResourceRequest);
            //Assert.IsType<ResourceModel>(response);
        }

        /// <summary>
        /// Test ResourcePost
        /// </summary>
        [Fact]
        public void ResourcePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateResourceRequest? createResourceRequest = null;
            //var response = instance.ResourcePost(createResourceRequest);
            //Assert.IsType<ResourceModel>(response);
        }
    }
}
