/*
 * Simplic.OxS.TimeSlot
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Simplic.OxS.SDK.TimeSlot.OpenAPIDateConverter;

namespace Simplic.OxS.SDK.TimeSlot
{
    /// <summary>
    /// SiteAssignmentModel
    /// </summary>
    [DataContract(Name = "SiteAssignmentModel")]
    public partial class SiteAssignmentModel : IEquatable<SiteAssignmentModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SiteAssignmentModel" /> class.
        /// </summary>
        /// <param name="organizationId">organizationId.</param>
        /// <param name="organizationSiteId">organizationSiteId.</param>
        public SiteAssignmentModel(Guid organizationId = default(Guid), Guid? organizationSiteId = default(Guid?))
        {
            this.OrganizationId = organizationId;
            this.OrganizationSiteId = organizationSiteId;
        }

        /// <summary>
        /// Gets or Sets OrganizationId
        /// </summary>
        [DataMember(Name = "organizationId", EmitDefaultValue = false)]
        public Guid OrganizationId { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationSiteId
        /// </summary>
        [DataMember(Name = "organizationSiteId", EmitDefaultValue = true)]
        public Guid? OrganizationSiteId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SiteAssignmentModel {\n");
            sb.Append("  OrganizationId: ").Append(OrganizationId).Append("\n");
            sb.Append("  OrganizationSiteId: ").Append(OrganizationSiteId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SiteAssignmentModel);
        }

        /// <summary>
        /// Returns true if SiteAssignmentModel instances are equal
        /// </summary>
        /// <param name="input">Instance of SiteAssignmentModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SiteAssignmentModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.OrganizationId == input.OrganizationId ||
                    (this.OrganizationId != null &&
                    this.OrganizationId.Equals(input.OrganizationId))
                ) && 
                (
                    this.OrganizationSiteId == input.OrganizationSiteId ||
                    (this.OrganizationSiteId != null &&
                    this.OrganizationSiteId.Equals(input.OrganizationSiteId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OrganizationId != null)
                {
                    hashCode = (hashCode * 59) + this.OrganizationId.GetHashCode();
                }
                if (this.OrganizationSiteId != null)
                {
                    hashCode = (hashCode * 59) + this.OrganizationSiteId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
