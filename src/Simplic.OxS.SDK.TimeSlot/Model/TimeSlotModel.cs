/*
 * Simplic.OxS.TimeSlot
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Simplic.OxS.SDK.TimeSlot.OpenAPIDateConverter;

namespace Simplic.OxS.SDK.TimeSlot
{
    /// <summary>
    /// Represents a timeslot model
    /// </summary>
    [DataContract(Name = "TimeSlotModel")]
    public partial class TimeSlotModel : IEquatable<TimeSlotModel>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name = "state", EmitDefaultValue = false)]
        public BookingState? State { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TimeSlotModel" /> class.
        /// </summary>
        /// <param name="id">Gets or sets the timeslot id.</param>
        /// <param name="organizationId">Gets or sets the timeslot orgaization id.</param>
        /// <param name="siteId">Gets or sets the organization site id.</param>
        /// <param name="siteName">Gets or sets the organization site name.</param>
        /// <param name="start">Gets or sets the start datetime.</param>
        /// <param name="end">Gets or sets the end datetime.</param>
        /// <param name="location">Gets or sets the locaiton name.</param>
        /// <param name="state">state.</param>
        /// <param name="foreignOrganizationId">Gets or sets the organization, that has booked the time slot.</param>
        /// <param name="bookingDetails">bookingDetails.</param>
        /// <param name="createDateTime">Gets or sets the date and time the TimeSlot is created..</param>
        /// <param name="createUserId">Gets or sets the id of the user that created the timeslot..</param>
        /// <param name="createUserName">Gets or sets the name of the user taht created the timeslot..</param>
        /// <param name="updateDateTime">Gets or sets the date and time the TimeSlot is updated..</param>
        /// <param name="updateUserId">Gets or sets the id of the user taht updated the timeslot..</param>
        /// <param name="updateUserName">Gets or sets the name of the user that updated the timeslot..</param>
        /// <param name="timeOfArrival">Gets or sets the time pf arrival..</param>
        /// <param name="loadingStartTime">Gets or sets the starting time of loading..</param>
        /// <param name="loadingEndTime">Gets or sets the ending time of loading..</param>
        public TimeSlotModel(Guid id = default(Guid), Guid organizationId = default(Guid), Guid siteId = default(Guid), string siteName = default(string), DateTime start = default(DateTime), DateTime end = default(DateTime), string location = default(string), BookingState? state = default(BookingState?), Guid? foreignOrganizationId = default(Guid?), BookingDetailsModel bookingDetails = default(BookingDetailsModel), DateTime createDateTime = default(DateTime), Guid? createUserId = default(Guid?), string createUserName = default(string), DateTime updateDateTime = default(DateTime), Guid? updateUserId = default(Guid?), string updateUserName = default(string), DateTime? timeOfArrival = default(DateTime?), DateTime? loadingStartTime = default(DateTime?), DateTime? loadingEndTime = default(DateTime?))
        {
            this.Id = id;
            this.OrganizationId = organizationId;
            this.SiteId = siteId;
            this.SiteName = siteName;
            this.Start = start;
            this.End = end;
            this.Location = location;
            this.State = state;
            this.ForeignOrganizationId = foreignOrganizationId;
            this.BookingDetails = bookingDetails;
            this.CreateDateTime = createDateTime;
            this.CreateUserId = createUserId;
            this.CreateUserName = createUserName;
            this.UpdateDateTime = updateDateTime;
            this.UpdateUserId = updateUserId;
            this.UpdateUserName = updateUserName;
            this.TimeOfArrival = timeOfArrival;
            this.LoadingStartTime = loadingStartTime;
            this.LoadingEndTime = loadingEndTime;
        }

        /// <summary>
        /// Gets or sets the timeslot id
        /// </summary>
        /// <value>Gets or sets the timeslot id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the timeslot orgaization id
        /// </summary>
        /// <value>Gets or sets the timeslot orgaization id</value>
        [DataMember(Name = "organizationId", EmitDefaultValue = false)]
        public Guid OrganizationId { get; set; }

        /// <summary>
        /// Gets or sets the organization site id
        /// </summary>
        /// <value>Gets or sets the organization site id</value>
        [DataMember(Name = "siteId", EmitDefaultValue = false)]
        public Guid SiteId { get; set; }

        /// <summary>
        /// Gets or sets the organization site name
        /// </summary>
        /// <value>Gets or sets the organization site name</value>
        [DataMember(Name = "siteName", EmitDefaultValue = true)]
        public string SiteName { get; set; }

        /// <summary>
        /// Gets or sets the start datetime
        /// </summary>
        /// <value>Gets or sets the start datetime</value>
        [DataMember(Name = "start", EmitDefaultValue = false)]
        public DateTime Start { get; set; }

        /// <summary>
        /// Gets or sets the end datetime
        /// </summary>
        /// <value>Gets or sets the end datetime</value>
        [DataMember(Name = "end", EmitDefaultValue = false)]
        public DateTime End { get; set; }

        /// <summary>
        /// Gets or sets the locaiton name
        /// </summary>
        /// <value>Gets or sets the locaiton name</value>
        [DataMember(Name = "location", EmitDefaultValue = true)]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the organization, that has booked the time slot
        /// </summary>
        /// <value>Gets or sets the organization, that has booked the time slot</value>
        [DataMember(Name = "foreignOrganizationId", EmitDefaultValue = true)]
        public Guid? ForeignOrganizationId { get; set; }

        /// <summary>
        /// Gets or Sets BookingDetails
        /// </summary>
        [DataMember(Name = "bookingDetails", EmitDefaultValue = false)]
        public BookingDetailsModel BookingDetails { get; set; }

        /// <summary>
        /// Gets or sets the date and time the TimeSlot is created.
        /// </summary>
        /// <value>Gets or sets the date and time the TimeSlot is created.</value>
        [DataMember(Name = "createDateTime", EmitDefaultValue = false)]
        public DateTime CreateDateTime { get; set; }

        /// <summary>
        /// Gets or sets the id of the user that created the timeslot.
        /// </summary>
        /// <value>Gets or sets the id of the user that created the timeslot.</value>
        [DataMember(Name = "createUserId", EmitDefaultValue = true)]
        public Guid? CreateUserId { get; set; }

        /// <summary>
        /// Gets or sets the name of the user taht created the timeslot.
        /// </summary>
        /// <value>Gets or sets the name of the user taht created the timeslot.</value>
        [DataMember(Name = "createUserName", EmitDefaultValue = true)]
        public string CreateUserName { get; set; }

        /// <summary>
        /// Gets or sets the date and time the TimeSlot is updated.
        /// </summary>
        /// <value>Gets or sets the date and time the TimeSlot is updated.</value>
        [DataMember(Name = "updateDateTime", EmitDefaultValue = false)]
        public DateTime UpdateDateTime { get; set; }

        /// <summary>
        /// Gets or sets the id of the user taht updated the timeslot.
        /// </summary>
        /// <value>Gets or sets the id of the user taht updated the timeslot.</value>
        [DataMember(Name = "updateUserId", EmitDefaultValue = true)]
        public Guid? UpdateUserId { get; set; }

        /// <summary>
        /// Gets or sets the name of the user that updated the timeslot.
        /// </summary>
        /// <value>Gets or sets the name of the user that updated the timeslot.</value>
        [DataMember(Name = "updateUserName", EmitDefaultValue = true)]
        public string UpdateUserName { get; set; }

        /// <summary>
        /// Gets or sets the time pf arrival.
        /// </summary>
        /// <value>Gets or sets the time pf arrival.</value>
        [DataMember(Name = "timeOfArrival", EmitDefaultValue = true)]
        public DateTime? TimeOfArrival { get; set; }

        /// <summary>
        /// Gets or sets the starting time of loading.
        /// </summary>
        /// <value>Gets or sets the starting time of loading.</value>
        [DataMember(Name = "loadingStartTime", EmitDefaultValue = true)]
        public DateTime? LoadingStartTime { get; set; }

        /// <summary>
        /// Gets or sets the ending time of loading.
        /// </summary>
        /// <value>Gets or sets the ending time of loading.</value>
        [DataMember(Name = "loadingEndTime", EmitDefaultValue = true)]
        public DateTime? LoadingEndTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TimeSlotModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  OrganizationId: ").Append(OrganizationId).Append("\n");
            sb.Append("  SiteId: ").Append(SiteId).Append("\n");
            sb.Append("  SiteName: ").Append(SiteName).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("  End: ").Append(End).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  ForeignOrganizationId: ").Append(ForeignOrganizationId).Append("\n");
            sb.Append("  BookingDetails: ").Append(BookingDetails).Append("\n");
            sb.Append("  CreateDateTime: ").Append(CreateDateTime).Append("\n");
            sb.Append("  CreateUserId: ").Append(CreateUserId).Append("\n");
            sb.Append("  CreateUserName: ").Append(CreateUserName).Append("\n");
            sb.Append("  UpdateDateTime: ").Append(UpdateDateTime).Append("\n");
            sb.Append("  UpdateUserId: ").Append(UpdateUserId).Append("\n");
            sb.Append("  UpdateUserName: ").Append(UpdateUserName).Append("\n");
            sb.Append("  TimeOfArrival: ").Append(TimeOfArrival).Append("\n");
            sb.Append("  LoadingStartTime: ").Append(LoadingStartTime).Append("\n");
            sb.Append("  LoadingEndTime: ").Append(LoadingEndTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TimeSlotModel);
        }

        /// <summary>
        /// Returns true if TimeSlotModel instances are equal
        /// </summary>
        /// <param name="input">Instance of TimeSlotModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TimeSlotModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.OrganizationId == input.OrganizationId ||
                    (this.OrganizationId != null &&
                    this.OrganizationId.Equals(input.OrganizationId))
                ) && 
                (
                    this.SiteId == input.SiteId ||
                    (this.SiteId != null &&
                    this.SiteId.Equals(input.SiteId))
                ) && 
                (
                    this.SiteName == input.SiteName ||
                    (this.SiteName != null &&
                    this.SiteName.Equals(input.SiteName))
                ) && 
                (
                    this.Start == input.Start ||
                    (this.Start != null &&
                    this.Start.Equals(input.Start))
                ) && 
                (
                    this.End == input.End ||
                    (this.End != null &&
                    this.End.Equals(input.End))
                ) && 
                (
                    this.Location == input.Location ||
                    (this.Location != null &&
                    this.Location.Equals(input.Location))
                ) && 
                (
                    this.State == input.State ||
                    this.State.Equals(input.State)
                ) && 
                (
                    this.ForeignOrganizationId == input.ForeignOrganizationId ||
                    (this.ForeignOrganizationId != null &&
                    this.ForeignOrganizationId.Equals(input.ForeignOrganizationId))
                ) && 
                (
                    this.BookingDetails == input.BookingDetails ||
                    (this.BookingDetails != null &&
                    this.BookingDetails.Equals(input.BookingDetails))
                ) && 
                (
                    this.CreateDateTime == input.CreateDateTime ||
                    (this.CreateDateTime != null &&
                    this.CreateDateTime.Equals(input.CreateDateTime))
                ) && 
                (
                    this.CreateUserId == input.CreateUserId ||
                    (this.CreateUserId != null &&
                    this.CreateUserId.Equals(input.CreateUserId))
                ) && 
                (
                    this.CreateUserName == input.CreateUserName ||
                    (this.CreateUserName != null &&
                    this.CreateUserName.Equals(input.CreateUserName))
                ) && 
                (
                    this.UpdateDateTime == input.UpdateDateTime ||
                    (this.UpdateDateTime != null &&
                    this.UpdateDateTime.Equals(input.UpdateDateTime))
                ) && 
                (
                    this.UpdateUserId == input.UpdateUserId ||
                    (this.UpdateUserId != null &&
                    this.UpdateUserId.Equals(input.UpdateUserId))
                ) && 
                (
                    this.UpdateUserName == input.UpdateUserName ||
                    (this.UpdateUserName != null &&
                    this.UpdateUserName.Equals(input.UpdateUserName))
                ) && 
                (
                    this.TimeOfArrival == input.TimeOfArrival ||
                    (this.TimeOfArrival != null &&
                    this.TimeOfArrival.Equals(input.TimeOfArrival))
                ) && 
                (
                    this.LoadingStartTime == input.LoadingStartTime ||
                    (this.LoadingStartTime != null &&
                    this.LoadingStartTime.Equals(input.LoadingStartTime))
                ) && 
                (
                    this.LoadingEndTime == input.LoadingEndTime ||
                    (this.LoadingEndTime != null &&
                    this.LoadingEndTime.Equals(input.LoadingEndTime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.OrganizationId != null)
                {
                    hashCode = (hashCode * 59) + this.OrganizationId.GetHashCode();
                }
                if (this.SiteId != null)
                {
                    hashCode = (hashCode * 59) + this.SiteId.GetHashCode();
                }
                if (this.SiteName != null)
                {
                    hashCode = (hashCode * 59) + this.SiteName.GetHashCode();
                }
                if (this.Start != null)
                {
                    hashCode = (hashCode * 59) + this.Start.GetHashCode();
                }
                if (this.End != null)
                {
                    hashCode = (hashCode * 59) + this.End.GetHashCode();
                }
                if (this.Location != null)
                {
                    hashCode = (hashCode * 59) + this.Location.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.State.GetHashCode();
                if (this.ForeignOrganizationId != null)
                {
                    hashCode = (hashCode * 59) + this.ForeignOrganizationId.GetHashCode();
                }
                if (this.BookingDetails != null)
                {
                    hashCode = (hashCode * 59) + this.BookingDetails.GetHashCode();
                }
                if (this.CreateDateTime != null)
                {
                    hashCode = (hashCode * 59) + this.CreateDateTime.GetHashCode();
                }
                if (this.CreateUserId != null)
                {
                    hashCode = (hashCode * 59) + this.CreateUserId.GetHashCode();
                }
                if (this.CreateUserName != null)
                {
                    hashCode = (hashCode * 59) + this.CreateUserName.GetHashCode();
                }
                if (this.UpdateDateTime != null)
                {
                    hashCode = (hashCode * 59) + this.UpdateDateTime.GetHashCode();
                }
                if (this.UpdateUserId != null)
                {
                    hashCode = (hashCode * 59) + this.UpdateUserId.GetHashCode();
                }
                if (this.UpdateUserName != null)
                {
                    hashCode = (hashCode * 59) + this.UpdateUserName.GetHashCode();
                }
                if (this.TimeOfArrival != null)
                {
                    hashCode = (hashCode * 59) + this.TimeOfArrival.GetHashCode();
                }
                if (this.LoadingStartTime != null)
                {
                    hashCode = (hashCode * 59) + this.LoadingStartTime.GetHashCode();
                }
                if (this.LoadingEndTime != null)
                {
                    hashCode = (hashCode * 59) + this.LoadingEndTime.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
