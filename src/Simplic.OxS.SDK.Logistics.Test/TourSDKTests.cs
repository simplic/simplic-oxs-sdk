/*
 * Simplic.OxS.Logistics
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Simplic.OxS.SDK.Logistics.Client;
using Simplic.OxS.SDK.Logistics..;
// uncomment below to import models
//using Simplic.OxS.SDK.Logistics.Model;

namespace Simplic.OxS.SDK.Logistics.Test.Api
{
    /// <summary>
    ///  Class for testing TourSDK
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TourSDKTests : IDisposable
    {
        private TourSDK instance;

        public TourSDKTests()
        {
            instance = new TourSDK();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TourSDK
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TourSDK
            //Assert.IsType<TourSDK>(instance);
        }

        /// <summary>
        /// Test TourAddTagToTourPut
        /// </summary>
        [Fact]
        public void TourAddTagToTourPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddTagToTourRequest? addTagToTourRequest = null;
            //instance.TourAddTagToTourPut(addTagToTourRequest);
        }

        /// <summary>
        /// Test TourConvertShipmentToTourPost
        /// </summary>
        [Fact]
        public void TourConvertShipmentToTourPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ShipmentToTourRequest? shipmentToTourRequest = null;
            //var response = instance.TourConvertShipmentToTourPost(shipmentToTourRequest);
            //Assert.IsType<TourModel>(response);
        }

        /// <summary>
        /// Test TourGetAggregatedLoadingSlotsGet
        /// </summary>
        [Fact]
        public void TourGetAggregatedLoadingSlotsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? resourceId = null;
            //string? loadingSlotNames = null;
            //int? count = null;
            //var response = instance.TourGetAggregatedLoadingSlotsGet(resourceId, loadingSlotNames, count);
            //Assert.IsType<List<UsedLoadingSlotAggregationModel>>(response);
        }

        /// <summary>
        /// Test TourGetAllByDatesGet
        /// </summary>
        [Fact]
        public void TourGetAllByDatesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? start = null;
            //DateTime? end = null;
            //var response = instance.TourGetAllByDatesGet(start, end);
            //Assert.IsType<List<TourModel>>(response);
        }

        /// <summary>
        /// Test TourGetByGlobalTourIdGet
        /// </summary>
        [Fact]
        public void TourGetByGlobalTourIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //var response = instance.TourGetByGlobalTourIdGet(id);
            //Assert.IsType<List<TourModel>>(response);
        }

        /// <summary>
        /// Test TourGetByShipmentIdGet
        /// </summary>
        [Fact]
        public void TourGetByShipmentIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //var response = instance.TourGetByShipmentIdGet(id);
            //Assert.IsType<List<TourModel>>(response);
        }

        /// <summary>
        /// Test TourIdDelete
        /// </summary>
        [Fact]
        public void TourIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.TourIdDelete(id);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test TourIdGet
        /// </summary>
        [Fact]
        public void TourIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.TourIdGet(id);
            //Assert.IsType<TourModel>(response);
        }

        /// <summary>
        /// Test TourIdPatch
        /// </summary>
        [Fact]
        public void TourIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //PatchTourRequest? patchTourRequest = null;
            //var response = instance.TourIdPatch(id, patchTourRequest);
            //Assert.IsType<TourModel>(response);
        }

        /// <summary>
        /// Test TourManipulatePost
        /// </summary>
        [Fact]
        public void TourManipulatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ManipulateTourRequest? manipulateTourRequest = null;
            //var response = instance.TourManipulatePost(manipulateTourRequest);
            //Assert.IsType<TourManipulateResponse>(response);
        }

        /// <summary>
        /// Test TourPost
        /// </summary>
        [Fact]
        public void TourPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateTourRequest? createTourRequest = null;
            //var response = instance.TourPost(createTourRequest);
            //Assert.IsType<TourModel>(response);
        }

        /// <summary>
        /// Test TourRemoveTagFromTourPut
        /// </summary>
        [Fact]
        public void TourRemoveTagFromTourPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RemoveTagFromTourRequest? removeTagFromTourRequest = null;
            //instance.TourRemoveTagFromTourPut(removeTagFromTourRequest);
        }

        /// <summary>
        /// Test TourSendToTelematicPut
        /// </summary>
        [Fact]
        public void TourSendToTelematicPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? tourId = null;
            //var response = instance.TourSendToTelematicPut(tourId);
            //Assert.IsType<List<UsedLoadingSlotAggregationModel>>(response);
        }

        /// <summary>
        /// Test TourSetTourActualTimesPut
        /// </summary>
        [Fact]
        public void TourSetTourActualTimesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetTourActualTimesRequest? setTourActualTimesRequest = null;
            //instance.TourSetTourActualTimesPut(setTourActualTimesRequest);
        }
    }
}
