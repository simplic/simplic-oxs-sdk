/*
 * Simplic.OxS.Logistics
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Simplic.OxS.SDK.Logistics.Client;
using Simplic.OxS.SDK.Logistics.Api;
// uncomment below to import models
//using Simplic.OxS.SDK.Logistics.Model;

namespace Simplic.OxS.SDK.Logistics.Test.Api
{
    /// <summary>
    ///  Class for testing ShipmentSDK
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ShipmentSDKTests : IDisposable
    {
        private ShipmentSDK instance;

        public ShipmentSDKTests()
        {
            instance = new ShipmentSDK();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShipmentSDK
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ShipmentSDK
            //Assert.IsType<ShipmentSDK>(instance);
        }

        /// <summary>
        /// Test ShipmentGetAllWithConditionsGet
        /// </summary>
        [Fact]
        public void ShipmentGetAllWithConditionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? status = null;
            //DateTime? from = null;
            //DateTime? to = null;
            //var response = instance.ShipmentGetAllWithConditionsGet(status, from, to);
            //Assert.IsType<List<ShipmentModel>>(response);
        }

        /// <summary>
        /// Test ShipmentGetUpdatedSinceGet
        /// </summary>
        [Fact]
        public void ShipmentGetUpdatedSinceGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? since = null;
            //var response = instance.ShipmentGetUpdatedSinceGet(since);
            //Assert.IsType<List<ShipmentModel>>(response);
        }

        /// <summary>
        /// Test ShipmentIdDelete
        /// </summary>
        [Fact]
        public void ShipmentIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ShipmentIdDelete(id);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ShipmentIdGet
        /// </summary>
        [Fact]
        public void ShipmentIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ShipmentIdGet(id);
            //Assert.IsType<ShipmentModel>(response);
        }

        /// <summary>
        /// Test ShipmentIdPatch
        /// </summary>
        [Fact]
        public void ShipmentIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //PatchShipmentRequest? patchShipmentRequest = null;
            //var response = instance.ShipmentIdPatch(id, patchShipmentRequest);
            //Assert.IsType<ShipmentModel>(response);
        }

        /// <summary>
        /// Test ShipmentPost
        /// </summary>
        [Fact]
        public void ShipmentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateShipmentRequest? createShipmentRequest = null;
            //var response = instance.ShipmentPost(createShipmentRequest);
            //Assert.IsType<ShipmentModel>(response);
        }
    }
}
