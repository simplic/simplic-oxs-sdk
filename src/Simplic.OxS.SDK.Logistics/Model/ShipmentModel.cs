/*
 * Simplic.OxS.Logistics
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Simplic.OxS.SDK.OpenAPIDateConverter;

using Simplic.OxS.SDK;

namespace Simplic.OxS.SDK.Logistics
{
    /// <summary>
    /// Shared model of shipment.
    /// </summary>
    [DataContract(Name = "ShipmentModel")]
    public partial class ShipmentModel : IEquatable<ShipmentModel>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets LoadingTimeType
        /// </summary>
        [DataMember(Name = "loadingTimeType", EmitDefaultValue = false)]
        public LoadingDateTimeType? LoadingTimeType { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryTimeType
        /// </summary>
        [DataMember(Name = "deliveryTimeType", EmitDefaultValue = false)]
        public LoadingDateTimeType? DeliveryTimeType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentModel" /> class.
        /// </summary>
        /// <param name="id">Gets or sets the id..</param>
        /// <param name="createDateTime">Gets or sets the create date time     This defines the point of time the shipment is created.  .</param>
        /// <param name="updateDateTime">Get or sets the update date time.     This defines the last point of time the shipment was updated.  .</param>
        /// <param name="createUserId">Gets or sets the create user id.     This is the user that created the shipment.  .</param>
        /// <param name="updateUserId">Gets or sets the update user id.     This defines the user which made the last changes to the shipment.  .</param>
        /// <param name="loadAddress">loadAddress.</param>
        /// <param name="deliveryAddress">deliveryAddress.</param>
        /// <param name="carrier">carrier.</param>
        /// <param name="freightPayer">freightPayer.</param>
        /// <param name="customer">customer.</param>
        /// <param name="recipientAddress">recipientAddress.</param>
        /// <param name="invoiceRecipient">invoiceRecipient.</param>
        /// <param name="senderAddress">senderAddress.</param>
        /// <param name="supplier">supplier.</param>
        /// <param name="loadStart">Gets or sets the load time slot start with date and time     This will define the start of the time range the driver could start the loading process.    This will usually be set by the user or an api based on the values he gets from customer..</param>
        /// <param name="loadEnd">Gets or sets the load time slot end with date and time.     This will define the end of the time range the driver could end the loading process.    This will usually be set by the user or an api based on the values he gets from the customer..</param>
        /// <param name="plannedLoadStart">Gets or sets the planned laod start with date and time.     This will define the planned start of the loading process.    This will usually be set by the user based on his dayplan for the resource..</param>
        /// <param name="plannedLoadEnd">Gets or sets the planned load end with date and time.     This will define the planned end of the loading process.    This will usually be set by the user based on his dayplan for the resource..</param>
        /// <param name="calculatedLoadStart">Gets or sets the calculated load start with date and time.     This will define the calculated / theoretical start of the loading process.    This will usually be set by an api based on data given by the telematics..</param>
        /// <param name="calculatedLoadEnd">Gets or sets the calculated load end with date and time.     This will define the calculated / theoretical end of the laoding process.    This will usually be set by an api based on data given by the telematics..</param>
        /// <param name="actualLoadStart">Gets or sets the actual laod start with date and time.     This will define the actual start of the loading process.    This will usually be set by an api based on the data given by the telematics..</param>
        /// <param name="actualLoadEnd">Gets or sets the actual load end with date and time.     This will define the actual end of the loading process.    This will usually be set by an api based on the data given by the telematics.</param>
        /// <param name="loadingTimeType">loadingTimeType.</param>
        /// <param name="deliveryStart">Gets or sets the delivery time slot start with date and time.     This will define the start of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer..</param>
        /// <param name="deliveryEnd">Gets or sets the delivery time slot end with date and time.     This will define the end of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer..</param>
        /// <param name="plannedDeliveryStart">Gets or sets the planned delivery start with date and time.     This defines the planned start of the delivery / unloading process.    This will usually be set by the user based on his dayplan of the resource..</param>
        /// <param name="plannedDeliveryEnd">Gets or sets the planned delivery end with date and time.     This defines the planned end off the delivery / unlaoding process.    This will usually be set by the user based on his dayplan of the resource..</param>
        /// <param name="calculatedDeliveryStart">Gets or sets the calculated delivery start with date and time.     This defines the calculated start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data..</param>
        /// <param name="calculatedDeliveryEnd">Gets or sets the calculated delivery end with date and time.     This defines the calculated end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data..</param>
        /// <param name="actualDeliveryStart">Gets or sets the actual delivery start with date and time.     This defines the actual start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data..</param>
        /// <param name="actualDeliveryEnd">Gets or sets the actual delivery end with date and time.     This defines the actual end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data..</param>
        /// <param name="deliveryTimeType">deliveryTimeType.</param>
        /// <param name="orderDate">Gets or sets the order date.     This defines the date the shipment is ordered at.  This is a relevant information for the billing process and needs to be set.  .</param>
        /// <param name="shipmentNumber">Gets or sets the shipment number.     This defines a number to identify the shipment as the user.  .</param>
        /// <param name="referenceNumber">Gets or sets the reference number     This defines a number that references the same shipment in another programm or context.  .</param>
        /// <param name="loadNumber">Gets or sets the load number.     This defines a number that the driver might need to load this shipment  .</param>
        /// <param name="deliveryNumber">Gets or sets the delivery number.     This defines a number that the driber might need to deliver / unload this shipment.  .</param>
        /// <param name="isTemplate">Gets or sets werther the shipment is a template.     Template shipments are used to create shipments with certain values preset.  .</param>
        /// <param name="templateName">Gets or sets the template name.     A name for the template to give the user the option to find it easier  .</param>
        /// <param name="status">status.</param>
        /// <param name="transportOrder">transportOrder.</param>
        /// <param name="items">Gets or sets shipment items.     Represents a list of items of a shipment which will contain further information about the freight.  .</param>
        /// <param name="documents">Gets or sets the documments.     These documents contain more information that just the shipment.   E.g. the shipment item id or weight note id.    Furthermore documents might be marked for invoices and ordered for them..</param>
        /// <param name="tags">Gets or sets the tags.     Tags are short texts to add information to a shipment without the need to add new properties.    These are e.g. used in the pricing module to add some additional conditions..</param>
        /// <param name="notes">Gets or sets the nots.     This gives the user the possibillity to add some more sentences about this shipment.  .</param>
        /// <param name="isDeleted">Gets or sets whether the shipment is deleted..</param>
        /// <param name="loadWorkflow">loadWorkflow.</param>
        /// <param name="deliveryWorkflow">deliveryWorkflow.</param>
        /// <param name="tours">Gets or sets a list of tour shipments.     This collection will be filled when creating or updating tour objects.  .</param>
        /// <param name="constructionSite">constructionSite.</param>
        /// <param name="addon">Gets or sets a dictionary of addon properties.     Can be used to set customer exclusive properties for a shipment.  .</param>
        public ShipmentModel(Guid id = default(Guid), DateTime createDateTime = default(DateTime), DateTime updateDateTime = default(DateTime), Guid createUserId = default(Guid), Guid updateUserId = default(Guid), AddressModel loadAddress = default(AddressModel), AddressModel deliveryAddress = default(AddressModel), BillableContactModel carrier = default(BillableContactModel), BillableContactModel freightPayer = default(BillableContactModel), BillableContactModel customer = default(BillableContactModel), AddressModel recipientAddress = default(AddressModel), BillableContactModel invoiceRecipient = default(BillableContactModel), AddressModel senderAddress = default(AddressModel), BillableContactModel supplier = default(BillableContactModel), DateTime loadStart = default(DateTime), DateTime loadEnd = default(DateTime), DateTime? plannedLoadStart = default(DateTime?), DateTime? plannedLoadEnd = default(DateTime?), DateTime? calculatedLoadStart = default(DateTime?), DateTime? calculatedLoadEnd = default(DateTime?), DateTime? actualLoadStart = default(DateTime?), DateTime? actualLoadEnd = default(DateTime?), LoadingDateTimeType? loadingTimeType = default(LoadingDateTimeType?), DateTime deliveryStart = default(DateTime), DateTime deliveryEnd = default(DateTime), DateTime? plannedDeliveryStart = default(DateTime?), DateTime? plannedDeliveryEnd = default(DateTime?), DateTime? calculatedDeliveryStart = default(DateTime?), DateTime? calculatedDeliveryEnd = default(DateTime?), DateTime? actualDeliveryStart = default(DateTime?), DateTime? actualDeliveryEnd = default(DateTime?), LoadingDateTimeType? deliveryTimeType = default(LoadingDateTimeType?), DateTime orderDate = default(DateTime), string shipmentNumber = default(string), string referenceNumber = default(string), string loadNumber = default(string), string deliveryNumber = default(string), bool isTemplate = default(bool), string templateName = default(string), ShipmentStatusModel status = default(ShipmentStatusModel), ShipmentTransportOrderModel transportOrder = default(ShipmentTransportOrderModel), List<ShipmentItemModel> items = default(List<ShipmentItemModel>), List<ShipmentDocumentModel> documents = default(List<ShipmentDocumentModel>), List<ShipmentTagModel> tags = default(List<ShipmentTagModel>), string notes = default(string), bool isDeleted = default(bool), ShipmentTelematicWorkflowModel loadWorkflow = default(ShipmentTelematicWorkflowModel), ShipmentTelematicWorkflowModel deliveryWorkflow = default(ShipmentTelematicWorkflowModel), List<ShipmentTourModel> tours = default(List<ShipmentTourModel>), ConstructionSiteModel constructionSite = default(ConstructionSiteModel), Dictionary<string, Object> addon = default(Dictionary<string, Object>))
        {
            this.Id = id;
            this.CreateDateTime = createDateTime;
            this.UpdateDateTime = updateDateTime;
            this.CreateUserId = createUserId;
            this.UpdateUserId = updateUserId;
            this.LoadAddress = loadAddress;
            this.DeliveryAddress = deliveryAddress;
            this.Carrier = carrier;
            this.FreightPayer = freightPayer;
            this.Customer = customer;
            this.RecipientAddress = recipientAddress;
            this.InvoiceRecipient = invoiceRecipient;
            this.SenderAddress = senderAddress;
            this.Supplier = supplier;
            this.LoadStart = loadStart;
            this.LoadEnd = loadEnd;
            this.PlannedLoadStart = plannedLoadStart;
            this.PlannedLoadEnd = plannedLoadEnd;
            this.CalculatedLoadStart = calculatedLoadStart;
            this.CalculatedLoadEnd = calculatedLoadEnd;
            this.ActualLoadStart = actualLoadStart;
            this.ActualLoadEnd = actualLoadEnd;
            this.LoadingTimeType = loadingTimeType;
            this.DeliveryStart = deliveryStart;
            this.DeliveryEnd = deliveryEnd;
            this.PlannedDeliveryStart = plannedDeliveryStart;
            this.PlannedDeliveryEnd = plannedDeliveryEnd;
            this.CalculatedDeliveryStart = calculatedDeliveryStart;
            this.CalculatedDeliveryEnd = calculatedDeliveryEnd;
            this.ActualDeliveryStart = actualDeliveryStart;
            this.ActualDeliveryEnd = actualDeliveryEnd;
            this.DeliveryTimeType = deliveryTimeType;
            this.OrderDate = orderDate;
            this.ShipmentNumber = shipmentNumber;
            this.ReferenceNumber = referenceNumber;
            this.LoadNumber = loadNumber;
            this.DeliveryNumber = deliveryNumber;
            this.IsTemplate = isTemplate;
            this.TemplateName = templateName;
            this.Status = status;
            this.TransportOrder = transportOrder;
            this.Items = items;
            this.Documents = documents;
            this.Tags = tags;
            this.Notes = notes;
            this.IsDeleted = isDeleted;
            this.LoadWorkflow = loadWorkflow;
            this.DeliveryWorkflow = deliveryWorkflow;
            this.Tours = tours;
            this.ConstructionSite = constructionSite;
            this.Addon = addon;
        }

        /// <summary>
        /// Gets or sets the id.
        /// </summary>
        /// <value>Gets or sets the id.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the create date time     This defines the point of time the shipment is created.  
        /// </summary>
        /// <value>Gets or sets the create date time     This defines the point of time the shipment is created.  </value>
        [DataMember(Name = "createDateTime", EmitDefaultValue = false)]
        public DateTime CreateDateTime { get; set; }

        /// <summary>
        /// Get or sets the update date time.     This defines the last point of time the shipment was updated.  
        /// </summary>
        /// <value>Get or sets the update date time.     This defines the last point of time the shipment was updated.  </value>
        [DataMember(Name = "updateDateTime", EmitDefaultValue = false)]
        public DateTime UpdateDateTime { get; set; }

        /// <summary>
        /// Gets or sets the create user id.     This is the user that created the shipment.  
        /// </summary>
        /// <value>Gets or sets the create user id.     This is the user that created the shipment.  </value>
        [DataMember(Name = "createUserId", EmitDefaultValue = false)]
        public Guid CreateUserId { get; set; }

        /// <summary>
        /// Gets or sets the update user id.     This defines the user which made the last changes to the shipment.  
        /// </summary>
        /// <value>Gets or sets the update user id.     This defines the user which made the last changes to the shipment.  </value>
        [DataMember(Name = "updateUserId", EmitDefaultValue = false)]
        public Guid UpdateUserId { get; set; }

        /// <summary>
        /// Gets or Sets LoadAddress
        /// </summary>
        [DataMember(Name = "loadAddress", EmitDefaultValue = false)]
        public AddressModel LoadAddress { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryAddress
        /// </summary>
        [DataMember(Name = "deliveryAddress", EmitDefaultValue = false)]
        public AddressModel DeliveryAddress { get; set; }

        /// <summary>
        /// Gets or Sets Carrier
        /// </summary>
        [DataMember(Name = "carrier", EmitDefaultValue = false)]
        public BillableContactModel Carrier { get; set; }

        /// <summary>
        /// Gets or Sets FreightPayer
        /// </summary>
        [DataMember(Name = "freightPayer", EmitDefaultValue = false)]
        public BillableContactModel FreightPayer { get; set; }

        /// <summary>
        /// Gets or Sets Customer
        /// </summary>
        [DataMember(Name = "customer", EmitDefaultValue = false)]
        public BillableContactModel Customer { get; set; }

        /// <summary>
        /// Gets or Sets RecipientAddress
        /// </summary>
        [DataMember(Name = "recipientAddress", EmitDefaultValue = false)]
        public AddressModel RecipientAddress { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceRecipient
        /// </summary>
        [DataMember(Name = "invoiceRecipient", EmitDefaultValue = false)]
        public BillableContactModel InvoiceRecipient { get; set; }

        /// <summary>
        /// Gets or Sets SenderAddress
        /// </summary>
        [DataMember(Name = "senderAddress", EmitDefaultValue = false)]
        public AddressModel SenderAddress { get; set; }

        /// <summary>
        /// Gets or Sets Supplier
        /// </summary>
        [DataMember(Name = "supplier", EmitDefaultValue = false)]
        public BillableContactModel Supplier { get; set; }

        /// <summary>
        /// Gets or sets the load time slot start with date and time     This will define the start of the time range the driver could start the loading process.    This will usually be set by the user or an api based on the values he gets from customer.
        /// </summary>
        /// <value>Gets or sets the load time slot start with date and time     This will define the start of the time range the driver could start the loading process.    This will usually be set by the user or an api based on the values he gets from customer.</value>
        [DataMember(Name = "loadStart", EmitDefaultValue = false)]
        public DateTime LoadStart { get; set; }

        /// <summary>
        /// Gets or sets the load time slot end with date and time.     This will define the end of the time range the driver could end the loading process.    This will usually be set by the user or an api based on the values he gets from the customer.
        /// </summary>
        /// <value>Gets or sets the load time slot end with date and time.     This will define the end of the time range the driver could end the loading process.    This will usually be set by the user or an api based on the values he gets from the customer.</value>
        [DataMember(Name = "loadEnd", EmitDefaultValue = false)]
        public DateTime LoadEnd { get; set; }

        /// <summary>
        /// Gets or sets the planned laod start with date and time.     This will define the planned start of the loading process.    This will usually be set by the user based on his dayplan for the resource.
        /// </summary>
        /// <value>Gets or sets the planned laod start with date and time.     This will define the planned start of the loading process.    This will usually be set by the user based on his dayplan for the resource.</value>
        [DataMember(Name = "plannedLoadStart", EmitDefaultValue = true)]
        public DateTime? PlannedLoadStart { get; set; }

        /// <summary>
        /// Gets or sets the planned load end with date and time.     This will define the planned end of the loading process.    This will usually be set by the user based on his dayplan for the resource.
        /// </summary>
        /// <value>Gets or sets the planned load end with date and time.     This will define the planned end of the loading process.    This will usually be set by the user based on his dayplan for the resource.</value>
        [DataMember(Name = "plannedLoadEnd", EmitDefaultValue = true)]
        public DateTime? PlannedLoadEnd { get; set; }

        /// <summary>
        /// Gets or sets the calculated load start with date and time.     This will define the calculated / theoretical start of the loading process.    This will usually be set by an api based on data given by the telematics.
        /// </summary>
        /// <value>Gets or sets the calculated load start with date and time.     This will define the calculated / theoretical start of the loading process.    This will usually be set by an api based on data given by the telematics.</value>
        [DataMember(Name = "calculatedLoadStart", EmitDefaultValue = true)]
        public DateTime? CalculatedLoadStart { get; set; }

        /// <summary>
        /// Gets or sets the calculated load end with date and time.     This will define the calculated / theoretical end of the laoding process.    This will usually be set by an api based on data given by the telematics.
        /// </summary>
        /// <value>Gets or sets the calculated load end with date and time.     This will define the calculated / theoretical end of the laoding process.    This will usually be set by an api based on data given by the telematics.</value>
        [DataMember(Name = "calculatedLoadEnd", EmitDefaultValue = true)]
        public DateTime? CalculatedLoadEnd { get; set; }

        /// <summary>
        /// Gets or sets the actual laod start with date and time.     This will define the actual start of the loading process.    This will usually be set by an api based on the data given by the telematics.
        /// </summary>
        /// <value>Gets or sets the actual laod start with date and time.     This will define the actual start of the loading process.    This will usually be set by an api based on the data given by the telematics.</value>
        [DataMember(Name = "actualLoadStart", EmitDefaultValue = true)]
        public DateTime? ActualLoadStart { get; set; }

        /// <summary>
        /// Gets or sets the actual load end with date and time.     This will define the actual end of the loading process.    This will usually be set by an api based on the data given by the telematics
        /// </summary>
        /// <value>Gets or sets the actual load end with date and time.     This will define the actual end of the loading process.    This will usually be set by an api based on the data given by the telematics</value>
        [DataMember(Name = "actualLoadEnd", EmitDefaultValue = true)]
        public DateTime? ActualLoadEnd { get; set; }

        /// <summary>
        /// Gets or sets the delivery time slot start with date and time.     This will define the start of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer.
        /// </summary>
        /// <value>Gets or sets the delivery time slot start with date and time.     This will define the start of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer.</value>
        [DataMember(Name = "deliveryStart", EmitDefaultValue = false)]
        public DateTime DeliveryStart { get; set; }

        /// <summary>
        /// Gets or sets the delivery time slot end with date and time.     This will define the end of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer.
        /// </summary>
        /// <value>Gets or sets the delivery time slot end with date and time.     This will define the end of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer.</value>
        [DataMember(Name = "deliveryEnd", EmitDefaultValue = false)]
        public DateTime DeliveryEnd { get; set; }

        /// <summary>
        /// Gets or sets the planned delivery start with date and time.     This defines the planned start of the delivery / unloading process.    This will usually be set by the user based on his dayplan of the resource.
        /// </summary>
        /// <value>Gets or sets the planned delivery start with date and time.     This defines the planned start of the delivery / unloading process.    This will usually be set by the user based on his dayplan of the resource.</value>
        [DataMember(Name = "plannedDeliveryStart", EmitDefaultValue = true)]
        public DateTime? PlannedDeliveryStart { get; set; }

        /// <summary>
        /// Gets or sets the planned delivery end with date and time.     This defines the planned end off the delivery / unlaoding process.    This will usually be set by the user based on his dayplan of the resource.
        /// </summary>
        /// <value>Gets or sets the planned delivery end with date and time.     This defines the planned end off the delivery / unlaoding process.    This will usually be set by the user based on his dayplan of the resource.</value>
        [DataMember(Name = "plannedDeliveryEnd", EmitDefaultValue = true)]
        public DateTime? PlannedDeliveryEnd { get; set; }

        /// <summary>
        /// Gets or sets the calculated delivery start with date and time.     This defines the calculated start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.
        /// </summary>
        /// <value>Gets or sets the calculated delivery start with date and time.     This defines the calculated start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.</value>
        [DataMember(Name = "calculatedDeliveryStart", EmitDefaultValue = true)]
        public DateTime? CalculatedDeliveryStart { get; set; }

        /// <summary>
        /// Gets or sets the calculated delivery end with date and time.     This defines the calculated end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.
        /// </summary>
        /// <value>Gets or sets the calculated delivery end with date and time.     This defines the calculated end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.</value>
        [DataMember(Name = "calculatedDeliveryEnd", EmitDefaultValue = true)]
        public DateTime? CalculatedDeliveryEnd { get; set; }

        /// <summary>
        /// Gets or sets the actual delivery start with date and time.     This defines the actual start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.
        /// </summary>
        /// <value>Gets or sets the actual delivery start with date and time.     This defines the actual start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.</value>
        [DataMember(Name = "actualDeliveryStart", EmitDefaultValue = true)]
        public DateTime? ActualDeliveryStart { get; set; }

        /// <summary>
        /// Gets or sets the actual delivery end with date and time.     This defines the actual end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.
        /// </summary>
        /// <value>Gets or sets the actual delivery end with date and time.     This defines the actual end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.</value>
        [DataMember(Name = "actualDeliveryEnd", EmitDefaultValue = true)]
        public DateTime? ActualDeliveryEnd { get; set; }

        /// <summary>
        /// Gets or sets the order date.     This defines the date the shipment is ordered at.  This is a relevant information for the billing process and needs to be set.  
        /// </summary>
        /// <value>Gets or sets the order date.     This defines the date the shipment is ordered at.  This is a relevant information for the billing process and needs to be set.  </value>
        [DataMember(Name = "orderDate", EmitDefaultValue = false)]
        public DateTime OrderDate { get; set; }

        /// <summary>
        /// Gets or sets the shipment number.     This defines a number to identify the shipment as the user.  
        /// </summary>
        /// <value>Gets or sets the shipment number.     This defines a number to identify the shipment as the user.  </value>
        [DataMember(Name = "shipmentNumber", EmitDefaultValue = true)]
        public string ShipmentNumber { get; set; }

        /// <summary>
        /// Gets or sets the reference number     This defines a number that references the same shipment in another programm or context.  
        /// </summary>
        /// <value>Gets or sets the reference number     This defines a number that references the same shipment in another programm or context.  </value>
        [DataMember(Name = "referenceNumber", EmitDefaultValue = true)]
        public string ReferenceNumber { get; set; }

        /// <summary>
        /// Gets or sets the load number.     This defines a number that the driver might need to load this shipment  
        /// </summary>
        /// <value>Gets or sets the load number.     This defines a number that the driver might need to load this shipment  </value>
        [DataMember(Name = "loadNumber", EmitDefaultValue = true)]
        public string LoadNumber { get; set; }

        /// <summary>
        /// Gets or sets the delivery number.     This defines a number that the driber might need to deliver / unload this shipment.  
        /// </summary>
        /// <value>Gets or sets the delivery number.     This defines a number that the driber might need to deliver / unload this shipment.  </value>
        [DataMember(Name = "deliveryNumber", EmitDefaultValue = true)]
        public string DeliveryNumber { get; set; }

        /// <summary>
        /// Gets or sets werther the shipment is a template.     Template shipments are used to create shipments with certain values preset.  
        /// </summary>
        /// <value>Gets or sets werther the shipment is a template.     Template shipments are used to create shipments with certain values preset.  </value>
        [DataMember(Name = "isTemplate", EmitDefaultValue = true)]
        public bool IsTemplate { get; set; }

        /// <summary>
        /// Gets or sets the template name.     A name for the template to give the user the option to find it easier  
        /// </summary>
        /// <value>Gets or sets the template name.     A name for the template to give the user the option to find it easier  </value>
        [DataMember(Name = "templateName", EmitDefaultValue = true)]
        public string TemplateName { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public ShipmentStatusModel Status { get; set; }

        /// <summary>
        /// Gets or Sets TransportOrder
        /// </summary>
        [DataMember(Name = "transportOrder", EmitDefaultValue = false)]
        public ShipmentTransportOrderModel TransportOrder { get; set; }

        /// <summary>
        /// Gets or sets shipment items.     Represents a list of items of a shipment which will contain further information about the freight.  
        /// </summary>
        /// <value>Gets or sets shipment items.     Represents a list of items of a shipment which will contain further information about the freight.  </value>
        [DataMember(Name = "items", EmitDefaultValue = true)]
        public List<ShipmentItemModel> Items { get; set; }

        /// <summary>
        /// Gets or sets the documments.     These documents contain more information that just the shipment.   E.g. the shipment item id or weight note id.    Furthermore documents might be marked for invoices and ordered for them.
        /// </summary>
        /// <value>Gets or sets the documments.     These documents contain more information that just the shipment.   E.g. the shipment item id or weight note id.    Furthermore documents might be marked for invoices and ordered for them.</value>
        [DataMember(Name = "documents", EmitDefaultValue = true)]
        public List<ShipmentDocumentModel> Documents { get; set; }

        /// <summary>
        /// Gets or sets the tags.     Tags are short texts to add information to a shipment without the need to add new properties.    These are e.g. used in the pricing module to add some additional conditions.
        /// </summary>
        /// <value>Gets or sets the tags.     Tags are short texts to add information to a shipment without the need to add new properties.    These are e.g. used in the pricing module to add some additional conditions.</value>
        [DataMember(Name = "tags", EmitDefaultValue = true)]
        public List<ShipmentTagModel> Tags { get; set; }

        /// <summary>
        /// Gets or sets the nots.     This gives the user the possibillity to add some more sentences about this shipment.  
        /// </summary>
        /// <value>Gets or sets the nots.     This gives the user the possibillity to add some more sentences about this shipment.  </value>
        [DataMember(Name = "notes", EmitDefaultValue = true)]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or sets whether the shipment is deleted.
        /// </summary>
        /// <value>Gets or sets whether the shipment is deleted.</value>
        [DataMember(Name = "isDeleted", EmitDefaultValue = true)]
        public bool IsDeleted { get; set; }

        /// <summary>
        /// Gets or Sets LoadWorkflow
        /// </summary>
        [DataMember(Name = "loadWorkflow", EmitDefaultValue = false)]
        public ShipmentTelematicWorkflowModel LoadWorkflow { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryWorkflow
        /// </summary>
        [DataMember(Name = "deliveryWorkflow", EmitDefaultValue = false)]
        public ShipmentTelematicWorkflowModel DeliveryWorkflow { get; set; }

        /// <summary>
        /// Gets or sets a list of tour shipments.     This collection will be filled when creating or updating tour objects.  
        /// </summary>
        /// <value>Gets or sets a list of tour shipments.     This collection will be filled when creating or updating tour objects.  </value>
        [DataMember(Name = "tours", EmitDefaultValue = true)]
        public List<ShipmentTourModel> Tours { get; set; }

        /// <summary>
        /// Gets or Sets ConstructionSite
        /// </summary>
        [DataMember(Name = "constructionSite", EmitDefaultValue = false)]
        public ConstructionSiteModel ConstructionSite { get; set; }

        /// <summary>
        /// Gets or sets a dictionary of addon properties.     Can be used to set customer exclusive properties for a shipment.  
        /// </summary>
        /// <value>Gets or sets a dictionary of addon properties.     Can be used to set customer exclusive properties for a shipment.  </value>
        [DataMember(Name = "addon", EmitDefaultValue = true)]
        public Dictionary<string, Object> Addon { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShipmentModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreateDateTime: ").Append(CreateDateTime).Append("\n");
            sb.Append("  UpdateDateTime: ").Append(UpdateDateTime).Append("\n");
            sb.Append("  CreateUserId: ").Append(CreateUserId).Append("\n");
            sb.Append("  UpdateUserId: ").Append(UpdateUserId).Append("\n");
            sb.Append("  LoadAddress: ").Append(LoadAddress).Append("\n");
            sb.Append("  DeliveryAddress: ").Append(DeliveryAddress).Append("\n");
            sb.Append("  Carrier: ").Append(Carrier).Append("\n");
            sb.Append("  FreightPayer: ").Append(FreightPayer).Append("\n");
            sb.Append("  Customer: ").Append(Customer).Append("\n");
            sb.Append("  RecipientAddress: ").Append(RecipientAddress).Append("\n");
            sb.Append("  InvoiceRecipient: ").Append(InvoiceRecipient).Append("\n");
            sb.Append("  SenderAddress: ").Append(SenderAddress).Append("\n");
            sb.Append("  Supplier: ").Append(Supplier).Append("\n");
            sb.Append("  LoadStart: ").Append(LoadStart).Append("\n");
            sb.Append("  LoadEnd: ").Append(LoadEnd).Append("\n");
            sb.Append("  PlannedLoadStart: ").Append(PlannedLoadStart).Append("\n");
            sb.Append("  PlannedLoadEnd: ").Append(PlannedLoadEnd).Append("\n");
            sb.Append("  CalculatedLoadStart: ").Append(CalculatedLoadStart).Append("\n");
            sb.Append("  CalculatedLoadEnd: ").Append(CalculatedLoadEnd).Append("\n");
            sb.Append("  ActualLoadStart: ").Append(ActualLoadStart).Append("\n");
            sb.Append("  ActualLoadEnd: ").Append(ActualLoadEnd).Append("\n");
            sb.Append("  LoadingTimeType: ").Append(LoadingTimeType).Append("\n");
            sb.Append("  DeliveryStart: ").Append(DeliveryStart).Append("\n");
            sb.Append("  DeliveryEnd: ").Append(DeliveryEnd).Append("\n");
            sb.Append("  PlannedDeliveryStart: ").Append(PlannedDeliveryStart).Append("\n");
            sb.Append("  PlannedDeliveryEnd: ").Append(PlannedDeliveryEnd).Append("\n");
            sb.Append("  CalculatedDeliveryStart: ").Append(CalculatedDeliveryStart).Append("\n");
            sb.Append("  CalculatedDeliveryEnd: ").Append(CalculatedDeliveryEnd).Append("\n");
            sb.Append("  ActualDeliveryStart: ").Append(ActualDeliveryStart).Append("\n");
            sb.Append("  ActualDeliveryEnd: ").Append(ActualDeliveryEnd).Append("\n");
            sb.Append("  DeliveryTimeType: ").Append(DeliveryTimeType).Append("\n");
            sb.Append("  OrderDate: ").Append(OrderDate).Append("\n");
            sb.Append("  ShipmentNumber: ").Append(ShipmentNumber).Append("\n");
            sb.Append("  ReferenceNumber: ").Append(ReferenceNumber).Append("\n");
            sb.Append("  LoadNumber: ").Append(LoadNumber).Append("\n");
            sb.Append("  DeliveryNumber: ").Append(DeliveryNumber).Append("\n");
            sb.Append("  IsTemplate: ").Append(IsTemplate).Append("\n");
            sb.Append("  TemplateName: ").Append(TemplateName).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TransportOrder: ").Append(TransportOrder).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  Documents: ").Append(Documents).Append("\n");
            sb.Append("  Tags: ").Append(Tags).Append("\n");
            sb.Append("  Notes: ").Append(Notes).Append("\n");
            sb.Append("  IsDeleted: ").Append(IsDeleted).Append("\n");
            sb.Append("  LoadWorkflow: ").Append(LoadWorkflow).Append("\n");
            sb.Append("  DeliveryWorkflow: ").Append(DeliveryWorkflow).Append("\n");
            sb.Append("  Tours: ").Append(Tours).Append("\n");
            sb.Append("  ConstructionSite: ").Append(ConstructionSite).Append("\n");
            sb.Append("  Addon: ").Append(Addon).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ShipmentModel);
        }

        /// <summary>
        /// Returns true if ShipmentModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ShipmentModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShipmentModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.CreateDateTime == input.CreateDateTime ||
                    (this.CreateDateTime != null &&
                    this.CreateDateTime.Equals(input.CreateDateTime))
                ) && 
                (
                    this.UpdateDateTime == input.UpdateDateTime ||
                    (this.UpdateDateTime != null &&
                    this.UpdateDateTime.Equals(input.UpdateDateTime))
                ) && 
                (
                    this.CreateUserId == input.CreateUserId ||
                    (this.CreateUserId != null &&
                    this.CreateUserId.Equals(input.CreateUserId))
                ) && 
                (
                    this.UpdateUserId == input.UpdateUserId ||
                    (this.UpdateUserId != null &&
                    this.UpdateUserId.Equals(input.UpdateUserId))
                ) && 
                (
                    this.LoadAddress == input.LoadAddress ||
                    (this.LoadAddress != null &&
                    this.LoadAddress.Equals(input.LoadAddress))
                ) && 
                (
                    this.DeliveryAddress == input.DeliveryAddress ||
                    (this.DeliveryAddress != null &&
                    this.DeliveryAddress.Equals(input.DeliveryAddress))
                ) && 
                (
                    this.Carrier == input.Carrier ||
                    (this.Carrier != null &&
                    this.Carrier.Equals(input.Carrier))
                ) && 
                (
                    this.FreightPayer == input.FreightPayer ||
                    (this.FreightPayer != null &&
                    this.FreightPayer.Equals(input.FreightPayer))
                ) && 
                (
                    this.Customer == input.Customer ||
                    (this.Customer != null &&
                    this.Customer.Equals(input.Customer))
                ) && 
                (
                    this.RecipientAddress == input.RecipientAddress ||
                    (this.RecipientAddress != null &&
                    this.RecipientAddress.Equals(input.RecipientAddress))
                ) && 
                (
                    this.InvoiceRecipient == input.InvoiceRecipient ||
                    (this.InvoiceRecipient != null &&
                    this.InvoiceRecipient.Equals(input.InvoiceRecipient))
                ) && 
                (
                    this.SenderAddress == input.SenderAddress ||
                    (this.SenderAddress != null &&
                    this.SenderAddress.Equals(input.SenderAddress))
                ) && 
                (
                    this.Supplier == input.Supplier ||
                    (this.Supplier != null &&
                    this.Supplier.Equals(input.Supplier))
                ) && 
                (
                    this.LoadStart == input.LoadStart ||
                    (this.LoadStart != null &&
                    this.LoadStart.Equals(input.LoadStart))
                ) && 
                (
                    this.LoadEnd == input.LoadEnd ||
                    (this.LoadEnd != null &&
                    this.LoadEnd.Equals(input.LoadEnd))
                ) && 
                (
                    this.PlannedLoadStart == input.PlannedLoadStart ||
                    (this.PlannedLoadStart != null &&
                    this.PlannedLoadStart.Equals(input.PlannedLoadStart))
                ) && 
                (
                    this.PlannedLoadEnd == input.PlannedLoadEnd ||
                    (this.PlannedLoadEnd != null &&
                    this.PlannedLoadEnd.Equals(input.PlannedLoadEnd))
                ) && 
                (
                    this.CalculatedLoadStart == input.CalculatedLoadStart ||
                    (this.CalculatedLoadStart != null &&
                    this.CalculatedLoadStart.Equals(input.CalculatedLoadStart))
                ) && 
                (
                    this.CalculatedLoadEnd == input.CalculatedLoadEnd ||
                    (this.CalculatedLoadEnd != null &&
                    this.CalculatedLoadEnd.Equals(input.CalculatedLoadEnd))
                ) && 
                (
                    this.ActualLoadStart == input.ActualLoadStart ||
                    (this.ActualLoadStart != null &&
                    this.ActualLoadStart.Equals(input.ActualLoadStart))
                ) && 
                (
                    this.ActualLoadEnd == input.ActualLoadEnd ||
                    (this.ActualLoadEnd != null &&
                    this.ActualLoadEnd.Equals(input.ActualLoadEnd))
                ) && 
                (
                    this.LoadingTimeType == input.LoadingTimeType ||
                    this.LoadingTimeType.Equals(input.LoadingTimeType)
                ) && 
                (
                    this.DeliveryStart == input.DeliveryStart ||
                    (this.DeliveryStart != null &&
                    this.DeliveryStart.Equals(input.DeliveryStart))
                ) && 
                (
                    this.DeliveryEnd == input.DeliveryEnd ||
                    (this.DeliveryEnd != null &&
                    this.DeliveryEnd.Equals(input.DeliveryEnd))
                ) && 
                (
                    this.PlannedDeliveryStart == input.PlannedDeliveryStart ||
                    (this.PlannedDeliveryStart != null &&
                    this.PlannedDeliveryStart.Equals(input.PlannedDeliveryStart))
                ) && 
                (
                    this.PlannedDeliveryEnd == input.PlannedDeliveryEnd ||
                    (this.PlannedDeliveryEnd != null &&
                    this.PlannedDeliveryEnd.Equals(input.PlannedDeliveryEnd))
                ) && 
                (
                    this.CalculatedDeliveryStart == input.CalculatedDeliveryStart ||
                    (this.CalculatedDeliveryStart != null &&
                    this.CalculatedDeliveryStart.Equals(input.CalculatedDeliveryStart))
                ) && 
                (
                    this.CalculatedDeliveryEnd == input.CalculatedDeliveryEnd ||
                    (this.CalculatedDeliveryEnd != null &&
                    this.CalculatedDeliveryEnd.Equals(input.CalculatedDeliveryEnd))
                ) && 
                (
                    this.ActualDeliveryStart == input.ActualDeliveryStart ||
                    (this.ActualDeliveryStart != null &&
                    this.ActualDeliveryStart.Equals(input.ActualDeliveryStart))
                ) && 
                (
                    this.ActualDeliveryEnd == input.ActualDeliveryEnd ||
                    (this.ActualDeliveryEnd != null &&
                    this.ActualDeliveryEnd.Equals(input.ActualDeliveryEnd))
                ) && 
                (
                    this.DeliveryTimeType == input.DeliveryTimeType ||
                    this.DeliveryTimeType.Equals(input.DeliveryTimeType)
                ) && 
                (
                    this.OrderDate == input.OrderDate ||
                    (this.OrderDate != null &&
                    this.OrderDate.Equals(input.OrderDate))
                ) && 
                (
                    this.ShipmentNumber == input.ShipmentNumber ||
                    (this.ShipmentNumber != null &&
                    this.ShipmentNumber.Equals(input.ShipmentNumber))
                ) && 
                (
                    this.ReferenceNumber == input.ReferenceNumber ||
                    (this.ReferenceNumber != null &&
                    this.ReferenceNumber.Equals(input.ReferenceNumber))
                ) && 
                (
                    this.LoadNumber == input.LoadNumber ||
                    (this.LoadNumber != null &&
                    this.LoadNumber.Equals(input.LoadNumber))
                ) && 
                (
                    this.DeliveryNumber == input.DeliveryNumber ||
                    (this.DeliveryNumber != null &&
                    this.DeliveryNumber.Equals(input.DeliveryNumber))
                ) && 
                (
                    this.IsTemplate == input.IsTemplate ||
                    this.IsTemplate.Equals(input.IsTemplate)
                ) && 
                (
                    this.TemplateName == input.TemplateName ||
                    (this.TemplateName != null &&
                    this.TemplateName.Equals(input.TemplateName))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.TransportOrder == input.TransportOrder ||
                    (this.TransportOrder != null &&
                    this.TransportOrder.Equals(input.TransportOrder))
                ) && 
                (
                    this.Items == input.Items ||
                    this.Items != null &&
                    input.Items != null &&
                    this.Items.SequenceEqual(input.Items)
                ) && 
                (
                    this.Documents == input.Documents ||
                    this.Documents != null &&
                    input.Documents != null &&
                    this.Documents.SequenceEqual(input.Documents)
                ) && 
                (
                    this.Tags == input.Tags ||
                    this.Tags != null &&
                    input.Tags != null &&
                    this.Tags.SequenceEqual(input.Tags)
                ) && 
                (
                    this.Notes == input.Notes ||
                    (this.Notes != null &&
                    this.Notes.Equals(input.Notes))
                ) && 
                (
                    this.IsDeleted == input.IsDeleted ||
                    this.IsDeleted.Equals(input.IsDeleted)
                ) && 
                (
                    this.LoadWorkflow == input.LoadWorkflow ||
                    (this.LoadWorkflow != null &&
                    this.LoadWorkflow.Equals(input.LoadWorkflow))
                ) && 
                (
                    this.DeliveryWorkflow == input.DeliveryWorkflow ||
                    (this.DeliveryWorkflow != null &&
                    this.DeliveryWorkflow.Equals(input.DeliveryWorkflow))
                ) && 
                (
                    this.Tours == input.Tours ||
                    this.Tours != null &&
                    input.Tours != null &&
                    this.Tours.SequenceEqual(input.Tours)
                ) && 
                (
                    this.ConstructionSite == input.ConstructionSite ||
                    (this.ConstructionSite != null &&
                    this.ConstructionSite.Equals(input.ConstructionSite))
                ) && 
                (
                    this.Addon == input.Addon ||
                    this.Addon != null &&
                    input.Addon != null &&
                    this.Addon.SequenceEqual(input.Addon)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.CreateDateTime != null)
                {
                    hashCode = (hashCode * 59) + this.CreateDateTime.GetHashCode();
                }
                if (this.UpdateDateTime != null)
                {
                    hashCode = (hashCode * 59) + this.UpdateDateTime.GetHashCode();
                }
                if (this.CreateUserId != null)
                {
                    hashCode = (hashCode * 59) + this.CreateUserId.GetHashCode();
                }
                if (this.UpdateUserId != null)
                {
                    hashCode = (hashCode * 59) + this.UpdateUserId.GetHashCode();
                }
                if (this.LoadAddress != null)
                {
                    hashCode = (hashCode * 59) + this.LoadAddress.GetHashCode();
                }
                if (this.DeliveryAddress != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryAddress.GetHashCode();
                }
                if (this.Carrier != null)
                {
                    hashCode = (hashCode * 59) + this.Carrier.GetHashCode();
                }
                if (this.FreightPayer != null)
                {
                    hashCode = (hashCode * 59) + this.FreightPayer.GetHashCode();
                }
                if (this.Customer != null)
                {
                    hashCode = (hashCode * 59) + this.Customer.GetHashCode();
                }
                if (this.RecipientAddress != null)
                {
                    hashCode = (hashCode * 59) + this.RecipientAddress.GetHashCode();
                }
                if (this.InvoiceRecipient != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceRecipient.GetHashCode();
                }
                if (this.SenderAddress != null)
                {
                    hashCode = (hashCode * 59) + this.SenderAddress.GetHashCode();
                }
                if (this.Supplier != null)
                {
                    hashCode = (hashCode * 59) + this.Supplier.GetHashCode();
                }
                if (this.LoadStart != null)
                {
                    hashCode = (hashCode * 59) + this.LoadStart.GetHashCode();
                }
                if (this.LoadEnd != null)
                {
                    hashCode = (hashCode * 59) + this.LoadEnd.GetHashCode();
                }
                if (this.PlannedLoadStart != null)
                {
                    hashCode = (hashCode * 59) + this.PlannedLoadStart.GetHashCode();
                }
                if (this.PlannedLoadEnd != null)
                {
                    hashCode = (hashCode * 59) + this.PlannedLoadEnd.GetHashCode();
                }
                if (this.CalculatedLoadStart != null)
                {
                    hashCode = (hashCode * 59) + this.CalculatedLoadStart.GetHashCode();
                }
                if (this.CalculatedLoadEnd != null)
                {
                    hashCode = (hashCode * 59) + this.CalculatedLoadEnd.GetHashCode();
                }
                if (this.ActualLoadStart != null)
                {
                    hashCode = (hashCode * 59) + this.ActualLoadStart.GetHashCode();
                }
                if (this.ActualLoadEnd != null)
                {
                    hashCode = (hashCode * 59) + this.ActualLoadEnd.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.LoadingTimeType.GetHashCode();
                if (this.DeliveryStart != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryStart.GetHashCode();
                }
                if (this.DeliveryEnd != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryEnd.GetHashCode();
                }
                if (this.PlannedDeliveryStart != null)
                {
                    hashCode = (hashCode * 59) + this.PlannedDeliveryStart.GetHashCode();
                }
                if (this.PlannedDeliveryEnd != null)
                {
                    hashCode = (hashCode * 59) + this.PlannedDeliveryEnd.GetHashCode();
                }
                if (this.CalculatedDeliveryStart != null)
                {
                    hashCode = (hashCode * 59) + this.CalculatedDeliveryStart.GetHashCode();
                }
                if (this.CalculatedDeliveryEnd != null)
                {
                    hashCode = (hashCode * 59) + this.CalculatedDeliveryEnd.GetHashCode();
                }
                if (this.ActualDeliveryStart != null)
                {
                    hashCode = (hashCode * 59) + this.ActualDeliveryStart.GetHashCode();
                }
                if (this.ActualDeliveryEnd != null)
                {
                    hashCode = (hashCode * 59) + this.ActualDeliveryEnd.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.DeliveryTimeType.GetHashCode();
                if (this.OrderDate != null)
                {
                    hashCode = (hashCode * 59) + this.OrderDate.GetHashCode();
                }
                if (this.ShipmentNumber != null)
                {
                    hashCode = (hashCode * 59) + this.ShipmentNumber.GetHashCode();
                }
                if (this.ReferenceNumber != null)
                {
                    hashCode = (hashCode * 59) + this.ReferenceNumber.GetHashCode();
                }
                if (this.LoadNumber != null)
                {
                    hashCode = (hashCode * 59) + this.LoadNumber.GetHashCode();
                }
                if (this.DeliveryNumber != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryNumber.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsTemplate.GetHashCode();
                if (this.TemplateName != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateName.GetHashCode();
                }
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                if (this.TransportOrder != null)
                {
                    hashCode = (hashCode * 59) + this.TransportOrder.GetHashCode();
                }
                if (this.Items != null)
                {
                    hashCode = (hashCode * 59) + this.Items.GetHashCode();
                }
                if (this.Documents != null)
                {
                    hashCode = (hashCode * 59) + this.Documents.GetHashCode();
                }
                if (this.Tags != null)
                {
                    hashCode = (hashCode * 59) + this.Tags.GetHashCode();
                }
                if (this.Notes != null)
                {
                    hashCode = (hashCode * 59) + this.Notes.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsDeleted.GetHashCode();
                if (this.LoadWorkflow != null)
                {
                    hashCode = (hashCode * 59) + this.LoadWorkflow.GetHashCode();
                }
                if (this.DeliveryWorkflow != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryWorkflow.GetHashCode();
                }
                if (this.Tours != null)
                {
                    hashCode = (hashCode * 59) + this.Tours.GetHashCode();
                }
                if (this.ConstructionSite != null)
                {
                    hashCode = (hashCode * 59) + this.ConstructionSite.GetHashCode();
                }
                if (this.Addon != null)
                {
                    hashCode = (hashCode * 59) + this.Addon.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
