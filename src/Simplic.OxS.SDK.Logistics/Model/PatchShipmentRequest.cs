/*
 * Simplic.OxS.Logistics
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Simplic.OxS.SDK.Logistics.Client.OpenAPIDateConverter;

namespace Simplic.OxS.SDK.Logistics.Model
{
    /// <summary>
    /// PatchShipmentRequest
    /// </summary>
    [DataContract(Name = "PatchShipmentRequest")]
    public partial class PatchShipmentRequest : IEquatable<PatchShipmentRequest>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets LoadingTimeType
        /// </summary>
        [DataMember(Name = "loadingTimeType", EmitDefaultValue = false)]
        public LoadingDateTimeType? LoadingTimeType { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryTimeType
        /// </summary>
        [DataMember(Name = "deliveryTimeType", EmitDefaultValue = false)]
        public LoadingDateTimeType? DeliveryTimeType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PatchShipmentRequest" /> class.
        /// </summary>
        /// <param name="loadAddressId">loadAddressId.</param>
        /// <param name="deliveryAddressId">deliveryAddressId.</param>
        /// <param name="recipientAddressId">recipientAddressId.</param>
        /// <param name="senderAddressId">senderAddressId.</param>
        /// <param name="carrierPersonalAccountId">carrierPersonalAccountId.</param>
        /// <param name="carrierAddressId">carrierAddressId.</param>
        /// <param name="freightPayerPersonalAccountId">freightPayerPersonalAccountId.</param>
        /// <param name="freightPayerAddressId">freightPayerAddressId.</param>
        /// <param name="customerPersonalAccountId">customerPersonalAccountId.</param>
        /// <param name="customerAddressId">customerAddressId.</param>
        /// <param name="invoiceRecipientPersonalAccountId">invoiceRecipientPersonalAccountId.</param>
        /// <param name="invoiceRecipientAddressId">invoiceRecipientAddressId.</param>
        /// <param name="supplierPersonalAccountId">supplierPersonalAccountId.</param>
        /// <param name="supplierAddressId">supplierAddressId.</param>
        /// <param name="loadStart">Gets or sets the load time slot start with date and time  &lt;br&gt;  This will define the start of the time range the driver could start the loading process.    This will usually be set by the user or an api based on the values he gets from customer..</param>
        /// <param name="loadEnd">Gets or sets the load time slot end with date and time.  &lt;br&gt;  This will define the end of the time range the driver could end the loading process.    This will usually be set by the user or an api based on the values he gets from the customer..</param>
        /// <param name="plannedLoadStart">Gets or sets the planned laod start with date and time.  &lt;br&gt;  This will define the planned start of the loading process.    This will usually be set by the user based on his dayplan for the resource..</param>
        /// <param name="plannedLoadEnd">Gets or sets the planned load end with date and time.  &lt;br&gt;  This will define the planned end of the loading process.    This will usually be set by the user based on his dayplan for the resource..</param>
        /// <param name="calculatedLoadStart">Gets or sets the calculated load start with date and time.  &lt;br&gt;  This will define the calculated / theoretical start of the loading process.    This will usually be set by an api based on data given by the telematics..</param>
        /// <param name="calculatedLoadEnd">Gets or sets the calculated load end with date and time.  &lt;br&gt;  This will define the calculated / theoretical end of the laoding process.    This will usually be set by an api based on data given by the telematics..</param>
        /// <param name="actualLoadStart">Gets or sets the actual laod start with date and time.  &lt;br&gt;  This will define the actual start of the loading process.    This will usually be set by an api based on the data given by the telematics..</param>
        /// <param name="actualLoadEnd">Gets or sets the actual load end with date and time.  &lt;br&gt;  This will define the actual end of the loading process.    This will usually be set by an api based on the data given by the telematics.</param>
        /// <param name="loadingTimeType">loadingTimeType.</param>
        /// <param name="deliveryStart">Gets or sets the delivery time slot start with date and time.  &lt;br&gt;  This will define the start of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer..</param>
        /// <param name="deliveryEnd">Gets or sets the delivery time slot end with date and time.  &lt;br&gt;  This will define the end of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer..</param>
        /// <param name="plannedDeliveryStart">Gets or sets the planned delivery start with date and time.  &lt;br&gt;  This defines the planned start of the delivery / unloading process.    This will usually be set by the user based on his dayplan of the resource..</param>
        /// <param name="plannedDeliveryEnd">Gets or sets the planned delivery end with date and time.  &lt;br&gt;  This defines the planned end off the delivery / unlaoding process.    This will usually be set by the user based on his dayplan of the resource..</param>
        /// <param name="calculatedDeliveryStart">Gets or sets the calculated delivery start with date and time.  &lt;br&gt;  This defines the calculated start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data..</param>
        /// <param name="calculatedDeliveryEnd">Gets or sets the calculated delivery end with date and time.  &lt;br&gt;  This defines the calculated end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data..</param>
        /// <param name="actualDeliveryStart">Gets or sets the actual delivery start with date and time.  &lt;br&gt;  This defines the actual start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data..</param>
        /// <param name="actualDeliveryEnd">Gets or sets the actual delivery end with date and time.  &lt;br&gt;  This defines the actual end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data..</param>
        /// <param name="deliveryTimeType">deliveryTimeType.</param>
        /// <param name="orderDate">Gets or sets the order date.  &lt;br&gt;  This defines the date the shipment is ordered at.  This is a relevant information for the billing process and needs to be set.  .</param>
        /// <param name="shipmentNumber">Gets or sets the shipment number.  &lt;br&gt;  This defines a number to identify the shipment as the user.  .</param>
        /// <param name="referenceNumber">Gets or sets the reference number  &lt;br&gt;  This defines a number that references the same shipment in another programm or context.  .</param>
        /// <param name="loadNumber">Gets or sets the load number.  &lt;br&gt;  This defines a number that the driver might need to load this shipment  .</param>
        /// <param name="deliveryNumber">Gets or sets the delivery number.  &lt;br&gt;  This defines a number that the driber might need to deliver / unload this shipment.  .</param>
        /// <param name="isTemplate">Gets or sets werther the shipment is a template.  &lt;br&gt;  Template shipments are used to create shipments with certain values preset.  .</param>
        /// <param name="templateName">Gets or sets the template name.  &lt;br&gt;  A name for the template to give the user the option to find it easier  .</param>
        /// <param name="statusId">Gets or sets the shipment status.  &lt;br&gt;  The status might forbid some actions for the user. Or might enable other actions.  .</param>
        /// <param name="transportOrder">transportOrder.</param>
        /// <param name="documents">Gets or sets the documments.  &lt;br&gt;  These documents contain more information that just the shipment.   E.g. the shipment item id or weight note id.    Furthermore documents might be marked for invoices and ordered for them..</param>
        /// <param name="tags">Gets or sets the tags.  &lt;br&gt;  Tags are short texts to add information to a shipment without the need to add new properties.    These are e.g. used in the pricing module to add some additional conditions..</param>
        /// <param name="notes">Gets or sets the notes.  &lt;br&gt;  This gives the user the possibillity to add some more sentences about this shipment.  .</param>
        /// <param name="isDeleted">Gets or sets whether the shipment is deleted..</param>
        /// <param name="loadWorkflow">loadWorkflow.</param>
        /// <param name="deliveryWorkflow">deliveryWorkflow.</param>
        /// <param name="constructionSiteId">Gets or sets a construction site id.  &lt;br&gt;  The id will be resolved by the construction site api.  .</param>
        /// <param name="addon">Gets or sets a dictionary of addon properties.  &lt;br&gt;  Can be used to set customer exclusive properties for a shipment.  .</param>
        /// <param name="items">Gets or sets shipment items.  &lt;br&gt;  Represents a list of items of a shipment which will contain further information about the freight.  .</param>
        public PatchShipmentRequest(Guid? loadAddressId = default(Guid?), Guid? deliveryAddressId = default(Guid?), Guid? recipientAddressId = default(Guid?), Guid? senderAddressId = default(Guid?), Guid? carrierPersonalAccountId = default(Guid?), Guid? carrierAddressId = default(Guid?), Guid? freightPayerPersonalAccountId = default(Guid?), Guid? freightPayerAddressId = default(Guid?), Guid? customerPersonalAccountId = default(Guid?), Guid? customerAddressId = default(Guid?), Guid? invoiceRecipientPersonalAccountId = default(Guid?), Guid? invoiceRecipientAddressId = default(Guid?), Guid? supplierPersonalAccountId = default(Guid?), Guid? supplierAddressId = default(Guid?), DateTime? loadStart = default(DateTime?), DateTime? loadEnd = default(DateTime?), DateTime? plannedLoadStart = default(DateTime?), DateTime? plannedLoadEnd = default(DateTime?), DateTime? calculatedLoadStart = default(DateTime?), DateTime? calculatedLoadEnd = default(DateTime?), DateTime? actualLoadStart = default(DateTime?), DateTime? actualLoadEnd = default(DateTime?), LoadingDateTimeType? loadingTimeType = default(LoadingDateTimeType?), DateTime? deliveryStart = default(DateTime?), DateTime? deliveryEnd = default(DateTime?), DateTime? plannedDeliveryStart = default(DateTime?), DateTime? plannedDeliveryEnd = default(DateTime?), DateTime? calculatedDeliveryStart = default(DateTime?), DateTime? calculatedDeliveryEnd = default(DateTime?), DateTime? actualDeliveryStart = default(DateTime?), DateTime? actualDeliveryEnd = default(DateTime?), LoadingDateTimeType? deliveryTimeType = default(LoadingDateTimeType?), DateTime? orderDate = default(DateTime?), string shipmentNumber = default(string), string referenceNumber = default(string), string loadNumber = default(string), string deliveryNumber = default(string), bool isTemplate = default(bool), string templateName = default(string), Guid? statusId = default(Guid?), ShipmentTransportOrderModel transportOrder = default(ShipmentTransportOrderModel), List<ShipmentDocumentModel> documents = default(List<ShipmentDocumentModel>), List<ShipmentTagModel> tags = default(List<ShipmentTagModel>), string notes = default(string), bool isDeleted = default(bool), ShipmentTelematicWorkflowModel loadWorkflow = default(ShipmentTelematicWorkflowModel), ShipmentTelematicWorkflowModel deliveryWorkflow = default(ShipmentTelematicWorkflowModel), Guid? constructionSiteId = default(Guid?), Dictionary<string, Object> addon = default(Dictionary<string, Object>), List<PatchShipmentItemRequest> items = default(List<PatchShipmentItemRequest>))
        {
            this.LoadAddressId = loadAddressId;
            this.DeliveryAddressId = deliveryAddressId;
            this.RecipientAddressId = recipientAddressId;
            this.SenderAddressId = senderAddressId;
            this.CarrierPersonalAccountId = carrierPersonalAccountId;
            this.CarrierAddressId = carrierAddressId;
            this.FreightPayerPersonalAccountId = freightPayerPersonalAccountId;
            this.FreightPayerAddressId = freightPayerAddressId;
            this.CustomerPersonalAccountId = customerPersonalAccountId;
            this.CustomerAddressId = customerAddressId;
            this.InvoiceRecipientPersonalAccountId = invoiceRecipientPersonalAccountId;
            this.InvoiceRecipientAddressId = invoiceRecipientAddressId;
            this.SupplierPersonalAccountId = supplierPersonalAccountId;
            this.SupplierAddressId = supplierAddressId;
            this.LoadStart = loadStart;
            this.LoadEnd = loadEnd;
            this.PlannedLoadStart = plannedLoadStart;
            this.PlannedLoadEnd = plannedLoadEnd;
            this.CalculatedLoadStart = calculatedLoadStart;
            this.CalculatedLoadEnd = calculatedLoadEnd;
            this.ActualLoadStart = actualLoadStart;
            this.ActualLoadEnd = actualLoadEnd;
            this.LoadingTimeType = loadingTimeType;
            this.DeliveryStart = deliveryStart;
            this.DeliveryEnd = deliveryEnd;
            this.PlannedDeliveryStart = plannedDeliveryStart;
            this.PlannedDeliveryEnd = plannedDeliveryEnd;
            this.CalculatedDeliveryStart = calculatedDeliveryStart;
            this.CalculatedDeliveryEnd = calculatedDeliveryEnd;
            this.ActualDeliveryStart = actualDeliveryStart;
            this.ActualDeliveryEnd = actualDeliveryEnd;
            this.DeliveryTimeType = deliveryTimeType;
            this.OrderDate = orderDate;
            this.ShipmentNumber = shipmentNumber;
            this.ReferenceNumber = referenceNumber;
            this.LoadNumber = loadNumber;
            this.DeliveryNumber = deliveryNumber;
            this.IsTemplate = isTemplate;
            this.TemplateName = templateName;
            this.StatusId = statusId;
            this.TransportOrder = transportOrder;
            this.Documents = documents;
            this.Tags = tags;
            this.Notes = notes;
            this.IsDeleted = isDeleted;
            this.LoadWorkflow = loadWorkflow;
            this.DeliveryWorkflow = deliveryWorkflow;
            this.ConstructionSiteId = constructionSiteId;
            this.Addon = addon;
            this.Items = items;
        }

        /// <summary>
        /// Gets or Sets LoadAddressId
        /// </summary>
        [DataMember(Name = "loadAddressId", EmitDefaultValue = true)]
        public Guid? LoadAddressId { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryAddressId
        /// </summary>
        [DataMember(Name = "deliveryAddressId", EmitDefaultValue = true)]
        public Guid? DeliveryAddressId { get; set; }

        /// <summary>
        /// Gets or Sets RecipientAddressId
        /// </summary>
        [DataMember(Name = "recipientAddressId", EmitDefaultValue = true)]
        public Guid? RecipientAddressId { get; set; }

        /// <summary>
        /// Gets or Sets SenderAddressId
        /// </summary>
        [DataMember(Name = "senderAddressId", EmitDefaultValue = true)]
        public Guid? SenderAddressId { get; set; }

        /// <summary>
        /// Gets or Sets CarrierPersonalAccountId
        /// </summary>
        [DataMember(Name = "carrierPersonalAccountId", EmitDefaultValue = true)]
        public Guid? CarrierPersonalAccountId { get; set; }

        /// <summary>
        /// Gets or Sets CarrierAddressId
        /// </summary>
        [DataMember(Name = "carrierAddressId", EmitDefaultValue = true)]
        public Guid? CarrierAddressId { get; set; }

        /// <summary>
        /// Gets or Sets FreightPayerPersonalAccountId
        /// </summary>
        [DataMember(Name = "freightPayerPersonalAccountId", EmitDefaultValue = true)]
        public Guid? FreightPayerPersonalAccountId { get; set; }

        /// <summary>
        /// Gets or Sets FreightPayerAddressId
        /// </summary>
        [DataMember(Name = "freightPayerAddressId", EmitDefaultValue = true)]
        public Guid? FreightPayerAddressId { get; set; }

        /// <summary>
        /// Gets or Sets CustomerPersonalAccountId
        /// </summary>
        [DataMember(Name = "customerPersonalAccountId", EmitDefaultValue = true)]
        public Guid? CustomerPersonalAccountId { get; set; }

        /// <summary>
        /// Gets or Sets CustomerAddressId
        /// </summary>
        [DataMember(Name = "customerAddressId", EmitDefaultValue = true)]
        public Guid? CustomerAddressId { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceRecipientPersonalAccountId
        /// </summary>
        [DataMember(Name = "invoiceRecipientPersonalAccountId", EmitDefaultValue = true)]
        public Guid? InvoiceRecipientPersonalAccountId { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceRecipientAddressId
        /// </summary>
        [DataMember(Name = "invoiceRecipientAddressId", EmitDefaultValue = true)]
        public Guid? InvoiceRecipientAddressId { get; set; }

        /// <summary>
        /// Gets or Sets SupplierPersonalAccountId
        /// </summary>
        [DataMember(Name = "supplierPersonalAccountId", EmitDefaultValue = true)]
        public Guid? SupplierPersonalAccountId { get; set; }

        /// <summary>
        /// Gets or Sets SupplierAddressId
        /// </summary>
        [DataMember(Name = "supplierAddressId", EmitDefaultValue = true)]
        public Guid? SupplierAddressId { get; set; }

        /// <summary>
        /// Gets or sets the load time slot start with date and time  &lt;br&gt;  This will define the start of the time range the driver could start the loading process.    This will usually be set by the user or an api based on the values he gets from customer.
        /// </summary>
        /// <value>Gets or sets the load time slot start with date and time  &lt;br&gt;  This will define the start of the time range the driver could start the loading process.    This will usually be set by the user or an api based on the values he gets from customer.</value>
        [DataMember(Name = "loadStart", EmitDefaultValue = true)]
        public DateTime? LoadStart { get; set; }

        /// <summary>
        /// Gets or sets the load time slot end with date and time.  &lt;br&gt;  This will define the end of the time range the driver could end the loading process.    This will usually be set by the user or an api based on the values he gets from the customer.
        /// </summary>
        /// <value>Gets or sets the load time slot end with date and time.  &lt;br&gt;  This will define the end of the time range the driver could end the loading process.    This will usually be set by the user or an api based on the values he gets from the customer.</value>
        [DataMember(Name = "loadEnd", EmitDefaultValue = true)]
        public DateTime? LoadEnd { get; set; }

        /// <summary>
        /// Gets or sets the planned laod start with date and time.  &lt;br&gt;  This will define the planned start of the loading process.    This will usually be set by the user based on his dayplan for the resource.
        /// </summary>
        /// <value>Gets or sets the planned laod start with date and time.  &lt;br&gt;  This will define the planned start of the loading process.    This will usually be set by the user based on his dayplan for the resource.</value>
        [DataMember(Name = "plannedLoadStart", EmitDefaultValue = true)]
        public DateTime? PlannedLoadStart { get; set; }

        /// <summary>
        /// Gets or sets the planned load end with date and time.  &lt;br&gt;  This will define the planned end of the loading process.    This will usually be set by the user based on his dayplan for the resource.
        /// </summary>
        /// <value>Gets or sets the planned load end with date and time.  &lt;br&gt;  This will define the planned end of the loading process.    This will usually be set by the user based on his dayplan for the resource.</value>
        [DataMember(Name = "plannedLoadEnd", EmitDefaultValue = true)]
        public DateTime? PlannedLoadEnd { get; set; }

        /// <summary>
        /// Gets or sets the calculated load start with date and time.  &lt;br&gt;  This will define the calculated / theoretical start of the loading process.    This will usually be set by an api based on data given by the telematics.
        /// </summary>
        /// <value>Gets or sets the calculated load start with date and time.  &lt;br&gt;  This will define the calculated / theoretical start of the loading process.    This will usually be set by an api based on data given by the telematics.</value>
        [DataMember(Name = "calculatedLoadStart", EmitDefaultValue = true)]
        public DateTime? CalculatedLoadStart { get; set; }

        /// <summary>
        /// Gets or sets the calculated load end with date and time.  &lt;br&gt;  This will define the calculated / theoretical end of the laoding process.    This will usually be set by an api based on data given by the telematics.
        /// </summary>
        /// <value>Gets or sets the calculated load end with date and time.  &lt;br&gt;  This will define the calculated / theoretical end of the laoding process.    This will usually be set by an api based on data given by the telematics.</value>
        [DataMember(Name = "calculatedLoadEnd", EmitDefaultValue = true)]
        public DateTime? CalculatedLoadEnd { get; set; }

        /// <summary>
        /// Gets or sets the actual laod start with date and time.  &lt;br&gt;  This will define the actual start of the loading process.    This will usually be set by an api based on the data given by the telematics.
        /// </summary>
        /// <value>Gets or sets the actual laod start with date and time.  &lt;br&gt;  This will define the actual start of the loading process.    This will usually be set by an api based on the data given by the telematics.</value>
        [DataMember(Name = "actualLoadStart", EmitDefaultValue = true)]
        public DateTime? ActualLoadStart { get; set; }

        /// <summary>
        /// Gets or sets the actual load end with date and time.  &lt;br&gt;  This will define the actual end of the loading process.    This will usually be set by an api based on the data given by the telematics
        /// </summary>
        /// <value>Gets or sets the actual load end with date and time.  &lt;br&gt;  This will define the actual end of the loading process.    This will usually be set by an api based on the data given by the telematics</value>
        [DataMember(Name = "actualLoadEnd", EmitDefaultValue = true)]
        public DateTime? ActualLoadEnd { get; set; }

        /// <summary>
        /// Gets or sets the delivery time slot start with date and time.  &lt;br&gt;  This will define the start of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer.
        /// </summary>
        /// <value>Gets or sets the delivery time slot start with date and time.  &lt;br&gt;  This will define the start of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer.</value>
        [DataMember(Name = "deliveryStart", EmitDefaultValue = true)]
        public DateTime? DeliveryStart { get; set; }

        /// <summary>
        /// Gets or sets the delivery time slot end with date and time.  &lt;br&gt;  This will define the end of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer.
        /// </summary>
        /// <value>Gets or sets the delivery time slot end with date and time.  &lt;br&gt;  This will define the end of the time range when the driver could deliver the shipment.    This will usually be set by the user or an api based on the values he gets from the customer.</value>
        [DataMember(Name = "deliveryEnd", EmitDefaultValue = true)]
        public DateTime? DeliveryEnd { get; set; }

        /// <summary>
        /// Gets or sets the planned delivery start with date and time.  &lt;br&gt;  This defines the planned start of the delivery / unloading process.    This will usually be set by the user based on his dayplan of the resource.
        /// </summary>
        /// <value>Gets or sets the planned delivery start with date and time.  &lt;br&gt;  This defines the planned start of the delivery / unloading process.    This will usually be set by the user based on his dayplan of the resource.</value>
        [DataMember(Name = "plannedDeliveryStart", EmitDefaultValue = true)]
        public DateTime? PlannedDeliveryStart { get; set; }

        /// <summary>
        /// Gets or sets the planned delivery end with date and time.  &lt;br&gt;  This defines the planned end off the delivery / unlaoding process.    This will usually be set by the user based on his dayplan of the resource.
        /// </summary>
        /// <value>Gets or sets the planned delivery end with date and time.  &lt;br&gt;  This defines the planned end off the delivery / unlaoding process.    This will usually be set by the user based on his dayplan of the resource.</value>
        [DataMember(Name = "plannedDeliveryEnd", EmitDefaultValue = true)]
        public DateTime? PlannedDeliveryEnd { get; set; }

        /// <summary>
        /// Gets or sets the calculated delivery start with date and time.  &lt;br&gt;  This defines the calculated start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.
        /// </summary>
        /// <value>Gets or sets the calculated delivery start with date and time.  &lt;br&gt;  This defines the calculated start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.</value>
        [DataMember(Name = "calculatedDeliveryStart", EmitDefaultValue = true)]
        public DateTime? CalculatedDeliveryStart { get; set; }

        /// <summary>
        /// Gets or sets the calculated delivery end with date and time.  &lt;br&gt;  This defines the calculated end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.
        /// </summary>
        /// <value>Gets or sets the calculated delivery end with date and time.  &lt;br&gt;  This defines the calculated end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.</value>
        [DataMember(Name = "calculatedDeliveryEnd", EmitDefaultValue = true)]
        public DateTime? CalculatedDeliveryEnd { get; set; }

        /// <summary>
        /// Gets or sets the actual delivery start with date and time.  &lt;br&gt;  This defines the actual start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.
        /// </summary>
        /// <value>Gets or sets the actual delivery start with date and time.  &lt;br&gt;  This defines the actual start of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.</value>
        [DataMember(Name = "actualDeliveryStart", EmitDefaultValue = true)]
        public DateTime? ActualDeliveryStart { get; set; }

        /// <summary>
        /// Gets or sets the actual delivery end with date and time.  &lt;br&gt;  This defines the actual end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.
        /// </summary>
        /// <value>Gets or sets the actual delivery end with date and time.  &lt;br&gt;  This defines the actual end of the delivery / unlaoding process.    This will usually be set by an api based on telematics data.</value>
        [DataMember(Name = "actualDeliveryEnd", EmitDefaultValue = true)]
        public DateTime? ActualDeliveryEnd { get; set; }

        /// <summary>
        /// Gets or sets the order date.  &lt;br&gt;  This defines the date the shipment is ordered at.  This is a relevant information for the billing process and needs to be set.  
        /// </summary>
        /// <value>Gets or sets the order date.  &lt;br&gt;  This defines the date the shipment is ordered at.  This is a relevant information for the billing process and needs to be set.  </value>
        [DataMember(Name = "orderDate", EmitDefaultValue = true)]
        public DateTime? OrderDate { get; set; }

        /// <summary>
        /// Gets or sets the shipment number.  &lt;br&gt;  This defines a number to identify the shipment as the user.  
        /// </summary>
        /// <value>Gets or sets the shipment number.  &lt;br&gt;  This defines a number to identify the shipment as the user.  </value>
        [DataMember(Name = "shipmentNumber", EmitDefaultValue = true)]
        public string ShipmentNumber { get; set; }

        /// <summary>
        /// Gets or sets the reference number  &lt;br&gt;  This defines a number that references the same shipment in another programm or context.  
        /// </summary>
        /// <value>Gets or sets the reference number  &lt;br&gt;  This defines a number that references the same shipment in another programm or context.  </value>
        [DataMember(Name = "referenceNumber", EmitDefaultValue = true)]
        public string ReferenceNumber { get; set; }

        /// <summary>
        /// Gets or sets the load number.  &lt;br&gt;  This defines a number that the driver might need to load this shipment  
        /// </summary>
        /// <value>Gets or sets the load number.  &lt;br&gt;  This defines a number that the driver might need to load this shipment  </value>
        [DataMember(Name = "loadNumber", EmitDefaultValue = true)]
        public string LoadNumber { get; set; }

        /// <summary>
        /// Gets or sets the delivery number.  &lt;br&gt;  This defines a number that the driber might need to deliver / unload this shipment.  
        /// </summary>
        /// <value>Gets or sets the delivery number.  &lt;br&gt;  This defines a number that the driber might need to deliver / unload this shipment.  </value>
        [DataMember(Name = "deliveryNumber", EmitDefaultValue = true)]
        public string DeliveryNumber { get; set; }

        /// <summary>
        /// Gets or sets werther the shipment is a template.  &lt;br&gt;  Template shipments are used to create shipments with certain values preset.  
        /// </summary>
        /// <value>Gets or sets werther the shipment is a template.  &lt;br&gt;  Template shipments are used to create shipments with certain values preset.  </value>
        [DataMember(Name = "isTemplate", EmitDefaultValue = true)]
        public bool IsTemplate { get; set; }

        /// <summary>
        /// Gets or sets the template name.  &lt;br&gt;  A name for the template to give the user the option to find it easier  
        /// </summary>
        /// <value>Gets or sets the template name.  &lt;br&gt;  A name for the template to give the user the option to find it easier  </value>
        [DataMember(Name = "templateName", EmitDefaultValue = true)]
        public string TemplateName { get; set; }

        /// <summary>
        /// Gets or sets the shipment status.  &lt;br&gt;  The status might forbid some actions for the user. Or might enable other actions.  
        /// </summary>
        /// <value>Gets or sets the shipment status.  &lt;br&gt;  The status might forbid some actions for the user. Or might enable other actions.  </value>
        [DataMember(Name = "statusId", EmitDefaultValue = true)]
        public Guid? StatusId { get; set; }

        /// <summary>
        /// Gets or Sets TransportOrder
        /// </summary>
        [DataMember(Name = "transportOrder", EmitDefaultValue = false)]
        public ShipmentTransportOrderModel TransportOrder { get; set; }

        /// <summary>
        /// Gets or sets the documments.  &lt;br&gt;  These documents contain more information that just the shipment.   E.g. the shipment item id or weight note id.    Furthermore documents might be marked for invoices and ordered for them.
        /// </summary>
        /// <value>Gets or sets the documments.  &lt;br&gt;  These documents contain more information that just the shipment.   E.g. the shipment item id or weight note id.    Furthermore documents might be marked for invoices and ordered for them.</value>
        [DataMember(Name = "documents", EmitDefaultValue = true)]
        public List<ShipmentDocumentModel> Documents { get; set; }

        /// <summary>
        /// Gets or sets the tags.  &lt;br&gt;  Tags are short texts to add information to a shipment without the need to add new properties.    These are e.g. used in the pricing module to add some additional conditions.
        /// </summary>
        /// <value>Gets or sets the tags.  &lt;br&gt;  Tags are short texts to add information to a shipment without the need to add new properties.    These are e.g. used in the pricing module to add some additional conditions.</value>
        [DataMember(Name = "tags", EmitDefaultValue = true)]
        public List<ShipmentTagModel> Tags { get; set; }

        /// <summary>
        /// Gets or sets the notes.  &lt;br&gt;  This gives the user the possibillity to add some more sentences about this shipment.  
        /// </summary>
        /// <value>Gets or sets the notes.  &lt;br&gt;  This gives the user the possibillity to add some more sentences about this shipment.  </value>
        [DataMember(Name = "notes", EmitDefaultValue = true)]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or sets whether the shipment is deleted.
        /// </summary>
        /// <value>Gets or sets whether the shipment is deleted.</value>
        [DataMember(Name = "isDeleted", EmitDefaultValue = true)]
        public bool IsDeleted { get; set; }

        /// <summary>
        /// Gets or Sets LoadWorkflow
        /// </summary>
        [DataMember(Name = "loadWorkflow", EmitDefaultValue = false)]
        public ShipmentTelematicWorkflowModel LoadWorkflow { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryWorkflow
        /// </summary>
        [DataMember(Name = "deliveryWorkflow", EmitDefaultValue = false)]
        public ShipmentTelematicWorkflowModel DeliveryWorkflow { get; set; }

        /// <summary>
        /// Gets or sets a construction site id.  &lt;br&gt;  The id will be resolved by the construction site api.  
        /// </summary>
        /// <value>Gets or sets a construction site id.  &lt;br&gt;  The id will be resolved by the construction site api.  </value>
        [DataMember(Name = "constructionSiteId", EmitDefaultValue = true)]
        public Guid? ConstructionSiteId { get; set; }

        /// <summary>
        /// Gets or sets a dictionary of addon properties.  &lt;br&gt;  Can be used to set customer exclusive properties for a shipment.  
        /// </summary>
        /// <value>Gets or sets a dictionary of addon properties.  &lt;br&gt;  Can be used to set customer exclusive properties for a shipment.  </value>
        [DataMember(Name = "addon", EmitDefaultValue = true)]
        public Dictionary<string, Object> Addon { get; set; }

        /// <summary>
        /// Gets or sets shipment items.  &lt;br&gt;  Represents a list of items of a shipment which will contain further information about the freight.  
        /// </summary>
        /// <value>Gets or sets shipment items.  &lt;br&gt;  Represents a list of items of a shipment which will contain further information about the freight.  </value>
        [DataMember(Name = "items", EmitDefaultValue = true)]
        public List<PatchShipmentItemRequest> Items { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PatchShipmentRequest {\n");
            sb.Append("  LoadAddressId: ").Append(LoadAddressId).Append("\n");
            sb.Append("  DeliveryAddressId: ").Append(DeliveryAddressId).Append("\n");
            sb.Append("  RecipientAddressId: ").Append(RecipientAddressId).Append("\n");
            sb.Append("  SenderAddressId: ").Append(SenderAddressId).Append("\n");
            sb.Append("  CarrierPersonalAccountId: ").Append(CarrierPersonalAccountId).Append("\n");
            sb.Append("  CarrierAddressId: ").Append(CarrierAddressId).Append("\n");
            sb.Append("  FreightPayerPersonalAccountId: ").Append(FreightPayerPersonalAccountId).Append("\n");
            sb.Append("  FreightPayerAddressId: ").Append(FreightPayerAddressId).Append("\n");
            sb.Append("  CustomerPersonalAccountId: ").Append(CustomerPersonalAccountId).Append("\n");
            sb.Append("  CustomerAddressId: ").Append(CustomerAddressId).Append("\n");
            sb.Append("  InvoiceRecipientPersonalAccountId: ").Append(InvoiceRecipientPersonalAccountId).Append("\n");
            sb.Append("  InvoiceRecipientAddressId: ").Append(InvoiceRecipientAddressId).Append("\n");
            sb.Append("  SupplierPersonalAccountId: ").Append(SupplierPersonalAccountId).Append("\n");
            sb.Append("  SupplierAddressId: ").Append(SupplierAddressId).Append("\n");
            sb.Append("  LoadStart: ").Append(LoadStart).Append("\n");
            sb.Append("  LoadEnd: ").Append(LoadEnd).Append("\n");
            sb.Append("  PlannedLoadStart: ").Append(PlannedLoadStart).Append("\n");
            sb.Append("  PlannedLoadEnd: ").Append(PlannedLoadEnd).Append("\n");
            sb.Append("  CalculatedLoadStart: ").Append(CalculatedLoadStart).Append("\n");
            sb.Append("  CalculatedLoadEnd: ").Append(CalculatedLoadEnd).Append("\n");
            sb.Append("  ActualLoadStart: ").Append(ActualLoadStart).Append("\n");
            sb.Append("  ActualLoadEnd: ").Append(ActualLoadEnd).Append("\n");
            sb.Append("  LoadingTimeType: ").Append(LoadingTimeType).Append("\n");
            sb.Append("  DeliveryStart: ").Append(DeliveryStart).Append("\n");
            sb.Append("  DeliveryEnd: ").Append(DeliveryEnd).Append("\n");
            sb.Append("  PlannedDeliveryStart: ").Append(PlannedDeliveryStart).Append("\n");
            sb.Append("  PlannedDeliveryEnd: ").Append(PlannedDeliveryEnd).Append("\n");
            sb.Append("  CalculatedDeliveryStart: ").Append(CalculatedDeliveryStart).Append("\n");
            sb.Append("  CalculatedDeliveryEnd: ").Append(CalculatedDeliveryEnd).Append("\n");
            sb.Append("  ActualDeliveryStart: ").Append(ActualDeliveryStart).Append("\n");
            sb.Append("  ActualDeliveryEnd: ").Append(ActualDeliveryEnd).Append("\n");
            sb.Append("  DeliveryTimeType: ").Append(DeliveryTimeType).Append("\n");
            sb.Append("  OrderDate: ").Append(OrderDate).Append("\n");
            sb.Append("  ShipmentNumber: ").Append(ShipmentNumber).Append("\n");
            sb.Append("  ReferenceNumber: ").Append(ReferenceNumber).Append("\n");
            sb.Append("  LoadNumber: ").Append(LoadNumber).Append("\n");
            sb.Append("  DeliveryNumber: ").Append(DeliveryNumber).Append("\n");
            sb.Append("  IsTemplate: ").Append(IsTemplate).Append("\n");
            sb.Append("  TemplateName: ").Append(TemplateName).Append("\n");
            sb.Append("  StatusId: ").Append(StatusId).Append("\n");
            sb.Append("  TransportOrder: ").Append(TransportOrder).Append("\n");
            sb.Append("  Documents: ").Append(Documents).Append("\n");
            sb.Append("  Tags: ").Append(Tags).Append("\n");
            sb.Append("  Notes: ").Append(Notes).Append("\n");
            sb.Append("  IsDeleted: ").Append(IsDeleted).Append("\n");
            sb.Append("  LoadWorkflow: ").Append(LoadWorkflow).Append("\n");
            sb.Append("  DeliveryWorkflow: ").Append(DeliveryWorkflow).Append("\n");
            sb.Append("  ConstructionSiteId: ").Append(ConstructionSiteId).Append("\n");
            sb.Append("  Addon: ").Append(Addon).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PatchShipmentRequest);
        }

        /// <summary>
        /// Returns true if PatchShipmentRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of PatchShipmentRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PatchShipmentRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.LoadAddressId == input.LoadAddressId ||
                    (this.LoadAddressId != null &&
                    this.LoadAddressId.Equals(input.LoadAddressId))
                ) && 
                (
                    this.DeliveryAddressId == input.DeliveryAddressId ||
                    (this.DeliveryAddressId != null &&
                    this.DeliveryAddressId.Equals(input.DeliveryAddressId))
                ) && 
                (
                    this.RecipientAddressId == input.RecipientAddressId ||
                    (this.RecipientAddressId != null &&
                    this.RecipientAddressId.Equals(input.RecipientAddressId))
                ) && 
                (
                    this.SenderAddressId == input.SenderAddressId ||
                    (this.SenderAddressId != null &&
                    this.SenderAddressId.Equals(input.SenderAddressId))
                ) && 
                (
                    this.CarrierPersonalAccountId == input.CarrierPersonalAccountId ||
                    (this.CarrierPersonalAccountId != null &&
                    this.CarrierPersonalAccountId.Equals(input.CarrierPersonalAccountId))
                ) && 
                (
                    this.CarrierAddressId == input.CarrierAddressId ||
                    (this.CarrierAddressId != null &&
                    this.CarrierAddressId.Equals(input.CarrierAddressId))
                ) && 
                (
                    this.FreightPayerPersonalAccountId == input.FreightPayerPersonalAccountId ||
                    (this.FreightPayerPersonalAccountId != null &&
                    this.FreightPayerPersonalAccountId.Equals(input.FreightPayerPersonalAccountId))
                ) && 
                (
                    this.FreightPayerAddressId == input.FreightPayerAddressId ||
                    (this.FreightPayerAddressId != null &&
                    this.FreightPayerAddressId.Equals(input.FreightPayerAddressId))
                ) && 
                (
                    this.CustomerPersonalAccountId == input.CustomerPersonalAccountId ||
                    (this.CustomerPersonalAccountId != null &&
                    this.CustomerPersonalAccountId.Equals(input.CustomerPersonalAccountId))
                ) && 
                (
                    this.CustomerAddressId == input.CustomerAddressId ||
                    (this.CustomerAddressId != null &&
                    this.CustomerAddressId.Equals(input.CustomerAddressId))
                ) && 
                (
                    this.InvoiceRecipientPersonalAccountId == input.InvoiceRecipientPersonalAccountId ||
                    (this.InvoiceRecipientPersonalAccountId != null &&
                    this.InvoiceRecipientPersonalAccountId.Equals(input.InvoiceRecipientPersonalAccountId))
                ) && 
                (
                    this.InvoiceRecipientAddressId == input.InvoiceRecipientAddressId ||
                    (this.InvoiceRecipientAddressId != null &&
                    this.InvoiceRecipientAddressId.Equals(input.InvoiceRecipientAddressId))
                ) && 
                (
                    this.SupplierPersonalAccountId == input.SupplierPersonalAccountId ||
                    (this.SupplierPersonalAccountId != null &&
                    this.SupplierPersonalAccountId.Equals(input.SupplierPersonalAccountId))
                ) && 
                (
                    this.SupplierAddressId == input.SupplierAddressId ||
                    (this.SupplierAddressId != null &&
                    this.SupplierAddressId.Equals(input.SupplierAddressId))
                ) && 
                (
                    this.LoadStart == input.LoadStart ||
                    (this.LoadStart != null &&
                    this.LoadStart.Equals(input.LoadStart))
                ) && 
                (
                    this.LoadEnd == input.LoadEnd ||
                    (this.LoadEnd != null &&
                    this.LoadEnd.Equals(input.LoadEnd))
                ) && 
                (
                    this.PlannedLoadStart == input.PlannedLoadStart ||
                    (this.PlannedLoadStart != null &&
                    this.PlannedLoadStart.Equals(input.PlannedLoadStart))
                ) && 
                (
                    this.PlannedLoadEnd == input.PlannedLoadEnd ||
                    (this.PlannedLoadEnd != null &&
                    this.PlannedLoadEnd.Equals(input.PlannedLoadEnd))
                ) && 
                (
                    this.CalculatedLoadStart == input.CalculatedLoadStart ||
                    (this.CalculatedLoadStart != null &&
                    this.CalculatedLoadStart.Equals(input.CalculatedLoadStart))
                ) && 
                (
                    this.CalculatedLoadEnd == input.CalculatedLoadEnd ||
                    (this.CalculatedLoadEnd != null &&
                    this.CalculatedLoadEnd.Equals(input.CalculatedLoadEnd))
                ) && 
                (
                    this.ActualLoadStart == input.ActualLoadStart ||
                    (this.ActualLoadStart != null &&
                    this.ActualLoadStart.Equals(input.ActualLoadStart))
                ) && 
                (
                    this.ActualLoadEnd == input.ActualLoadEnd ||
                    (this.ActualLoadEnd != null &&
                    this.ActualLoadEnd.Equals(input.ActualLoadEnd))
                ) && 
                (
                    this.LoadingTimeType == input.LoadingTimeType ||
                    this.LoadingTimeType.Equals(input.LoadingTimeType)
                ) && 
                (
                    this.DeliveryStart == input.DeliveryStart ||
                    (this.DeliveryStart != null &&
                    this.DeliveryStart.Equals(input.DeliveryStart))
                ) && 
                (
                    this.DeliveryEnd == input.DeliveryEnd ||
                    (this.DeliveryEnd != null &&
                    this.DeliveryEnd.Equals(input.DeliveryEnd))
                ) && 
                (
                    this.PlannedDeliveryStart == input.PlannedDeliveryStart ||
                    (this.PlannedDeliveryStart != null &&
                    this.PlannedDeliveryStart.Equals(input.PlannedDeliveryStart))
                ) && 
                (
                    this.PlannedDeliveryEnd == input.PlannedDeliveryEnd ||
                    (this.PlannedDeliveryEnd != null &&
                    this.PlannedDeliveryEnd.Equals(input.PlannedDeliveryEnd))
                ) && 
                (
                    this.CalculatedDeliveryStart == input.CalculatedDeliveryStart ||
                    (this.CalculatedDeliveryStart != null &&
                    this.CalculatedDeliveryStart.Equals(input.CalculatedDeliveryStart))
                ) && 
                (
                    this.CalculatedDeliveryEnd == input.CalculatedDeliveryEnd ||
                    (this.CalculatedDeliveryEnd != null &&
                    this.CalculatedDeliveryEnd.Equals(input.CalculatedDeliveryEnd))
                ) && 
                (
                    this.ActualDeliveryStart == input.ActualDeliveryStart ||
                    (this.ActualDeliveryStart != null &&
                    this.ActualDeliveryStart.Equals(input.ActualDeliveryStart))
                ) && 
                (
                    this.ActualDeliveryEnd == input.ActualDeliveryEnd ||
                    (this.ActualDeliveryEnd != null &&
                    this.ActualDeliveryEnd.Equals(input.ActualDeliveryEnd))
                ) && 
                (
                    this.DeliveryTimeType == input.DeliveryTimeType ||
                    this.DeliveryTimeType.Equals(input.DeliveryTimeType)
                ) && 
                (
                    this.OrderDate == input.OrderDate ||
                    (this.OrderDate != null &&
                    this.OrderDate.Equals(input.OrderDate))
                ) && 
                (
                    this.ShipmentNumber == input.ShipmentNumber ||
                    (this.ShipmentNumber != null &&
                    this.ShipmentNumber.Equals(input.ShipmentNumber))
                ) && 
                (
                    this.ReferenceNumber == input.ReferenceNumber ||
                    (this.ReferenceNumber != null &&
                    this.ReferenceNumber.Equals(input.ReferenceNumber))
                ) && 
                (
                    this.LoadNumber == input.LoadNumber ||
                    (this.LoadNumber != null &&
                    this.LoadNumber.Equals(input.LoadNumber))
                ) && 
                (
                    this.DeliveryNumber == input.DeliveryNumber ||
                    (this.DeliveryNumber != null &&
                    this.DeliveryNumber.Equals(input.DeliveryNumber))
                ) && 
                (
                    this.IsTemplate == input.IsTemplate ||
                    this.IsTemplate.Equals(input.IsTemplate)
                ) && 
                (
                    this.TemplateName == input.TemplateName ||
                    (this.TemplateName != null &&
                    this.TemplateName.Equals(input.TemplateName))
                ) && 
                (
                    this.StatusId == input.StatusId ||
                    (this.StatusId != null &&
                    this.StatusId.Equals(input.StatusId))
                ) && 
                (
                    this.TransportOrder == input.TransportOrder ||
                    (this.TransportOrder != null &&
                    this.TransportOrder.Equals(input.TransportOrder))
                ) && 
                (
                    this.Documents == input.Documents ||
                    this.Documents != null &&
                    input.Documents != null &&
                    this.Documents.SequenceEqual(input.Documents)
                ) && 
                (
                    this.Tags == input.Tags ||
                    this.Tags != null &&
                    input.Tags != null &&
                    this.Tags.SequenceEqual(input.Tags)
                ) && 
                (
                    this.Notes == input.Notes ||
                    (this.Notes != null &&
                    this.Notes.Equals(input.Notes))
                ) && 
                (
                    this.IsDeleted == input.IsDeleted ||
                    this.IsDeleted.Equals(input.IsDeleted)
                ) && 
                (
                    this.LoadWorkflow == input.LoadWorkflow ||
                    (this.LoadWorkflow != null &&
                    this.LoadWorkflow.Equals(input.LoadWorkflow))
                ) && 
                (
                    this.DeliveryWorkflow == input.DeliveryWorkflow ||
                    (this.DeliveryWorkflow != null &&
                    this.DeliveryWorkflow.Equals(input.DeliveryWorkflow))
                ) && 
                (
                    this.ConstructionSiteId == input.ConstructionSiteId ||
                    (this.ConstructionSiteId != null &&
                    this.ConstructionSiteId.Equals(input.ConstructionSiteId))
                ) && 
                (
                    this.Addon == input.Addon ||
                    this.Addon != null &&
                    input.Addon != null &&
                    this.Addon.SequenceEqual(input.Addon)
                ) && 
                (
                    this.Items == input.Items ||
                    this.Items != null &&
                    input.Items != null &&
                    this.Items.SequenceEqual(input.Items)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LoadAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.LoadAddressId.GetHashCode();
                }
                if (this.DeliveryAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryAddressId.GetHashCode();
                }
                if (this.RecipientAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.RecipientAddressId.GetHashCode();
                }
                if (this.SenderAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.SenderAddressId.GetHashCode();
                }
                if (this.CarrierPersonalAccountId != null)
                {
                    hashCode = (hashCode * 59) + this.CarrierPersonalAccountId.GetHashCode();
                }
                if (this.CarrierAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.CarrierAddressId.GetHashCode();
                }
                if (this.FreightPayerPersonalAccountId != null)
                {
                    hashCode = (hashCode * 59) + this.FreightPayerPersonalAccountId.GetHashCode();
                }
                if (this.FreightPayerAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.FreightPayerAddressId.GetHashCode();
                }
                if (this.CustomerPersonalAccountId != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerPersonalAccountId.GetHashCode();
                }
                if (this.CustomerAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerAddressId.GetHashCode();
                }
                if (this.InvoiceRecipientPersonalAccountId != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceRecipientPersonalAccountId.GetHashCode();
                }
                if (this.InvoiceRecipientAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.InvoiceRecipientAddressId.GetHashCode();
                }
                if (this.SupplierPersonalAccountId != null)
                {
                    hashCode = (hashCode * 59) + this.SupplierPersonalAccountId.GetHashCode();
                }
                if (this.SupplierAddressId != null)
                {
                    hashCode = (hashCode * 59) + this.SupplierAddressId.GetHashCode();
                }
                if (this.LoadStart != null)
                {
                    hashCode = (hashCode * 59) + this.LoadStart.GetHashCode();
                }
                if (this.LoadEnd != null)
                {
                    hashCode = (hashCode * 59) + this.LoadEnd.GetHashCode();
                }
                if (this.PlannedLoadStart != null)
                {
                    hashCode = (hashCode * 59) + this.PlannedLoadStart.GetHashCode();
                }
                if (this.PlannedLoadEnd != null)
                {
                    hashCode = (hashCode * 59) + this.PlannedLoadEnd.GetHashCode();
                }
                if (this.CalculatedLoadStart != null)
                {
                    hashCode = (hashCode * 59) + this.CalculatedLoadStart.GetHashCode();
                }
                if (this.CalculatedLoadEnd != null)
                {
                    hashCode = (hashCode * 59) + this.CalculatedLoadEnd.GetHashCode();
                }
                if (this.ActualLoadStart != null)
                {
                    hashCode = (hashCode * 59) + this.ActualLoadStart.GetHashCode();
                }
                if (this.ActualLoadEnd != null)
                {
                    hashCode = (hashCode * 59) + this.ActualLoadEnd.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.LoadingTimeType.GetHashCode();
                if (this.DeliveryStart != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryStart.GetHashCode();
                }
                if (this.DeliveryEnd != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryEnd.GetHashCode();
                }
                if (this.PlannedDeliveryStart != null)
                {
                    hashCode = (hashCode * 59) + this.PlannedDeliveryStart.GetHashCode();
                }
                if (this.PlannedDeliveryEnd != null)
                {
                    hashCode = (hashCode * 59) + this.PlannedDeliveryEnd.GetHashCode();
                }
                if (this.CalculatedDeliveryStart != null)
                {
                    hashCode = (hashCode * 59) + this.CalculatedDeliveryStart.GetHashCode();
                }
                if (this.CalculatedDeliveryEnd != null)
                {
                    hashCode = (hashCode * 59) + this.CalculatedDeliveryEnd.GetHashCode();
                }
                if (this.ActualDeliveryStart != null)
                {
                    hashCode = (hashCode * 59) + this.ActualDeliveryStart.GetHashCode();
                }
                if (this.ActualDeliveryEnd != null)
                {
                    hashCode = (hashCode * 59) + this.ActualDeliveryEnd.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.DeliveryTimeType.GetHashCode();
                if (this.OrderDate != null)
                {
                    hashCode = (hashCode * 59) + this.OrderDate.GetHashCode();
                }
                if (this.ShipmentNumber != null)
                {
                    hashCode = (hashCode * 59) + this.ShipmentNumber.GetHashCode();
                }
                if (this.ReferenceNumber != null)
                {
                    hashCode = (hashCode * 59) + this.ReferenceNumber.GetHashCode();
                }
                if (this.LoadNumber != null)
                {
                    hashCode = (hashCode * 59) + this.LoadNumber.GetHashCode();
                }
                if (this.DeliveryNumber != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryNumber.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsTemplate.GetHashCode();
                if (this.TemplateName != null)
                {
                    hashCode = (hashCode * 59) + this.TemplateName.GetHashCode();
                }
                if (this.StatusId != null)
                {
                    hashCode = (hashCode * 59) + this.StatusId.GetHashCode();
                }
                if (this.TransportOrder != null)
                {
                    hashCode = (hashCode * 59) + this.TransportOrder.GetHashCode();
                }
                if (this.Documents != null)
                {
                    hashCode = (hashCode * 59) + this.Documents.GetHashCode();
                }
                if (this.Tags != null)
                {
                    hashCode = (hashCode * 59) + this.Tags.GetHashCode();
                }
                if (this.Notes != null)
                {
                    hashCode = (hashCode * 59) + this.Notes.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsDeleted.GetHashCode();
                if (this.LoadWorkflow != null)
                {
                    hashCode = (hashCode * 59) + this.LoadWorkflow.GetHashCode();
                }
                if (this.DeliveryWorkflow != null)
                {
                    hashCode = (hashCode * 59) + this.DeliveryWorkflow.GetHashCode();
                }
                if (this.ConstructionSiteId != null)
                {
                    hashCode = (hashCode * 59) + this.ConstructionSiteId.GetHashCode();
                }
                if (this.Addon != null)
                {
                    hashCode = (hashCode * 59) + this.Addon.GetHashCode();
                }
                if (this.Items != null)
                {
                    hashCode = (hashCode * 59) + this.Items.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
