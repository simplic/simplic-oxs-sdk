{
    "openapi": "3.0.1",
    "info": {
        "title": "Simplic.OxS.Logistics",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://dev-oxs.simplic.io/logistics-api/v1"
        }
    ],
    "paths": {
        "/Appointment/{id}": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Appointment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAppointmentRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAppointmentRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAppointmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Appointment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Appointment": {
            "post": {
                "tags": [
                    "Appointment"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAppointmentRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAppointmentRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAppointmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DefaultPlanning/get-by-shift/{shiftId}": {
            "get": {
                "tags": [
                    "DefaultPlanning"
                ],
                "summary": "Gets the plan with given id.",
                "parameters": [
                    {
                        "name": "shiftId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DefaultPlanning/get-by-resource/{resourceId}": {
            "get": {
                "tags": [
                    "DefaultPlanning"
                ],
                "summary": "Gets plan for resource matching given id.",
                "parameters": [
                    {
                        "name": "resourceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "shiftId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DefaultPlanning/{shiftId}": {
            "delete": {
                "tags": [
                    "DefaultPlanning"
                ],
                "summary": "Deletes plan matching given id.",
                "parameters": [
                    {
                        "name": "shiftId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "DefaultPlanning"
                ],
                "summary": "Patches plan matching given id.",
                "parameters": [
                    {
                        "name": "shiftId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDefaultPlanningRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDefaultPlanningRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDefaultPlanningRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DefaultPlanning": {
            "post": {
                "tags": [
                    "DefaultPlanning"
                ],
                "summary": "Posts a new plan.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDefaultPlanningRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDefaultPlanningRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDefaultPlanningRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPlanningAssignmentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DefaultPlanning/validate": {
            "get": {
                "tags": [
                    "DefaultPlanning"
                ],
                "summary": "Checks whether any resource has been assigned in multiple plans.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Department/{id}": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Gets department matching given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Department"
                ],
                "summary": "Deletes department matching given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Department"
                ],
                "summary": "Patches department matching given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDepartmentRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDepartmentRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchDepartmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Department/get-by-order/{orderId}": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Gets departments with given order id.",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartmentResponse"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartmentResponse"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartmentResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Department/get-by-name/{name}": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Gets departments with given name.",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartmentResponse"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartmentResponse"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartmentResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Department": {
            "post": {
                "tags": [
                    "Department"
                ],
                "summary": "Creates a new department.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDepartmentRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDepartmentRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostDepartmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EstimatedTimeOfArrival/{id}": {
            "get": {
                "tags": [
                    "EstimatedTimeOfArrival"
                ],
                "summary": "Retrives the eta with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the eta.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstimatedTimeOfArrivalResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstimatedTimeOfArrivalResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstimatedTimeOfArrivalResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EstimatedTimeOfArrival/get-by-tour/{id}": {
            "get": {
                "tags": [
                    "EstimatedTimeOfArrival"
                ],
                "summary": "Retrives the eta with the given tourId.",
                "parameters": [
                    {
                        "name": "tourId",
                        "in": "query",
                        "description": "Id of a tour.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstimatedTimeOfArrivalResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstimatedTimeOfArrivalResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstimatedTimeOfArrivalResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EstimatedTimeOfArrival/get-all": {
            "get": {
                "tags": [
                    "EstimatedTimeOfArrival"
                ],
                "summary": "Retrives all etas for the current organization.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EstimatedTimeOfArrivalResponse"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EstimatedTimeOfArrivalResponse"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EstimatedTimeOfArrivalResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/HookDefinition": {
            "get": {
                "tags": [
                    "HookDefinition"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/HookDefinitionResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HookDefinitionResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HookDefinitionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/internal/InternalLoadingAidType/get-by-id": {
            "get": {
                "tags": [
                    "InternalLoadingAidType"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/LoadingAidType": {
            "post": {
                "tags": [
                    "LoadingAidType"
                ],
                "summary": "Creates a new loading aid type.",
                "requestBody": {
                    "description": "A create loading aid type request object.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLoadingAidTypeRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLoadingAidTypeRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLoadingAidTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/LoadingAidType/{id}": {
            "get": {
                "tags": [
                    "LoadingAidType"
                ],
                "summary": "Retrives the loading aid type with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the loading aid type.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "LoadingAidType"
                ],
                "summary": "Patches the loading aid type.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "It of the loading aid to update.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A patch loading aid request.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchLoadingAidTypeRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchLoadingAidTypeRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchLoadingAidTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "LoadingAidType"
                ],
                "summary": "Deletes loading aid type matching given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/LoadingAidType/get-all": {
            "get": {
                "tags": [
                    "LoadingAidType"
                ],
                "summary": "Retrieves all loading aid types.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LoadingAidTypeResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PlanningRegion": {
            "post": {
                "tags": [
                    "PlanningRegion"
                ],
                "summary": "Creates a new planning region.",
                "requestBody": {
                    "description": "A create planning region request object.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePlanningRegionRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePlanningRegionRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePlanningRegionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanningRegionModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanningRegionModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanningRegionModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PlanningRegion/{id}": {
            "get": {
                "tags": [
                    "PlanningRegion"
                ],
                "summary": "Retrives the planning region with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the planning region.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanningRegionModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanningRegionModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanningRegionModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "PlanningRegion"
                ],
                "summary": "Updates/saves the given planning region.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the planning region to update.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Shipment status to update.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchPlanningRegionRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchPlanningRegionRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchPlanningRegionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanningRegionModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanningRegionModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanningRegionModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PlanningRegion/get-all": {
            "get": {
                "tags": [
                    "PlanningRegion"
                ],
                "summary": "Retrieves all planning region.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlanningRegionModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlanningRegionModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlanningRegionModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Reporting/get-by-tour/{id}": {
            "get": {
                "tags": [
                    "Reporting"
                ],
                "summary": "Retrieves the tour with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the tour.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourReportingModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourReportingModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourReportingModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/{id}": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Retrives the resource with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Resource"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateResourceRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateResourceRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateResourceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/get-all": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Retrieves all resources.",
                "parameters": [
                    {
                        "name": "useableUntil",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/get-all-by-group": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Retrieves all resources.",
                "parameters": [
                    {
                        "name": "group",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "useableUntil",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/get-page-data": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Retrieves a data page of resources.",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "filterString",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource/get-by-location": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Retrieves resources from a specific group and location.",
                "parameters": [
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "maxDistanceMeter",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "minDistanceMeter",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Resource": {
            "post": {
                "tags": [
                    "Resource"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateResourceRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateResourceRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateResourceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResourceGroup/{id}": {
            "get": {
                "tags": [
                    "ResourceGroup"
                ],
                "summary": "Retrives the resource group with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedResourcesModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedResourcesModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedResourcesModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ResourceGroup"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateResourceGroupRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateResourceGroupRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateResourceGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedResourcesModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedResourcesModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedResourcesModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ResourceGroup"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResourceGroup": {
            "get": {
                "tags": [
                    "ResourceGroup"
                ],
                "summary": "Retrives all resource groups",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupedResourcesModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupedResourcesModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupedResourcesModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ResourceGroup"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateResourceGroupRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateResourceGroupRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateResourceGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedResourcesModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedResourcesModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedResourcesModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResourceMap/get-by-location": {
            "get": {
                "tags": [
                    "ResourceMap"
                ],
                "summary": "Retrieves resources from a specific group and location.",
                "parameters": [
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "maxDistanceMeter",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "minDistanceMeter",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceMapResponse"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceMapResponse"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceMapResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ScheduledPlanning/{id}": {
            "get": {
                "tags": [
                    "ScheduledPlanning"
                ],
                "summary": "Gets plan matching given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ScheduledPlanning"
                ],
                "summary": "Deletes plan matching given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ScheduledPlanning"
                ],
                "summary": "Patches plan matching given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchScheduledPlanningRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchScheduledPlanningRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchScheduledPlanningRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ScheduledPlanning/get-by-date": {
            "get": {
                "tags": [
                    "ScheduledPlanning"
                ],
                "summary": "Gets all plans for given day.",
                "parameters": [
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ScheduledPlanning/get-by-shift/{shiftId}": {
            "get": {
                "tags": [
                    "ScheduledPlanning"
                ],
                "summary": "Gets plans matching given shift id for given day.",
                "parameters": [
                    {
                        "name": "shiftId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ScheduledPlanning/get-by-resource/{resourceId}": {
            "get": {
                "tags": [
                    "ScheduledPlanning"
                ],
                "summary": "Gets shifts for resource on given day.",
                "parameters": [
                    {
                        "name": "resourceId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "shiftId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ScheduledPlanning": {
            "post": {
                "tags": [
                    "ScheduledPlanning"
                ],
                "summary": "Posts a new plan.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostScheduledPlanningRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostScheduledPlanningRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostScheduledPlanningRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledPlanningAssignmentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ScheduledPlanning/validate": {
            "get": {
                "tags": [
                    "ScheduledPlanning"
                ],
                "summary": "Checks whether any resource has been assigned in multiple plans.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Shift/{id}": {
            "get": {
                "tags": [
                    "Shift"
                ],
                "summary": "Gets shift matching given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shift"
                ],
                "summary": "Deletes shift matching given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Shift"
                ],
                "summary": "Patches shift matching given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchShiftRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchShiftRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchShiftRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Shift/get-by-range": {
            "get": {
                "tags": [
                    "Shift"
                ],
                "summary": "Gets shifts in given range.",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShiftResponse"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShiftResponse"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShiftResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Shift/get-by-name/{name}": {
            "get": {
                "tags": [
                    "Shift"
                ],
                "summary": "Gets shifts matching given name.",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShiftResponse"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShiftResponse"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShiftResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Shift": {
            "post": {
                "tags": [
                    "Shift"
                ],
                "summary": "Creates a new shift.",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostShiftRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostShiftRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostShiftRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShiftResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Shipment/get-all-with-conditions": {
            "get": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Retrives all shipments for the given conditions.",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the shipment.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Date since when to retrieve.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Date until to retrive.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShipmentModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShipmentModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShipmentModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Shipment/{id}": {
            "get": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Retrives the shipment with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the shipment",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shipment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Shipment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchShipmentRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchShipmentRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchShipmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Shipment/get-updated-since": {
            "get": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Retrives the shipment with the given id.",
                "parameters": [
                    {
                        "name": "since",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShipmentModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShipmentModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShipmentModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Shipment": {
            "post": {
                "tags": [
                    "Shipment"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateShipmentRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateShipmentRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateShipmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ShipmentStatus": {
            "post": {
                "tags": [
                    "ShipmentStatus"
                ],
                "summary": "Creates a new shipment status.",
                "requestBody": {
                    "description": "A create shipment status request object.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateShipmentStatusRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateShipmentStatusRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateShipmentStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentStatusModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentStatusModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentStatusModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ShipmentStatus/{id}": {
            "get": {
                "tags": [
                    "ShipmentStatus"
                ],
                "summary": "Retrives the shipment status with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the shipment status.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentStatusModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentStatusModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentStatusModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ShipmentStatus"
                ],
                "summary": "Updates/saves the given shipment status.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the shipment status to update.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Shipment status to update.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateShipmentStatusRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateShipmentStatusRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateShipmentStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentStatusModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentStatusModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentStatusModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ShipmentStatus/get-all": {
            "get": {
                "tags": [
                    "ShipmentStatus"
                ],
                "summary": "Retrieves all shipment status.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShipmentStatusModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShipmentStatusModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShipmentStatusModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/{id}": {
            "get": {
                "tags": [
                    "Tour"
                ],
                "summary": "Retrieves the tour with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the tour.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Tour"
                ],
                "summary": "Patches a tour object.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the tour.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The patch request object.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTourRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTourRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTourRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tour"
                ],
                "summary": "Deletes the given tour.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of a tour to delete.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/get-all-by-dates": {
            "get": {
                "tags": [
                    "Tour"
                ],
                "summary": "Retrieves all tours between two dates.",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour": {
            "post": {
                "tags": [
                    "Tour"
                ],
                "summary": "Creates a new tour object.",
                "requestBody": {
                    "description": "Tour to create.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTourRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTourRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTourRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/manipulate": {
            "post": {
                "tags": [
                    "Tour"
                ],
                "summary": "Updates/saves the given tour.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManipulateTourRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManipulateTourRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManipulateTourRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourManipulateResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourManipulateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourManipulateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/convert-shipment-to-tour": {
            "post": {
                "tags": [
                    "Tour"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipmentToTourRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipmentToTourRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipmentToTourRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/convert-shipments-to-tour": {
            "post": {
                "tags": [
                    "Tour"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipmentsToTourRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipmentsToTourRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipmentsToTourRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/add-tag-to-tour": {
            "put": {
                "tags": [
                    "Tour"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTagToTourRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTagToTourRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTagToTourRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/remove-tag-from-tour": {
            "put": {
                "tags": [
                    "Tour"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveTagFromTourRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveTagFromTourRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveTagFromTourRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/set-tour-actual-times": {
            "put": {
                "tags": [
                    "Tour"
                ],
                "summary": "Sets the actual times of a tour. Also gives the option to change the tour status, e.g to started.",
                "requestBody": {
                    "description": "The SetTOurActualTimesRequest object.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetTourActualTimesRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetTourActualTimesRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetTourActualTimesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/get-by-global-tour-id": {
            "get": {
                "tags": [
                    "Tour"
                ],
                "summary": "Retrieves all tours with the given global tour id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/get-by-shipment-id": {
            "get": {
                "tags": [
                    "Tour"
                ],
                "summary": "Retrieves all tours that contains actions with the given shipment id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/get-aggregated-loading-slots": {
            "get": {
                "tags": [
                    "Tour"
                ],
                "summary": "Get all used loading slots for a specific resource",
                "parameters": [
                    {
                        "name": "resourceId",
                        "in": "query",
                        "description": "Resource id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "loadingSlotNames",
                        "in": "query",
                        "description": "Names of the loading slots to query (comma separated). E.g. K1, K2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Amount of data for each loading slot",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UsedLoadingSlotAggregationModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UsedLoadingSlotAggregationModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UsedLoadingSlotAggregationModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Tour/send-to-telematic": {
            "put": {
                "tags": [
                    "Tour"
                ],
                "parameters": [
                    {
                        "name": "tourId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UsedLoadingSlotAggregationModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UsedLoadingSlotAggregationModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UsedLoadingSlotAggregationModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TourCalculation/calculate-routes": {
            "post": {
                "tags": [
                    "TourCalculation"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalculateRouteRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalculateRouteRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalculateRouteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalculateRouteResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalculateRouteResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalculateRouteResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TourStatus": {
            "post": {
                "tags": [
                    "TourStatus"
                ],
                "summary": "Creates a new tour status.",
                "requestBody": {
                    "description": "A create tour status request object.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTourStatusRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTourStatusRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTourStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourStatusModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourStatusModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourStatusModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TourStatus/{id}": {
            "get": {
                "tags": [
                    "TourStatus"
                ],
                "summary": "Retrives the tour status with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the tour status.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourStatusModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourStatusModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourStatusModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "TourStatus"
                ],
                "summary": "Updates/saves the given tour status.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the tour status to update.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Tour status to update.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTourStatusRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTourStatusRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTourStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourStatusModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourStatusModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourStatusModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TourStatus/get-all": {
            "get": {
                "tags": [
                    "TourStatus"
                ],
                "summary": "Retrieves all tour status.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourStatusModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourStatusModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourStatusModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TourTag/{id}": {
            "get": {
                "tags": [
                    "TourTag"
                ],
                "summary": "Retrives the tour tag with the given id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the TourTag",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourTagModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourTagModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourTagModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "TourTag"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTourTagRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTourTagRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTourTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourTagModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourTagModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourTagModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TourTag"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IActionResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TourTag": {
            "get": {
                "tags": [
                    "TourTag"
                ],
                "summary": "Retrives all tour tags.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourTagModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourTagModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourTagModel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TourTag"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTourTagRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTourTagRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTourTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourTagModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourTagModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourTagModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddTagToTourRequest": {
                "type": "object",
                "properties": {
                    "tourId": {
                        "type": "string",
                        "description": "Gets or sets the tour id.",
                        "format": "uuid"
                    },
                    "tagId": {
                        "type": "string",
                        "description": "Gets or sets the tag id.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Request to add a tag to a tour."
            },
            "Address": {
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "street": {
                        "type": "string",
                        "nullable": true
                    },
                    "houseNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "additional01": {
                        "type": "string",
                        "nullable": true
                    },
                    "additional02": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipcode": {
                        "type": "string",
                        "nullable": true
                    },
                    "district": {
                        "type": "string",
                        "nullable": true
                    },
                    "federalState": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryIso": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "geofences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Geofence"
                        },
                        "nullable": true
                    },
                    "matchCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "AddressModel": {
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "string",
                        "description": "Gets or sets the contact guid.",
                        "format": "uuid"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Gets or sets the company name",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Gets or sets the first name",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Gets or sets the last name",
                        "nullable": true
                    },
                    "street": {
                        "type": "string",
                        "description": "Gets or sets the street",
                        "nullable": true
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "Gets or sets the house number.",
                        "nullable": true
                    },
                    "additional01": {
                        "type": "string",
                        "description": "Gets or sets the first additional information.",
                        "nullable": true
                    },
                    "additional02": {
                        "type": "string",
                        "description": "Gets or sets the second additional information.",
                        "nullable": true
                    },
                    "zipcode": {
                        "type": "string",
                        "description": "Gets or sets the zipcode.",
                        "nullable": true
                    },
                    "district": {
                        "type": "string",
                        "description": "Gets or sets the district",
                        "nullable": true
                    },
                    "federalState": {
                        "type": "string",
                        "description": "Gets or sets the land. E.g. lower saxony or bavaria.",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "description": "Gets or sets the country.",
                        "nullable": true
                    },
                    "countryIso": {
                        "type": "string",
                        "description": "Gets or sets the country.",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "description": "Gets or sets the city.",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Gets or sets the latitude",
                        "format": "double",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Gets or sets the longitude",
                        "format": "double",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the address is deleted."
                    },
                    "matchCode": {
                        "type": "string",
                        "description": "Gets or sets the match-code of the address",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of address."
            },
            "AppointmentModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "startAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "endAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceModel"
                        },
                        "description": "Gets or sets the resources of the appointment.\r\n<br>\r\nEach resource will have the same time and address for the whole appointment. Splitting these should be done\r\nin other appointments.\r\n",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a list of functinos for an appointment.\r\n<br>\r\nA function can change the behaviour of some methdos with the function added as string.\r\n<list type=\"bullet\"><item>\"blocking\" : Will determine whether the appointment block other appointments or tours to be \r\nscheduled at the same time for the contained resources.</item></list>",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "description": "Gets or sets the title of the appointment.",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the start date and time of the appointment.",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "Gets or sets the end date and time of the appointment.",
                        "format": "date-time"
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color for the appointment.\r\n<br>\r\nDefault color is light red.\r\n",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the Appointment is deleted."
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the create date time.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the create user id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the update date time.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the update user id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "Gets or sets the organization id for the Appointment.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the model of a Appointment."
            },
            "AttachedEntityModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the attachment.",
                        "format": "uuid"
                    },
                    "entitiy": {
                        "$ref": "#/components/schemas/TourEntityModel"
                    },
                    "attachingAction": {
                        "$ref": "#/components/schemas/TourActionModel"
                    },
                    "detachingAction": {
                        "$ref": "#/components/schemas/TourActionModel"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model for attached entities."
            },
            "AttachedResourceModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "attachAction": {
                        "$ref": "#/components/schemas/TourActionModel"
                    },
                    "detachAction": {
                        "$ref": "#/components/schemas/TourActionModel"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model for attached resources."
            },
            "BillableContactModel": {
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "accountNumber": {
                        "type": "string",
                        "description": "Gets or sets the account number.",
                        "nullable": true
                    },
                    "personalAccountId": {
                        "type": "string",
                        "description": "Gets or sets the personal account id.\r\n<br>\r\nRepresents the id of a personal account from the Simplic.ApplicationCollection project.\r\n",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of billable contact."
            },
            "BillingLineModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.\r\n<br>\r\nRepresents the unique identifier of a billing line.\r\n",
                        "format": "uuid"
                    },
                    "type": {
                        "$ref": "#/components/schemas/BillingLineType"
                    },
                    "billableContact": {
                        "$ref": "#/components/schemas/BillableContactModel"
                    },
                    "pricing": {
                        "$ref": "#/components/schemas/BillingLinePricingModel"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BillingLineStatusModel"
                    },
                    "singlePrice": {
                        "type": "number",
                        "description": "Gets or sets the single price.\r\n<br>\r\nRepresents the price of a single item.\r\n",
                        "format": "double"
                    },
                    "totalPrice": {
                        "type": "number",
                        "description": "Gets or sets the total price.\r\n<br>\r\nRepresents the price of all items.\r\n",
                        "format": "double"
                    },
                    "quantity": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "transactionItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BillingLineTransationItemModel"
                        },
                        "description": "Gets or sets the transaction items where the billing line is present in.\r\n<br>\r\nThe list will be filled during the billing process.\r\n",
                        "nullable": true
                    },
                    "article": {
                        "$ref": "#/components/schemas/ShipmentArticleModel"
                    },
                    "weightNoteId": {
                        "type": "string",
                        "description": "Gets or sets the weight note id that will be billed",
                        "format": "uuid",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the external reference.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of billing line."
            },
            "BillingLinePricingModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the selected pricing configuration.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the selected pricing configuration.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of billing line pricing."
            },
            "BillingLineStatusModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.\r\n<br>\r\nThe id is the unique identifier of the status.\r\n",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number.\r\n<br>\r\nThe number is a human readable identifier for the status.\r\n",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets roles.\r\n<br>\r\nThese roles will decide whether billing lines with the status can or can not to certain things.\r\n\r\nA list of available roles at the moment:\r\n<list type=\"bullet\"><item>is_default</item><item>disable_edit</item><item>billable</item><item>disable_delete</item><item>billed</item></list>",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the color as as hexadecimal value.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of billing line status."
            },
            "BillingLineTransationItemModel": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "Gets or sets the transaction id.\r\n<br>\r\nThis represents the unique identifier of a Simplic.Erp.Transaction.\r\n",
                        "format": "uuid"
                    },
                    "transactionItemId": {
                        "type": "string",
                        "description": "Gets or sets the transaction item id.\r\n<br>\r\nThis represents the unique identifier fo a Simplic.Erp.TransactionItem.\r\n",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the transaction number.\r\n<br>\r\nThis represents the number of a transaction, which is a human readable number to represent the transaction.\r\n",
                        "nullable": true
                    },
                    "typeName": {
                        "type": "string",
                        "description": "Gets or sets the type name.\r\n<br>\r\nRepresents the name of the type of the transaction.\r\n",
                        "nullable": true
                    },
                    "subtypeName": {
                        "type": "string",
                        "description": "Gets or sets the subtype name.\r\n<br>\r\nRepresents the name of the subtype of the transaction.\r\n",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the create date time.\r\n<br>\r\nRepresents the create date and time of the transaction.\r\n",
                        "format": "date-time"
                    },
                    "singlePrice": {
                        "type": "number",
                        "description": "Gets or sets the single price.\r\n<br>\r\nRepresents the single price of the transaction item.\r\n",
                        "format": "double"
                    },
                    "totalPrice": {
                        "type": "number",
                        "description": "Gets or sets the total price.\r\n<br>\r\nRepresents the total price of a transaction item.\r\n",
                        "format": "double"
                    },
                    "quantity": {
                        "$ref": "#/components/schemas/QuantityModel"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of billing line transaction."
            },
            "BillingLineType": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "Determines of which type a billing line can be.\r\nIs used to determine which type of person is billed.",
                "format": "int32"
            },
            "CalculateAddressModel": {
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "string",
                        "description": "Gets or sets the contact id.",
                        "format": "uuid"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Gets or sets the company name",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Gets or sets the first name",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Gets or sets the last name",
                        "nullable": true
                    },
                    "street": {
                        "type": "string",
                        "description": "Gets or sets the street",
                        "nullable": true
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "Gets or sets the house number.",
                        "nullable": true
                    },
                    "additional01": {
                        "type": "string",
                        "description": "Gets or sets the first additional information.",
                        "nullable": true
                    },
                    "additional02": {
                        "type": "string",
                        "description": "Gets or sets the second additional information.",
                        "nullable": true
                    },
                    "zipcode": {
                        "type": "string",
                        "description": "Gets or sets the zipcode.",
                        "nullable": true
                    },
                    "district": {
                        "type": "string",
                        "description": "Gets or sets the district",
                        "nullable": true
                    },
                    "federalState": {
                        "type": "string",
                        "description": "Gets or sets the land. E.g. lower saxony or bavaria.",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "description": "Gets or sets the country.",
                        "nullable": true
                    },
                    "countryIso": {
                        "type": "string",
                        "description": "Gets or sets the country.",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "description": "Gets or sets the city.",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Gets or sets the latitude",
                        "format": "double",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Gets or sets the longitude",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents an address to calculate tours."
            },
            "CalculateRouteRequest": {
                "type": "object",
                "properties": {
                    "metrics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "tour": {
                        "$ref": "#/components/schemas/CalculateTourModel"
                    }
                },
                "additionalProperties": false
            },
            "CalculateRouteResponse": {
                "type": "object",
                "properties": {
                    "transits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransitModel"
                        },
                        "description": "Gets or sets the transits.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response of a calculate route response."
            },
            "CalculateTourActionModel": {
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "Gets or sets the order id in which the actions are processed.",
                        "format": "int32"
                    },
                    "dateTime": {
                        "type": "string",
                        "description": "Gets or sets the date time.\r\n<br>\r\nRepresents the planned date and time of the action.\r\n",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the action of a tour that will be used to calculate transits."
            },
            "CalculateTourModel": {
                "type": "object",
                "properties": {
                    "startAddress": {
                        "$ref": "#/components/schemas/CalculateAddressModel"
                    },
                    "endAddress": {
                        "$ref": "#/components/schemas/CalculateAddressModel"
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the start date time.\r\n<br>\r\nRepresents the date and time when the resource should start it's trip.\r\n\r\nThis just represents the planned date and time, not the actual start.",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "Gets or sets the end date time.\r\n<br>\r\nRerpresents the date and time when the resource should end it's trip.\r\n\r\nThis just represents the planned date and time, not the actual end.",
                        "format": "date-time"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalculateTourActionModel"
                        },
                        "description": "Gets or sets a list of actions used to calculate the tour.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Object to calculate a tour."
            },
            "CleaningModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "cleaningStation": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/BillableContactModel"
                    },
                    "dateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time of the cleaning.",
                        "format": "date-time"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the cleaning numbner.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a cleaning."
            },
            "ConstructionSiteModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the construction site.",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gest or sets the number.",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Gets or sets the reference number.",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Gets or sets the start data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Gets or sets the end date.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "contactPerson": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "constructionSiteType": {
                        "$ref": "#/components/schemas/ConstructionSiteTypeModel"
                    },
                    "additionalInformation": {
                        "type": "string",
                        "description": "Gets or sets additional information.",
                        "nullable": true
                    },
                    "constructionTime": {
                        "type": "string",
                        "description": "Gets or sets the construction time.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Server model to represent a construction site from the constructin site api."
            },
            "ConstructionSiteTypeModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the construction site type.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a construction site type from the construction site api."
            },
            "CreateAppointmentRequest": {
                "type": "object",
                "properties": {
                    "startAddressId": {
                        "type": "string",
                        "description": "Gets or sets the id of the start address.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "endAddressId": {
                        "type": "string",
                        "description": "Gets or sets the id of the end address.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets the resources for the appointment.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a list of functinos for an appointment.\r\n<br>\r\nA function can change the behaviour of some methdos with the function added as string.\r\n<list type=\"bullet\"><item>\"blocking\" : Will determine whether the appointment block other appointments or tours to be \r\nscheduled at the same time for the contained resources.</item></list>",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "description": "Gets or sets the title of the appointment.",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the start date and time of the appointment.",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "Gets or sets the end date and time of the appointment.",
                        "format": "date-time"
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color for the appointment.\r\n<br>\r\nDefault color is light red.\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request to create an appointment."
            },
            "CreateLoadingAidTypeRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.\r\n<br>\r\nRepresents a human readable identifier.\r\n",
                        "format": "int32"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the display name.",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "description": "Gets or sets the weight.",
                        "format": "double"
                    },
                    "shortText": {
                        "type": "string",
                        "description": "Gets or sets the short text.",
                        "nullable": true
                    },
                    "width": {
                        "type": "integer",
                        "description": "Gets or sets the width.",
                        "format": "int32"
                    },
                    "length": {
                        "type": "integer",
                        "description": "Gets or sets the length.",
                        "format": "int32"
                    },
                    "storagePosition": {
                        "type": "number",
                        "description": "Gets or sets the storage position.",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "CreatePlanningRegionRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the plannig region.",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color of the planning region.",
                        "nullable": true
                    },
                    "include": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegionModel"
                        },
                        "description": "Gets or sets a list of country iso / zipcode tuples which are included from the plannig region.",
                        "nullable": true
                    },
                    "exclude": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegionModel"
                        },
                        "description": "Gets or sets a list of country iso / zipcode tuples which are excluded from the planning region.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a list of functions for the region.\r\n<br>\r\nCurrently planned are:\r\nshow_loadings,\r\nshow_unloading,\r\nshow_transits\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request to create a planning region."
            },
            "CreateResourceGroupRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the resource group.",
                        "nullable": true
                    },
                    "resourceIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The resources in the resource group.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateResourceRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Gets the type of the resource.\r\n<br>\r\nE.g. \"Driver\" or \"Tractor Unit\"\r\n",
                        "nullable": true
                    },
                    "matchCode": {
                        "type": "string",
                        "description": "Gets or sets the match code.\r\n<br>\r\nThis will be a non unique human readable number for the resource.\r\n",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the user-friendly display name\r\n<br>\r\nThis will be the display-name of the resource. E.g. for drivers\r\nthis might be the first- and lastname. For vehicles this might be \r\nthe registration plate.\r\n",
                        "nullable": true
                    },
                    "loadingSlots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LoadingSlotModel"
                        },
                        "description": "Gets or sets the loading slots of the resource.",
                        "nullable": true
                    },
                    "location": {
                        "$ref": "#/components/schemas/ResourceLocationModel"
                    },
                    "isLoadable": {
                        "type": "boolean",
                        "description": "Gets or sets whether the resource is loadable"
                    },
                    "planningOrderKey": {
                        "type": "string",
                        "description": "Gets or sets an order key for the disposition",
                        "nullable": true
                    },
                    "usableUntil": {
                        "type": "string",
                        "description": "Gets or sets a date, until",
                        "format": "date-time",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Gets or sets resource notes",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateShipmentItemRequest": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Gets or sets the text.\r\n<br>\r\nThe text is a field for the user to give more context to the shipment item and the billing.\r\n",
                        "nullable": true
                    },
                    "loadingMeters": {
                        "type": "number",
                        "description": "Gets or sets the loading meters.\r\n<br>\r\nLoading meters define how many space a packed object will use on a trailer.\r\n",
                        "format": "double"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the external reference.",
                        "nullable": true
                    },
                    "quantity": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "weight": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "billingLines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BillingLineModel"
                        },
                        "description": "Gets or sets the billing lines.\r\n<br>\r\nBilling lines determine which persons can be billed which amounts.\r\n",
                        "nullable": true
                    },
                    "article": {
                        "$ref": "#/components/schemas/ShipmentArticleModel"
                    },
                    "weightNotes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WeightNoteModel"
                        },
                        "description": "Gets or sets the weight notes.\r\n<br>\r\nWeight notes are used to get the real amount of the driven freight.\r\n",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/ShipmentItemStatusModel"
                    },
                    "loadigAidId": {
                        "type": "string",
                        "description": "Gets or sets the id of the loading aid.",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment item."
            },
            "CreateShipmentRequest": {
                "type": "object",
                "properties": {
                    "loadAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "deliveryAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "recipientAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "senderAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "carrierPersonalAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "carrierAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "freightPayerPersonalAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "freightPayerAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "customerPersonalAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "customerAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "invoiceRecipientPersonalAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "invoiceRecipientAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "supplierPersonalAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "supplierAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "loadStart": {
                        "type": "string",
                        "description": "Gets or sets the load time slot start with date and time\r\n<br>\r\nThis will define the start of the time range the driver could start the loading process.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from customer.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "loadEnd": {
                        "type": "string",
                        "description": "Gets or sets the load time slot end with date and time.\r\n<br>\r\nThis will define the end of the time range the driver could end the loading process.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from the customer.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plannedLoadStart": {
                        "type": "string",
                        "description": "Gets or sets the planned laod start with date and time.\r\n<br>\r\nThis will define the planned start of the loading process.\r\n\r\nThis will usually be set by the user based on his dayplan for the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plannedLoadEnd": {
                        "type": "string",
                        "description": "Gets or sets the planned load end with date and time.\r\n<br>\r\nThis will define the planned end of the loading process.\r\n\r\nThis will usually be set by the user based on his dayplan for the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedLoadStart": {
                        "type": "string",
                        "description": "Gets or sets the calculated load start with date and time.\r\n<br>\r\nThis will define the calculated / theoretical start of the loading process.\r\n\r\nThis will usually be set by an api based on data given by the telematics.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedLoadEnd": {
                        "type": "string",
                        "description": "Gets or sets the calculated load end with date and time.\r\n<br>\r\nThis will define the calculated / theoretical end of the laoding process.\r\n\r\nThis will usually be set by an api based on data given by the telematics.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualLoadStart": {
                        "type": "string",
                        "description": "Gets or sets the actual laod start with date and time.\r\n<br>\r\nThis will define the actual start of the loading process.\r\n\r\nThis will usually be set by an api based on the data given by the telematics.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualLoadEnd": {
                        "type": "string",
                        "description": "Gets or sets the actual load end with date and time.\r\n<br>\r\nThis will define the actual end of the loading process.\r\n\r\nThis will usually be set by an api based on the data given by the telematics",
                        "format": "date-time",
                        "nullable": true
                    },
                    "loadingTimeType": {
                        "$ref": "#/components/schemas/LoadingDateTimeType"
                    },
                    "deliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the delivery time slot start with date and time.\r\n<br>\r\nThis will define the start of the time range when the driver could deliver the shipment.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from the customer.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the delivery time slot end with date and time.\r\n<br>\r\nThis will define the end of the time range when the driver could deliver the shipment.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from the customer.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plannedDeliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the planned delivery start with date and time.\r\n<br>\r\nThis defines the planned start of the delivery / unloading process.\r\n\r\nThis will usually be set by the user based on his dayplan of the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plannedDeliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the planned delivery end with date and time.\r\n<br>\r\nThis defines the planned end off the delivery / unlaoding process.\r\n\r\nThis will usually be set by the user based on his dayplan of the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedDeliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the calculated delivery start with date and time.\r\n<br>\r\nThis defines the calculated start of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedDeliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the calculated delivery end with date and time.\r\n<br>\r\nThis defines the calculated end of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualDeliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the actual delivery start with date and time.\r\n<br>\r\nThis defines the actual start of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualDeliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the actual delivery end with date and time.\r\n<br>\r\nThis defines the actual end of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliveryTimeType": {
                        "$ref": "#/components/schemas/LoadingDateTimeType"
                    },
                    "orderDate": {
                        "type": "string",
                        "description": "Gets or sets the order date.\r\n<br>\r\nThis defines the date the shipment is ordered at.\r\nThis is a relevant information for the billing process and needs to be set.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "shipmentNumber": {
                        "type": "string",
                        "description": "Gets or sets the shipment number.\r\n<br>\r\nThis defines a number to identify the shipment as the user.\r\n",
                        "nullable": true
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Gets or sets the reference number\r\n<br>\r\nThis defines a number that references the same shipment in another programm or context.\r\n",
                        "nullable": true
                    },
                    "loadNumber": {
                        "type": "string",
                        "description": "Gets or sets the load number.\r\n<br>\r\nThis defines a number that the driver might need to load this shipment\r\n",
                        "nullable": true
                    },
                    "deliveryNumber": {
                        "type": "string",
                        "description": "Gets or sets the delivery number.\r\n<br>\r\nThis defines a number that the driber might need to deliver / unload this shipment.\r\n",
                        "nullable": true
                    },
                    "isTemplate": {
                        "type": "boolean",
                        "description": "Gets or sets werther the shipment is a template.\r\n<br>\r\nTemplate shipments are used to create shipments with certain values preset.\r\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Gets or sets the template name.\r\n<br>\r\nA name for the template to give the user the option to find it easier\r\n",
                        "nullable": true
                    },
                    "statusId": {
                        "type": "string",
                        "description": "Gets or sets the shipment status.\r\n<br>\r\nThe status might forbid some actions for the user. Or might enable other actions.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "transportOrder": {
                        "$ref": "#/components/schemas/ShipmentTransportOrderModel"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentDocumentModel"
                        },
                        "description": "Gets or sets the documments.\r\n<br>\r\nThese documents contain more information that just the shipment. \r\nE.g. the shipment item id or weight note id.\r\n\r\nFurthermore documents might be marked for invoices and ordered for them.",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentTagModel"
                        },
                        "description": "Gets or sets the tags.\r\n<br>\r\nTags are short texts to add information to a shipment without the need to add new properties.\r\n\r\nThese are e.g. used in the pricing module to add some additional conditions.",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Gets or sets the notes.\r\n<br>\r\nThis gives the user the possibillity to add some more sentences about this shipment.\r\n",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the shipment is deleted."
                    },
                    "loadWorkflow": {
                        "$ref": "#/components/schemas/ShipmentTelematicWorkflowModel"
                    },
                    "deliveryWorkflow": {
                        "$ref": "#/components/schemas/ShipmentTelematicWorkflowModel"
                    },
                    "constructionSiteId": {
                        "type": "string",
                        "description": "Gets or sets a construction site id.\r\n<br>\r\nThe id will be resolved by the construction site api.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "addon": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Gets or sets a dictionary of addon properties.\r\n<br>\r\nCan be used to set customer exclusive properties for a shipment.\r\n",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateShipmentItemRequest"
                        },
                        "description": "Gets or sets shipment items.\r\n<br>\r\nRepresents a list of items of a shipment which will contain further information about the freight.\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request to create a shipment."
            },
            "CreateShipmentStatusRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the namme of the status.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the status.\r\n<br>\r\nThe number is a human readable short name or number of the shipment.\r\n",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets roles.\r\n<br>\r\nThese roles will decide whether shipments with the status can or can not to certain things.\r\n\r\nA list of available roles at the moment:\r\n<list type=\"bullet\"><item>is_default</item><item>disable_edit</item><item>billable</item><item>disable_delete</item></list>",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color.\r\n<br>\r\nWill define the color of the status as hex code.\r\n",
                        "nullable": true
                    },
                    "orderNr": {
                        "type": "integer",
                        "description": "Gets or sets the order number.\r\n<br>\r\nThe order nr will define in which order the statuses are resolved. \r\n\r\nThe lowest value will always be resolved first.",
                        "format": "int32"
                    },
                    "resolver": {
                        "type": "string",
                        "description": "Gets or sets the resolver name.\r\n<br>\r\nThe name of the resolver is also the name which the resolver is registererd. \r\n\r\nWithin the resolving of the status the service will try to find a resolver with the given name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a shipment status."
            },
            "CreateTourActionRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "Gets or sets the order id in which the actions are processed.",
                        "format": "int32"
                    },
                    "dateTime": {
                        "type": "string",
                        "description": "Gets or sets the date time.\r\n<br>\r\nRepresents the planned date and time of the action.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualDateTime": {
                        "type": "string",
                        "description": "Gets or sets the actual date time.\r\n<br>\r\nRepresents the actual date and time of the action.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedDateTime": {
                        "type": "string",
                        "description": "Gets or sets the calculated date time.\r\n<br>\r\nRepresents the calculated date and time of the action.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "mirroredTourNumber": {
                        "type": "string",
                        "description": "Gets or sets the tour number of the mirrored tour.\r\n<br>\r\nThe tour number will be used to make sure that all generated tours from this action have the same \r\ntour number.\r\n",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the type.",
                        "nullable": true
                    },
                    "entityId": {
                        "type": "string",
                        "description": "Gets or sets the id to resolve the entity.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Gets or sets the id to resolve the resource.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "addressId": {
                        "type": "string",
                        "description": "Gets or sets the id to resolve the address.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "mirroredTourTags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets the mirrored tour tags. \r\n<br>\r\nThe mirrored tour tags will be used to add tags to the mirrored tour.\r\n",
                        "nullable": true
                    },
                    "mirroredTourStatusId": {
                        "type": "string",
                        "description": "Gets ors sets the id of the status of the mirrored tour.\r\n<br>\r\nThe tour status will make sure that all generated tours from this action have the right status.\r\n\r\nThe status will currently not be resolved and will only be set manually.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "cleaningSlots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LoadingSlotModel"
                        },
                        "description": "Gets or sets a list of used loading slots.",
                        "nullable": true
                    },
                    "usedLoadingSlots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LoadingSlotModel"
                        },
                        "description": "Gets or sets a list of used loading slots.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of a tour action."
            },
            "CreateTourRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the tour.",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the reference number.",
                        "nullable": true
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Gets or sets the resource id.\r\n<br>\r\nWill be resolved as resouce.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "startAddressId": {
                        "type": "string",
                        "description": "Gets or sets the start address id.\r\n<br>\r\nWill be resolved to the start address.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "endAddressId": {
                        "type": "string",
                        "description": "Gets or sets the end address id.\r\n<br>\r\nWill be resolved to the end address.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the start date time.\r\n<br>\r\nRepresents the date and time when the resource should start it's trip.\r\n\r\nThis just represents the planned date and time, not the actual start.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "Gets or sets the end date time.\r\n<br>\r\nRerpresents the date and time when the resource should end it's trip.\r\n\r\nThis just represents the planned date and time, not the actual end.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualStartDateTime": {
                        "type": "string",
                        "description": "Gets or sets the actual start date and time.\r\n<br>\r\nThis represents the time the resource actually started it's trip, not the planned start.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualEndDateTime": {
                        "type": "string",
                        "description": "Gets or sets the actual end date and time.\r\n<br>\r\nThis represents the time the resource actually ended it's trip, not the planned end.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedStartDateTime": {
                        "type": "string",
                        "description": "Gets or sets the calculated start date and time.\r\n<br>\r\nThis value should be calculated by a service and not set by the user in most cases.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedEndDateTime": {
                        "type": "string",
                        "description": "Gets or sets the calculated end date and time.\r\n<br>\r\nThis value should be calculated by a service and not set by the user in most cases.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Gets or sets a note.",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Sets the tags of the tour.",
                        "nullable": true
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateTourActionRequest"
                        },
                        "description": "Gets or sets the tour actions.\r\n<br>\r\nThis list contains a list of actions which define single events during the trip.\r\n\r\nThis list will be the primary resource for the generation of attached resources and entities.\r\n<br>\r\nSome of these actoins might be e.g.: \"Add trailer\", \"Change tractor unit\" or \"Load shipment\".\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateTourStatusRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the namme of the status.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the status.\r\n<br>\r\nThe number is a human readable short name or number of the status.\r\n",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets roles.\r\n<br>\r\nThese roles will decide whether shipments with the status can or can not to certain things.\r\n\r\nA list of available roles at the moment:\r\n<list type=\"bullet\"><item>is_default</item><item>disable_edit</item><item>disable_delete</item></list>",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color.\r\n<br>\r\nWill define the color of the status as hex code.\r\n",
                        "nullable": true
                    },
                    "orderNr": {
                        "type": "integer",
                        "description": "Gets or sets the order number.\r\n<br>\r\nThe order nr will define in which order the statuses are resolved. \r\n\r\nThe lowest value will always be resolved first.",
                        "format": "int32"
                    },
                    "resolver": {
                        "type": "string",
                        "description": "Gets or sets the resolver name.\r\n<br>\r\nThe name of the resolver is also the name which the resolver is registererd. \r\n\r\nWithin the resolving of the status the service will try to find a resolver with the given name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a shipment status."
            },
            "CreateTourTagRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "internalName": {
                        "type": "string",
                        "description": "Gets or sets an internal tag name",
                        "nullable": true
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Gets or sets the group name.\r\n<br>\r\nGroup names are a possibillity to group tags. \r\nE.g. when just a single tag from a certain pool should be used.\r\n",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color of the string.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets the functions of the tour tag.\r\n<br>\r\nFunctions are used to add additional functionalities to a tour tag.\r\n<list type=\"bullet\"><item>disable_edit: Disables editing the tour or action the tag is attached to.</item></list>",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request to create a tour tag."
            },
            "DefaultPlanningAssignmentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceAssignmentResponse"
                        },
                        "description": "Gets or sets the assignments.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response model for Simplic.OxS.Logistics.DefaultPlanningAssignment."
            },
            "DepartmentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "Gets or sets the order id.",
                        "format": "int32"
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response model for Simplic.OxS.Logistics.Department."
            },
            "ETAState": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "format": "int32"
            },
            "EstimatedTimeOfArrivalResponse": {
                "type": "object",
                "properties": {
                    "tourId": {
                        "type": "string",
                        "description": "Gets or sets the tour id.",
                        "format": "uuid"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Gets or sets the id of the main resource of the tour.",
                        "format": "uuid"
                    },
                    "startActionId": {
                        "type": "string",
                        "description": "Gets or sets the id of the action that starts the eta.\r\n<br>\r\nWhen the start action id is null the tour start will be the start of the eta.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "globalStartActionId": {
                        "type": "string",
                        "description": "Gets or sets the global id of the start action.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "endActionId": {
                        "type": "string",
                        "description": "Gets er sets the id of the action that ends the eta.\r\n<br>\r\nWhen the end action id is null the tour end will be the end of the eta.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "globalEndActionId": {
                        "type": "string",
                        "description": "Gets or sets the global id of the end action.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the date and time when the eta will start.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "startLongitude": {
                        "type": "number",
                        "description": "Gets or sets the longitude of the start of the eta.",
                        "format": "double"
                    },
                    "startLatitude": {
                        "type": "number",
                        "description": "Gets or sets the latitude of the start of the eta.",
                        "format": "double"
                    },
                    "currentLongitude": {
                        "type": "number",
                        "description": "Gets or sets the longitude of the current position of the resource.",
                        "format": "double"
                    },
                    "currentLatitude": {
                        "type": "number",
                        "description": "Gets or sets the latitude of the current position of the resource.",
                        "format": "double"
                    },
                    "endLongitude": {
                        "type": "number",
                        "description": "Gets or sets the longitude of the end of th eta.",
                        "format": "double"
                    },
                    "endLatitude": {
                        "type": "number",
                        "description": "Gets or sets the latitude of the end of the eta.",
                        "format": "double"
                    },
                    "remainingMinutes": {
                        "type": "integer",
                        "description": "Gets or sets the remaining time in minutes.",
                        "format": "int32"
                    },
                    "remainingDistanceMeters": {
                        "type": "integer",
                        "description": "Gets or sets the remaining distance in meters.",
                        "format": "int32"
                    },
                    "remainingTimePercent": {
                        "type": "integer",
                        "description": "Gets or sets the percentage of the time remaining.",
                        "format": "int32"
                    },
                    "remainingDistancePercent": {
                        "type": "integer",
                        "description": "Gets or sets the percentage of the distance remaining.",
                        "format": "int32"
                    },
                    "calculatedEndDateTime": {
                        "type": "string",
                        "description": "Gets or sets the calculated end date time.",
                        "format": "date-time"
                    },
                    "plannedEndDateTime": {
                        "type": "string",
                        "description": "Gets or sets the planned end date and time. \r\n<br>The State will be calculated by comparing the calculated end date time with the planned and the tolerance.",
                        "format": "date-time"
                    },
                    "toleranceMinutes": {
                        "type": "integer",
                        "description": "Gets or sets the tolerance for a delay in minutes.",
                        "format": "int32"
                    },
                    "lastCalculation": {
                        "type": "string",
                        "description": "Gets or sets the date and time of the last calculation.",
                        "format": "date-time"
                    },
                    "state": {
                        "$ref": "#/components/schemas/ETAState"
                    }
                },
                "additionalProperties": false
            },
            "GeoLocation": {
                "type": "object",
                "properties": {
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Geofence": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "points": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GeoLocation"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "GroupedResourcesModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the resource group.",
                        "nullable": true
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceModel"
                        },
                        "description": "The resources in the resource group.",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the resource group.",
                        "format": "uuid"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization id of the resource group.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the model of grouped resources."
            },
            "HookDefinitionModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "operation": {
                        "type": "string",
                        "nullable": true
                    },
                    "dataType": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "payload": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "HookDefinitionResponse": {
                "type": "object",
                "properties": {
                    "definitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HookDefinitionModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "IActionResult": {
                "type": "object",
                "additionalProperties": false
            },
            "LoadingAidTypeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the guid.\r\n<br>\r\nRepresents the unique identifier of a loading aid type.\r\n",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.\r\n<br>\r\nRepresents a human readable identifier.\r\n",
                        "format": "int32"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the display name.",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "description": "Gets or sets the weight.",
                        "format": "double"
                    },
                    "shortText": {
                        "type": "string",
                        "description": "Gets or sets the short text.",
                        "nullable": true
                    },
                    "width": {
                        "type": "integer",
                        "description": "Gets or sets the width.",
                        "format": "int32"
                    },
                    "length": {
                        "type": "integer",
                        "description": "Gets or sets the length.",
                        "format": "int32"
                    },
                    "storagePosition": {
                        "type": "number",
                        "description": "Gets or sets the storage position.",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "LoadingDateTimeType": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "Represents a type of which the loading / unloading time is set.",
                "format": "int32"
            },
            "LoadingSlotModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the loading slot.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the loading slot.\r\n<br>\r\nThis should be used as a short human readable identifier for the loading slot.\r\n",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description.\r\n<br>\r\nThis could be used to notate the size or exact location of the loading slot.\r\n",
                        "nullable": true
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Gets or sets the id of the resource this loading slot is assigned to.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model for loading slots."
            },
            "ManipulateTourRequest": {
                "type": "object",
                "properties": {
                    "tourId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "newStartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "newEndDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "newResourceId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PatchAppointmentRequest": {
                "type": "object",
                "properties": {
                    "startAddressId": {
                        "type": "string",
                        "description": "Gets or sets the id of the start address.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "endAddressId": {
                        "type": "string",
                        "description": "Gets or sets the id of the end address.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets the resources for the appointment.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a list of functinos for an appointment.\r\n<br>\r\nA function can change the behaviour of some methdos with the function added as string.\r\n<list type=\"bullet\"><item>\"blocking\" : Will determine whether the appointment block other appointments or tours to be \r\nscheduled at the same time for the contained resources.</item></list>",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "description": "Gets or sets the title of the appointment.",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the start date and time of the appointment.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "Gets or sets the end date and time of the appointment.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color for the appointment.\r\n<br>\r\nDefault color is light red.\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request to patch an appointment."
            },
            "PatchDefaultPlanningRequest": {
                "type": "object",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceAssignmentPatch"
                        },
                        "description": "Gets or sets the assignments.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model for patching default planning."
            },
            "PatchDepartmentRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "Gets or sets the order id.",
                        "format": "int32"
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model for patching Simplic.OxS.Logistics.Departments."
            },
            "PatchLoadingAidTypeRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.\r\n<br>\r\nRepresents a human readable identifier.\r\n",
                        "format": "int32",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the display name.",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "description": "Gets or sets the weight.",
                        "format": "double",
                        "nullable": true
                    },
                    "shortText": {
                        "type": "string",
                        "description": "Gets or sets the short text.",
                        "nullable": true
                    },
                    "width": {
                        "type": "integer",
                        "description": "Gets or sets the width.",
                        "format": "int32",
                        "nullable": true
                    },
                    "length": {
                        "type": "integer",
                        "description": "Gets or sets the length.",
                        "format": "int32",
                        "nullable": true
                    },
                    "storagePosition": {
                        "type": "number",
                        "description": "Gets or sets the storage position.",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PatchLoadingSlotRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the loading slot.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the loading slot.\r\n<br>\r\nThis should be used as a short human readable identifier for the loading slot.\r\n",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description.\r\n<br>\r\nThis could be used to notate the size or exact location of the loading slot.\r\n",
                        "nullable": true
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Gets or sets the id of the resource this loading slot is assigned to.",
                        "format": "uuid"
                    },
                    "_remove": {
                        "type": "boolean",
                        "description": "Remove flag for the patch helper."
                    }
                },
                "additionalProperties": false,
                "description": "Shared model for loading slots."
            },
            "PatchPlanningRegionRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the plannig region.",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color of the planning region.",
                        "nullable": true
                    },
                    "include": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegionModel"
                        },
                        "description": "Gets or sets a list of country iso / zipcode tuples which are included from the plannig region.",
                        "nullable": true
                    },
                    "exclude": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegionModel"
                        },
                        "description": "Gets or sets a list of country iso / zipcode tuples which are excluded from the planning region.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a list of functions for the region.\r\n<br>\r\nCurrently planned are:\r\nshow_loadings,\r\nshow_unloading,\r\nshow_transits\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request to patch a planning region."
            },
            "PatchScheduledPlanningRequest": {
                "type": "object",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceAssignmentPatch"
                        },
                        "description": "Gets or sets the assignments.",
                        "nullable": true
                    },
                    "shiftId": {
                        "type": "string",
                        "description": "Gets or sets the shift id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Gets or sets the start date.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Gets or sets the end date.",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model for patching shifted planning."
            },
            "PatchShiftRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Gets or sets the start time.",
                        "nullable": true
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Gets or sets the end time.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model for patching Simplic.OxS.Logistics.Shifts."
            },
            "PatchShipmentItemRequest": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Gets or sets the text.\r\n<br>\r\nThe text is a field for the user to give more context to the shipment item and the billing.\r\n",
                        "nullable": true
                    },
                    "loadingMeters": {
                        "type": "number",
                        "description": "Gets or sets the loading meters.\r\n<br>\r\nLoading meters define how many space a packed object will use on a trailer.\r\n",
                        "format": "double"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the external reference.",
                        "nullable": true
                    },
                    "quantity": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "weight": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "billingLines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BillingLineModel"
                        },
                        "description": "Gets or sets the billing lines.\r\n<br>\r\nBilling lines determine which persons can be billed which amounts.\r\n",
                        "nullable": true
                    },
                    "article": {
                        "$ref": "#/components/schemas/ShipmentArticleModel"
                    },
                    "weightNotes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WeightNoteModel"
                        },
                        "description": "Gets or sets the weight notes.\r\n<br>\r\nWeight notes are used to get the real amount of the driven freight.\r\n",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/ShipmentItemStatusModel"
                    },
                    "loadigAidId": {
                        "type": "string",
                        "description": "Gets or sets the id of the loading aid.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the unique identifier of the shipmen item.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment item."
            },
            "PatchShipmentRequest": {
                "type": "object",
                "properties": {
                    "loadAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "deliveryAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "recipientAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "senderAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "carrierPersonalAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "carrierAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "freightPayerPersonalAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "freightPayerAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "customerPersonalAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "customerAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "invoiceRecipientPersonalAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "invoiceRecipientAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "supplierPersonalAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "supplierAddressId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "loadStart": {
                        "type": "string",
                        "description": "Gets or sets the load time slot start with date and time\r\n<br>\r\nThis will define the start of the time range the driver could start the loading process.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from customer.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "loadEnd": {
                        "type": "string",
                        "description": "Gets or sets the load time slot end with date and time.\r\n<br>\r\nThis will define the end of the time range the driver could end the loading process.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from the customer.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plannedLoadStart": {
                        "type": "string",
                        "description": "Gets or sets the planned laod start with date and time.\r\n<br>\r\nThis will define the planned start of the loading process.\r\n\r\nThis will usually be set by the user based on his dayplan for the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plannedLoadEnd": {
                        "type": "string",
                        "description": "Gets or sets the planned load end with date and time.\r\n<br>\r\nThis will define the planned end of the loading process.\r\n\r\nThis will usually be set by the user based on his dayplan for the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedLoadStart": {
                        "type": "string",
                        "description": "Gets or sets the calculated load start with date and time.\r\n<br>\r\nThis will define the calculated / theoretical start of the loading process.\r\n\r\nThis will usually be set by an api based on data given by the telematics.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedLoadEnd": {
                        "type": "string",
                        "description": "Gets or sets the calculated load end with date and time.\r\n<br>\r\nThis will define the calculated / theoretical end of the laoding process.\r\n\r\nThis will usually be set by an api based on data given by the telematics.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualLoadStart": {
                        "type": "string",
                        "description": "Gets or sets the actual laod start with date and time.\r\n<br>\r\nThis will define the actual start of the loading process.\r\n\r\nThis will usually be set by an api based on the data given by the telematics.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualLoadEnd": {
                        "type": "string",
                        "description": "Gets or sets the actual load end with date and time.\r\n<br>\r\nThis will define the actual end of the loading process.\r\n\r\nThis will usually be set by an api based on the data given by the telematics",
                        "format": "date-time",
                        "nullable": true
                    },
                    "loadingTimeType": {
                        "$ref": "#/components/schemas/LoadingDateTimeType"
                    },
                    "deliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the delivery time slot start with date and time.\r\n<br>\r\nThis will define the start of the time range when the driver could deliver the shipment.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from the customer.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the delivery time slot end with date and time.\r\n<br>\r\nThis will define the end of the time range when the driver could deliver the shipment.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from the customer.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plannedDeliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the planned delivery start with date and time.\r\n<br>\r\nThis defines the planned start of the delivery / unloading process.\r\n\r\nThis will usually be set by the user based on his dayplan of the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plannedDeliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the planned delivery end with date and time.\r\n<br>\r\nThis defines the planned end off the delivery / unlaoding process.\r\n\r\nThis will usually be set by the user based on his dayplan of the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedDeliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the calculated delivery start with date and time.\r\n<br>\r\nThis defines the calculated start of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedDeliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the calculated delivery end with date and time.\r\n<br>\r\nThis defines the calculated end of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualDeliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the actual delivery start with date and time.\r\n<br>\r\nThis defines the actual start of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualDeliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the actual delivery end with date and time.\r\n<br>\r\nThis defines the actual end of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliveryTimeType": {
                        "$ref": "#/components/schemas/LoadingDateTimeType"
                    },
                    "orderDate": {
                        "type": "string",
                        "description": "Gets or sets the order date.\r\n<br>\r\nThis defines the date the shipment is ordered at.\r\nThis is a relevant information for the billing process and needs to be set.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "shipmentNumber": {
                        "type": "string",
                        "description": "Gets or sets the shipment number.\r\n<br>\r\nThis defines a number to identify the shipment as the user.\r\n",
                        "nullable": true
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Gets or sets the reference number\r\n<br>\r\nThis defines a number that references the same shipment in another programm or context.\r\n",
                        "nullable": true
                    },
                    "loadNumber": {
                        "type": "string",
                        "description": "Gets or sets the load number.\r\n<br>\r\nThis defines a number that the driver might need to load this shipment\r\n",
                        "nullable": true
                    },
                    "deliveryNumber": {
                        "type": "string",
                        "description": "Gets or sets the delivery number.\r\n<br>\r\nThis defines a number that the driber might need to deliver / unload this shipment.\r\n",
                        "nullable": true
                    },
                    "isTemplate": {
                        "type": "boolean",
                        "description": "Gets or sets werther the shipment is a template.\r\n<br>\r\nTemplate shipments are used to create shipments with certain values preset.\r\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Gets or sets the template name.\r\n<br>\r\nA name for the template to give the user the option to find it easier\r\n",
                        "nullable": true
                    },
                    "statusId": {
                        "type": "string",
                        "description": "Gets or sets the shipment status.\r\n<br>\r\nThe status might forbid some actions for the user. Or might enable other actions.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "transportOrder": {
                        "$ref": "#/components/schemas/ShipmentTransportOrderModel"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentDocumentModel"
                        },
                        "description": "Gets or sets the documments.\r\n<br>\r\nThese documents contain more information that just the shipment. \r\nE.g. the shipment item id or weight note id.\r\n\r\nFurthermore documents might be marked for invoices and ordered for them.",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentTagModel"
                        },
                        "description": "Gets or sets the tags.\r\n<br>\r\nTags are short texts to add information to a shipment without the need to add new properties.\r\n\r\nThese are e.g. used in the pricing module to add some additional conditions.",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Gets or sets the notes.\r\n<br>\r\nThis gives the user the possibillity to add some more sentences about this shipment.\r\n",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the shipment is deleted."
                    },
                    "loadWorkflow": {
                        "$ref": "#/components/schemas/ShipmentTelematicWorkflowModel"
                    },
                    "deliveryWorkflow": {
                        "$ref": "#/components/schemas/ShipmentTelematicWorkflowModel"
                    },
                    "constructionSiteId": {
                        "type": "string",
                        "description": "Gets or sets a construction site id.\r\n<br>\r\nThe id will be resolved by the construction site api.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "addon": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Gets or sets a dictionary of addon properties.\r\n<br>\r\nCan be used to set customer exclusive properties for a shipment.\r\n",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchShipmentItemRequest"
                        },
                        "description": "Gets or sets shipment items.\r\n<br>\r\nRepresents a list of items of a shipment which will contain further information about the freight.\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PatchTourActionRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "Gets or sets the order id in which the actions are processed.",
                        "format": "int32"
                    },
                    "dateTime": {
                        "type": "string",
                        "description": "Gets or sets the date time.\r\n<br>\r\nRepresents the planned date and time of the action.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualDateTime": {
                        "type": "string",
                        "description": "Gets or sets the actual date time.\r\n<br>\r\nRepresents the actual date and time of the action.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedDateTime": {
                        "type": "string",
                        "description": "Gets or sets the calculated date time.\r\n<br>\r\nRepresents the calculated date and time of the action.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "mirroredTourNumber": {
                        "type": "string",
                        "description": "Gets or sets the tour number of the mirrored tour.\r\n<br>\r\nThe tour number will be used to make sure that all generated tours from this action have the same \r\ntour number.\r\n",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the type.",
                        "nullable": true
                    },
                    "entityId": {
                        "type": "string",
                        "description": "Gets or sets the id to resolve the entity.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Gets or sets the id to resolve the resource.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "addressId": {
                        "type": "string",
                        "description": "Gets or sets the id to resolve the address.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "mirroredTourTags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets the mirrored tour tags. \r\n<br>\r\nThe mirrored tour tags will be used to add tags to the mirrored tour.\r\n",
                        "nullable": true
                    },
                    "mirroredTourStatusId": {
                        "type": "string",
                        "description": "Gets ors sets the id of the status of the mirrored tour.\r\n<br>\r\nThe tour status will make sure that all generated tours from this action have the right status.\r\n\r\nThe status will currently not be resolved and will only be set manually.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "_remove": {
                        "type": "boolean",
                        "description": "Remove flag for the patch helper."
                    },
                    "cleaningSlots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchLoadingSlotRequest"
                        },
                        "description": "Gets or sets a list of used loading slots.",
                        "nullable": true
                    },
                    "usedLoadingSlots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchLoadingSlotRequest"
                        },
                        "description": "Gets or sets a list of used loading slots.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of a tour action."
            },
            "PatchTourRequest": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the tour.",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the reference number.",
                        "nullable": true
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Gets or sets the resource id.\r\n<br>\r\nWill be resolved as resouce.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "startAddressId": {
                        "type": "string",
                        "description": "Gets or sets the start address id.\r\n<br>\r\nWill be resolved to the start address.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "endAddressId": {
                        "type": "string",
                        "description": "Gets or sets the end address id.\r\n<br>\r\nWill be resolved to the end address.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the start date time.\r\n<br>\r\nRepresents the date and time when the resource should start it's trip.\r\n\r\nThis just represents the planned date and time, not the actual start.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "Gets or sets the end date time.\r\n<br>\r\nRerpresents the date and time when the resource should end it's trip.\r\n\r\nThis just represents the planned date and time, not the actual end.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualStartDateTime": {
                        "type": "string",
                        "description": "Gets or sets the actual start date and time.\r\n<br>\r\nThis represents the time the resource actually started it's trip, not the planned start.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualEndDateTime": {
                        "type": "string",
                        "description": "Gets or sets the actual end date and time.\r\n<br>\r\nThis represents the time the resource actually ended it's trip, not the planned end.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedStartDateTime": {
                        "type": "string",
                        "description": "Gets or sets the calculated start date and time.\r\n<br>\r\nThis value should be calculated by a service and not set by the user in most cases.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedEndDateTime": {
                        "type": "string",
                        "description": "Gets or sets the calculated end date and time.\r\n<br>\r\nThis value should be calculated by a service and not set by the user in most cases.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Gets or sets a note.",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Sets the tags of the tour.",
                        "nullable": true
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchTourActionRequest"
                        },
                        "description": "Gets or sets the tour actions.\r\n<br>\r\nThis list contains a list of actions which define single events during the trip.\r\n\r\nThis list will be the primary resource for the generation of attached resources and entities.\r\n<br>\r\nSome of these actoins might be e.g.: \"Add trailer\", \"Change tractor unit\" or \"Load shipment\".\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model to patch a tour."
            },
            "PatchTourStatusRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the namme of the status.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the status.\r\n<br>\r\nThe number is a human readable short name or number of the status.\r\n",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets roles.\r\n<br>\r\nThese roles will decide whether tours with the status can or can not to certain things.\r\n\r\nA list of available roles at the moment:\r\n<list type=\"bullet\"><item>is_default</item><item>disable_edit</item><item>disable_delete</item></list>",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color.\r\n<br>\r\nWill define the color of the status as hex code.\r\n",
                        "nullable": true
                    },
                    "orderNr": {
                        "type": "integer",
                        "description": "Gets or sets the order number.\r\n<br>\r\nThe order nr will define in which order the statuses are resolved. \r\n\r\nThe lowest value will always be resolved first.",
                        "format": "int32",
                        "nullable": true
                    },
                    "resolver": {
                        "type": "string",
                        "description": "Gets or sets the resolver name.\r\n<br>\r\nThe name of the resolver is also the name which the resolver is registererd. \r\n\r\nWithin the resolving of the status the service will try to find a resolver with the given name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a tour status."
            },
            "PatchTourTagRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "internalName": {
                        "type": "string",
                        "description": "Gets or sets an internal tag name",
                        "nullable": true
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Gets or sets the group name.\r\n<br>\r\nGroup names are a possibillity to group tags. \r\nE.g. when just a single tag from a certain pool should be used.\r\n",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color of the string.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets the functions of the tour tag.\r\n<br>\r\nFunctions are used to add additional functionalities to a tour tag.\r\n<list type=\"bullet\"><item>disable_edit: Disables editing the tour or action the tag is attached to.</item></list>",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request to patch a tour tag."
            },
            "PlanningRegionModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the plannig region.",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color of the planning region.",
                        "nullable": true
                    },
                    "include": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegionModel"
                        },
                        "description": "Gets or sets a list of country iso / zipcode tuples which are included from the plannig region.",
                        "nullable": true
                    },
                    "exclude": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegionModel"
                        },
                        "description": "Gets or sets a list of country iso / zipcode tuples which are excluded from the planning region.",
                        "nullable": true
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets a list of functions for the region.\r\n<br>\r\nCurrently planned are:\r\nshow_loading,\r\nshow_unloading,\r\nshow_transit\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the server model of a planning region."
            },
            "PlanningResourceResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the type.",
                        "nullable": true
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "Gets or sets the order id.",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for Simplic.OxS.Logistics.PlanningResource"
            },
            "PostDefaultPlanningRequest": {
                "type": "object",
                "properties": {
                    "shiftId": {
                        "type": "string",
                        "description": "Gets or sets the shift id.",
                        "format": "uuid"
                    },
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceAssignmentRequest"
                        },
                        "description": "Gets or sets the assignments.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model for posting new default planning assignments."
            },
            "PostDepartmentRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "Gets or sets the order id.",
                        "format": "int32"
                    },
                    "hexColor": {
                        "pattern": "#[0-9a-fA-F]{6}",
                        "type": "string",
                        "description": "Gets or sets the hex color.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model for posting departments."
            },
            "PostScheduledPlanningRequest": {
                "type": "object",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceAssignmentRequest"
                        },
                        "description": "Gets or sets the assignments.",
                        "nullable": true
                    },
                    "shiftId": {
                        "type": "string",
                        "description": "Gets or sets the shift id.",
                        "format": "uuid"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Gets or sets the start date.",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Request model for posting new shifted planning assignments."
            },
            "PostShiftRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Gets or sets the start time.",
                        "nullable": true
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Gets or sets the end time.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model for posting shifts."
            },
            "ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": {}
            },
            "QuantityModel": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "Gets or sets the value as double.",
                        "format": "double"
                    },
                    "quantityUnit": {
                        "$ref": "#/components/schemas/QuantityUnitModel"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of a quantity."
            },
            "QuantityUnitModel": {
                "type": "object",
                "properties": {
                    "guid": {
                        "type": "string",
                        "description": "Gets or sets the unique id",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the unit name",
                        "nullable": true
                    },
                    "shortName": {
                        "type": "string",
                        "description": "Gets or sets the short name",
                        "nullable": true
                    },
                    "digits": {
                        "type": "integer",
                        "description": "Gets or sets the decimal digits of the quantity",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of a quanittiy unit."
            },
            "RegionModel": {
                "type": "object",
                "properties": {
                    "countryIso": {
                        "type": "string",
                        "description": "Represents the country iso for a region.",
                        "nullable": true
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "Represents the zipcode, or the start of a zipcode for a region.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Model to represent the tuple of a counry iso and a zip code."
            },
            "RemoveTagFromTourRequest": {
                "type": "object",
                "properties": {
                    "tourId": {
                        "type": "string",
                        "description": "Gets or sets the tour id.",
                        "format": "uuid"
                    },
                    "tagId": {
                        "type": "string",
                        "description": "Gets or sets the tag id.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Request to remove a tag from a tour."
            },
            "ReportingShipmentItem": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "nullable": true
                    },
                    "loadNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "startAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "endAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "quantity": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "weight": {
                        "$ref": "#/components/schemas/QuantityModel"
                    }
                },
                "additionalProperties": false
            },
            "ResourceAssignmentPatch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "departmentId": {
                        "type": "string",
                        "description": "Gets or sets the department id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets the resource ids.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Patch model for resource assignments."
            },
            "ResourceAssignmentRequest": {
                "type": "object",
                "properties": {
                    "departmentId": {
                        "type": "string",
                        "description": "Gets or sets the department id.",
                        "format": "uuid"
                    },
                    "resourceIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets the resource ids.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model for resource assignments."
            },
            "ResourceAssignmentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "departmentId": {
                        "type": "string",
                        "description": "Gets or sets the department id.",
                        "format": "uuid"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlanningResourceResponse"
                        },
                        "description": "Gets or sets the resources.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response model for Simplic.OxS.Logistics.PlanningResource."
            },
            "ResourceLocationModel": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "number",
                        "description": "Gets or sets the latitude.",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Gets or sets the longitude.",
                        "format": "double"
                    },
                    "locationSetAt": {
                        "type": "string",
                        "description": "Gets or sets when the location for the resource is set.",
                        "format": "date-time"
                    },
                    "street": {
                        "type": "string",
                        "description": "Gets or sets the street.",
                        "nullable": true
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "Gets or sets the house number.",
                        "nullable": true
                    },
                    "zipcode": {
                        "type": "string",
                        "description": "Gets or sets the zipcode.",
                        "nullable": true
                    },
                    "district": {
                        "type": "string",
                        "description": "Gets or sets the district",
                        "nullable": true
                    },
                    "federalState": {
                        "type": "string",
                        "description": "Gets or sets the land. E.g. lower saxony or bavaria.",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "description": "Gets or sets the country.",
                        "nullable": true
                    },
                    "countryIso": {
                        "type": "string",
                        "description": "Gets or sets the country.",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "description": "Gets or sets the city.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the server model for a resource location."
            },
            "ResourceMapResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the display name.",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the type.\r\ne.g. trailer, tractor_unit...",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Gets or sets the latitude.",
                        "format": "double",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Gets or sets the longitude.",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a resource response for a map."
            },
            "ResourceModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Gets the type of the resource.\r\n<br>\r\nE.g. \"Driver\" or \"Tractor Unit\"\r\n",
                        "nullable": true
                    },
                    "matchCode": {
                        "type": "string",
                        "description": "Gets or sets the match code.\r\n<br>\r\nThis will be a non unique human readable number for the resource.\r\n",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the user-friendly display name\r\n<br>\r\nThis will be the display-name of the resource. E.g. for drivers\r\nthis might be the first- and lastname. For vehicles this might be \r\nthe registration plate.\r\n",
                        "nullable": true
                    },
                    "loadingSlots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LoadingSlotModel"
                        },
                        "description": "Gets or sets the loading slots of the resource.",
                        "nullable": true
                    },
                    "location": {
                        "$ref": "#/components/schemas/ResourceLocationModel"
                    },
                    "isLoadable": {
                        "type": "boolean",
                        "description": "Gets or sets whether the resource is loadable"
                    },
                    "planningOrderKey": {
                        "type": "string",
                        "description": "Gets or sets an order key for the disposition",
                        "nullable": true
                    },
                    "usableUntil": {
                        "type": "string",
                        "description": "Gets or sets a date, until",
                        "format": "date-time",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Gets or sets resource notes",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the resource is deleted."
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the create date time.",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the create user id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createUserName": {
                        "type": "string",
                        "description": "Gets or sets the create user name.",
                        "nullable": true
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the update date time.",
                        "format": "date-time"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the update user id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "updateUserName": {
                        "type": "string",
                        "description": "Gets or sets the update user name.",
                        "nullable": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "Gets or sets the organization id for the contact.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of resource."
            },
            "ScheduledPlanningAssignmentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceAssignmentResponse"
                        },
                        "description": "Gets or sets the assignments.",
                        "nullable": true
                    },
                    "shiftId": {
                        "type": "string",
                        "description": "Gets or sets the shift id.",
                        "format": "uuid"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Gets or sets the start date.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Gets or sets the end date.",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for Simplic.OxS.Logistics.DefaultPlanningAssignment."
            },
            "SetTourActualTimesRequest": {
                "type": "object",
                "properties": {
                    "tourId": {
                        "type": "string",
                        "description": "Gets or sets the tour id.",
                        "format": "uuid"
                    },
                    "actualStart": {
                        "type": "string",
                        "description": "Gets or sets the actual start of the tour.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualEnd": {
                        "type": "string",
                        "description": "Gets or sets the actual end of the tour.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "newStatusId": {
                        "type": "string",
                        "description": "Gets or sets the id of the new tour status that will be set during the request.",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request to set the actual times of a tour and a possible new status."
            },
            "ShiftResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "startTime": {
                        "$ref": "#/components/schemas/TimeSpan"
                    },
                    "endTime": {
                        "$ref": "#/components/schemas/TimeSpan"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for Simplic.OxS.Logistics.Shifts."
            },
            "ShipmentArticleModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.\r\n<br>\r\nRepresents the id of an article in Simplic.ArticleMaster.Article.\r\n",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number.\r\n<br>\r\nRepresents the number of an article.\r\n",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.\r\n<br>\r\nThis is just a display name which may be made of an offset of the name of the article.\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment article."
            },
            "ShipmentDocumentModel": {
                "type": "object",
                "properties": {
                    "documentId": {
                        "type": "string",
                        "description": "Gets or sets the document id.",
                        "format": "uuid"
                    },
                    "shipmentId": {
                        "type": "string",
                        "description": "Gets or sets the shipment id.",
                        "format": "uuid"
                    },
                    "shipmentItemId": {
                        "type": "string",
                        "description": "Gets or sets the shipment item id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "weightNoteId": {
                        "type": "string",
                        "description": "Gets or sets the weight note id.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "invoiceOrderNr": {
                        "type": "integer",
                        "description": "Gets or sets the invoice order number.",
                        "format": "int32"
                    },
                    "isInvoiceAttachment": {
                        "type": "boolean",
                        "description": "Gets or sets whether this document should be attached to an invoice or not."
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment document."
            },
            "ShipmentItemModel": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Gets or sets the text.\r\n<br>\r\nThe text is a field for the user to give more context to the shipment item and the billing.\r\n",
                        "nullable": true
                    },
                    "loadingMeters": {
                        "type": "number",
                        "description": "Gets or sets the loading meters.\r\n<br>\r\nLoading meters define how many space a packed object will use on a trailer.\r\n",
                        "format": "double"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the external reference.",
                        "nullable": true
                    },
                    "quantity": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "weight": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.\r\n<br>\r\nRepresents the id of a shipment-item, this id must be unique\r\n",
                        "format": "uuid"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ShipmentItemStatusModel"
                    },
                    "billingLines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BillingLineModel"
                        },
                        "description": "Gets or sets the billing lines.\r\n<br>\r\nBilling lines determine which persons can be billed which amounts.\r\n",
                        "nullable": true
                    },
                    "article": {
                        "$ref": "#/components/schemas/ShipmentArticleModel"
                    },
                    "weightNotes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WeightNoteModel"
                        },
                        "description": "Gets or sets the weight notes.\r\n<br>\r\nWeight notes are used to get the real amount of the driven freight.\r\n",
                        "nullable": true
                    },
                    "loadingAidType": {
                        "$ref": "#/components/schemas/ShipmentLoadingAidTypeModel"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment item."
            },
            "ShipmentItemStatusModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.\r\n<br>\r\nThe id is the unique identifier of the status.\r\n",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number.\r\n<br>\r\nThe number is a human readable identifier for the status.\r\n",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets roles.\r\n<br>\r\nThese roles will decide whether shipments with the status can or can not to certain things.\r\n\r\nA list of available roles at the moment:\r\n<list type=\"bullet\"><item>is_default</item><item>disable_edit</item><item>disable_delete</item><item>billable</item></list>",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the color as as hexadecimal value.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment item status."
            },
            "ShipmentLoadingAidTypeModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the guid.\r\n<br>\r\nRepresents the unique identifier of a loading aid type.\r\n",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "integer",
                        "description": "Gets or sets the number.\r\n<br>\r\nRepresents a human readable identifier.\r\n",
                        "format": "int32"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the display name.",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "description": "Gets or sets the weight.",
                        "format": "double"
                    },
                    "shortText": {
                        "type": "string",
                        "description": "Gets or sets the short text.",
                        "nullable": true
                    },
                    "width": {
                        "type": "integer",
                        "description": "Gets or sets the width.",
                        "format": "int32"
                    },
                    "length": {
                        "type": "integer",
                        "description": "Gets or sets the length.",
                        "format": "int32"
                    },
                    "storagePosition": {
                        "type": "number",
                        "description": "Gets or sets the storage position.",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of laoding aid type."
            },
            "ShipmentModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the create date time\r\n<br>\r\nThis defines the point of time the shipment is created.\r\n",
                        "format": "date-time"
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Get or sets the update date time.\r\n<br>\r\nThis defines the last point of time the shipment was updated.\r\n",
                        "format": "date-time"
                    },
                    "createUserId": {
                        "type": "string",
                        "description": "Gets or sets the create user id.\r\n<br>\r\nThis is the user that created the shipment.\r\n",
                        "format": "uuid"
                    },
                    "updateUserId": {
                        "type": "string",
                        "description": "Gets or sets the update user id.\r\n<br>\r\nThis defines the user which made the last changes to the shipment.\r\n",
                        "format": "uuid"
                    },
                    "loadAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "deliveryAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "carrier": {
                        "$ref": "#/components/schemas/BillableContactModel"
                    },
                    "freightPayer": {
                        "$ref": "#/components/schemas/BillableContactModel"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/BillableContactModel"
                    },
                    "recipientAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "invoiceRecipient": {
                        "$ref": "#/components/schemas/BillableContactModel"
                    },
                    "senderAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "supplier": {
                        "$ref": "#/components/schemas/BillableContactModel"
                    },
                    "loadStart": {
                        "type": "string",
                        "description": "Gets or sets the load time slot start with date and time\r\n<br>\r\nThis will define the start of the time range the driver could start the loading process.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from customer.",
                        "format": "date-time"
                    },
                    "loadEnd": {
                        "type": "string",
                        "description": "Gets or sets the load time slot end with date and time.\r\n<br>\r\nThis will define the end of the time range the driver could end the loading process.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from the customer.",
                        "format": "date-time"
                    },
                    "plannedLoadStart": {
                        "type": "string",
                        "description": "Gets or sets the planned laod start with date and time.\r\n<br>\r\nThis will define the planned start of the loading process.\r\n\r\nThis will usually be set by the user based on his dayplan for the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plannedLoadEnd": {
                        "type": "string",
                        "description": "Gets or sets the planned load end with date and time.\r\n<br>\r\nThis will define the planned end of the loading process.\r\n\r\nThis will usually be set by the user based on his dayplan for the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedLoadStart": {
                        "type": "string",
                        "description": "Gets or sets the calculated load start with date and time.\r\n<br>\r\nThis will define the calculated / theoretical start of the loading process.\r\n\r\nThis will usually be set by an api based on data given by the telematics.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedLoadEnd": {
                        "type": "string",
                        "description": "Gets or sets the calculated load end with date and time.\r\n<br>\r\nThis will define the calculated / theoretical end of the laoding process.\r\n\r\nThis will usually be set by an api based on data given by the telematics.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualLoadStart": {
                        "type": "string",
                        "description": "Gets or sets the actual laod start with date and time.\r\n<br>\r\nThis will define the actual start of the loading process.\r\n\r\nThis will usually be set by an api based on the data given by the telematics.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualLoadEnd": {
                        "type": "string",
                        "description": "Gets or sets the actual load end with date and time.\r\n<br>\r\nThis will define the actual end of the loading process.\r\n\r\nThis will usually be set by an api based on the data given by the telematics",
                        "format": "date-time",
                        "nullable": true
                    },
                    "loadingTimeType": {
                        "$ref": "#/components/schemas/LoadingDateTimeType"
                    },
                    "deliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the delivery time slot start with date and time.\r\n<br>\r\nThis will define the start of the time range when the driver could deliver the shipment.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from the customer.",
                        "format": "date-time"
                    },
                    "deliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the delivery time slot end with date and time.\r\n<br>\r\nThis will define the end of the time range when the driver could deliver the shipment.\r\n\r\nThis will usually be set by the user or an api based on the values he gets from the customer.",
                        "format": "date-time"
                    },
                    "plannedDeliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the planned delivery start with date and time.\r\n<br>\r\nThis defines the planned start of the delivery / unloading process.\r\n\r\nThis will usually be set by the user based on his dayplan of the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plannedDeliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the planned delivery end with date and time.\r\n<br>\r\nThis defines the planned end off the delivery / unlaoding process.\r\n\r\nThis will usually be set by the user based on his dayplan of the resource.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedDeliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the calculated delivery start with date and time.\r\n<br>\r\nThis defines the calculated start of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedDeliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the calculated delivery end with date and time.\r\n<br>\r\nThis defines the calculated end of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualDeliveryStart": {
                        "type": "string",
                        "description": "Gets or sets the actual delivery start with date and time.\r\n<br>\r\nThis defines the actual start of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualDeliveryEnd": {
                        "type": "string",
                        "description": "Gets or sets the actual delivery end with date and time.\r\n<br>\r\nThis defines the actual end of the delivery / unlaoding process.\r\n\r\nThis will usually be set by an api based on telematics data.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliveryTimeType": {
                        "$ref": "#/components/schemas/LoadingDateTimeType"
                    },
                    "orderDate": {
                        "type": "string",
                        "description": "Gets or sets the order date.\r\n<br>\r\nThis defines the date the shipment is ordered at.\r\nThis is a relevant information for the billing process and needs to be set.\r\n",
                        "format": "date-time"
                    },
                    "shipmentNumber": {
                        "type": "string",
                        "description": "Gets or sets the shipment number.\r\n<br>\r\nThis defines a number to identify the shipment as the user.\r\n",
                        "nullable": true
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Gets or sets the reference number\r\n<br>\r\nThis defines a number that references the same shipment in another programm or context.\r\n",
                        "nullable": true
                    },
                    "loadNumber": {
                        "type": "string",
                        "description": "Gets or sets the load number.\r\n<br>\r\nThis defines a number that the driver might need to load this shipment\r\n",
                        "nullable": true
                    },
                    "deliveryNumber": {
                        "type": "string",
                        "description": "Gets or sets the delivery number.\r\n<br>\r\nThis defines a number that the driber might need to deliver / unload this shipment.\r\n",
                        "nullable": true
                    },
                    "isTemplate": {
                        "type": "boolean",
                        "description": "Gets or sets werther the shipment is a template.\r\n<br>\r\nTemplate shipments are used to create shipments with certain values preset.\r\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Gets or sets the template name.\r\n<br>\r\nA name for the template to give the user the option to find it easier\r\n",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/ShipmentStatusModel"
                    },
                    "transportOrder": {
                        "$ref": "#/components/schemas/ShipmentTransportOrderModel"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentItemModel"
                        },
                        "description": "Gets or sets shipment items.\r\n<br>\r\nRepresents a list of items of a shipment which will contain further information about the freight.\r\n",
                        "nullable": true
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentDocumentModel"
                        },
                        "description": "Gets or sets the documments.\r\n<br>\r\nThese documents contain more information that just the shipment. \r\nE.g. the shipment item id or weight note id.\r\n\r\nFurthermore documents might be marked for invoices and ordered for them.",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentTagModel"
                        },
                        "description": "Gets or sets the tags.\r\n<br>\r\nTags are short texts to add information to a shipment without the need to add new properties.\r\n\r\nThese are e.g. used in the pricing module to add some additional conditions.",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Gets or sets the nots.\r\n<br>\r\nThis gives the user the possibillity to add some more sentences about this shipment.\r\n",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the shipment is deleted."
                    },
                    "loadWorkflow": {
                        "$ref": "#/components/schemas/ShipmentTelematicWorkflowModel"
                    },
                    "deliveryWorkflow": {
                        "$ref": "#/components/schemas/ShipmentTelematicWorkflowModel"
                    },
                    "tours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentTourModel"
                        },
                        "description": "Gets or sets a list of tour shipments.\r\n<br>\r\nThis collection will be filled when creating or updating tour objects.\r\n",
                        "nullable": true
                    },
                    "constructionSite": {
                        "$ref": "#/components/schemas/ConstructionSiteModel"
                    },
                    "addon": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Gets or sets a dictionary of addon properties.\r\n<br>\r\nCan be used to set customer exclusive properties for a shipment.\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment."
            },
            "ShipmentStatusModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the namme of the status.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the status.\r\n<br>\r\nThe number is a human readable short name or number of the shipment.\r\n",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets roles.\r\n<br>\r\nThese roles will decide whether shipments with the status can or can not to certain things.\r\n\r\nA list of available roles at the moment:\r\n<list type=\"bullet\"><item>is_default</item><item>disable_edit</item><item>billable</item><item>disable_delete</item></list>",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color.\r\n<br>\r\nWill define the color of the status as hex code.\r\n",
                        "nullable": true
                    },
                    "orderNr": {
                        "type": "integer",
                        "description": "Gets or sets the order number.\r\n<br>\r\nThe order nr will define in which order the statuses are resolved. \r\n\r\nThe lowest value will always be resolved first.",
                        "format": "int32"
                    },
                    "resolver": {
                        "type": "string",
                        "description": "Gets or sets the resolver name.\r\n<br>\r\nThe name of the resolver is also the name which the resolver is registererd. \r\n\r\nWithin the resolving of the status the service will try to find a resolver with the given name.",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the status as guid.\r\n<br>\r\nThis will define the unique identifier of the status.\r\n",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the status is deleted."
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment status."
            },
            "ShipmentTagModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the guid.\r\n<br>\r\nThis represents a unique identifier for the tag.\r\n",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Gets or sets the group name.\r\n<br>\r\nGroup names are a possibillity to group tags. \r\nE.g. when just a single tag from a certain pool should be used.\r\n",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color of the string.",
                        "nullable": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "Gets or sets the organization id.",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the shipment tag is deleted."
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment tag."
            },
            "ShipmentTelematicWorkflowModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.\r\n<br>\r\nRerpesents the id of a telematic workflow.\r\n",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.\r\n<br>\r\nRepresents the display name of a telematic workflow.\r\n",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment telematic workflow."
            },
            "ShipmentToTourRequest": {
                "required": [
                    "shipmentId"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "resourceId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "ShipmentTourModel": {
                "type": "object",
                "properties": {
                    "tourId": {
                        "type": "string",
                        "description": "Gets or sets the tour-id",
                        "format": "uuid"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the tour number",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the start date (attach action date time)",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "Gets or sets the end date (detach action date time)",
                        "format": "date-time"
                    },
                    "startAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "endAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a connection between a shipment and a tour."
            },
            "ShipmentTransportOrderModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.\r\n<br>\r\nRepresents the primary identifier of a transport order.\r\n",
                        "format": "uuid"
                    },
                    "customerAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "overriceCustomerAddress": {
                        "type": "boolean",
                        "description": "Gets or sets whether the customer address will be overwritten.\r\n<br>\r\nIf this one is set to true the customer address of all contained shipments will be set to the same\r\ncusomer address as the one in this transport order.\r\n"
                    },
                    "carrierAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "overrideCarrierAddress": {
                        "type": "boolean",
                        "description": "Gets or sets whether the carrier address will be overwritten.\r\n<br>\r\nIf this is set to true the carrier address of all contained shipments will be set to the same carrier\r\naddress as the one in this transport order.\r\n"
                    },
                    "freightPayerAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "overrideFreightPayerAddress": {
                        "type": "boolean",
                        "description": "Gets or sets whether the freight payer address will be overwritten.\r\n<br>\r\nIf ths is set to true the freight payer address of all contained shipments will be set to the same \r\nfreight payer address as the one in this transport order.\r\n"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number.\r\n<br>\r\nThe number is a human readable identifier for this transport order.\r\n\r\nA number should be  unique within a tenant and is usually set by the sequence manager.",
                        "nullable": true
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Gets or sets the reference number.\r\n<br>\r\nUsually represents the number of another programm or the customer number for this object.\r\n",
                        "nullable": true
                    },
                    "internalNumber": {
                        "type": "string",
                        "description": "Gets or sets the number.",
                        "nullable": true
                    },
                    "orderDate": {
                        "type": "string",
                        "description": "Gets or sets the order date.\r\n<br>\r\nThis represents the date on which the order is ordered.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the transport order is deleted."
                    },
                    "beginDate": {
                        "type": "string",
                        "description": "Gets or sets the begin date.\r\n<br>\r\nRepresents the date the transport order will begin.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Gets or sets the end date.\r\n<br>\r\nRepresents the date the transport order should end.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "customCustomerPrice": {
                        "type": "number",
                        "description": "Gets or sets the custom customer price.\r\n<br>\r\nThis field is to hold a custom price for the customer. \r\nE.g. when he has to pay a specific amount which will not be calculted from the shipments.\r\n",
                        "format": "double"
                    },
                    "calculatedCustomerPrice": {
                        "type": "number",
                        "description": "Gets or sets the calculated customet price.\r\n<br>\r\nThis field is for a calculated price for the customer.\r\n",
                        "format": "double"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TransportOrderStatusModel"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of shipment transport order."
            },
            "ShipmentsToTourRequest": {
                "type": "object",
                "properties": {
                    "shipmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "resourceId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "TimeSpan": {
                "type": "object",
                "properties": {
                    "ticks": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "days": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "hours": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "milliseconds": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "microseconds": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "nanoseconds": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "minutes": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "seconds": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalDays": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "totalHours": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "totalMilliseconds": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "totalMicroseconds": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "totalNanoseconds": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "totalMinutes": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "totalSeconds": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "TourActionModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "Gets or sets the order id in which the actions are processed.",
                        "format": "int32"
                    },
                    "dateTime": {
                        "type": "string",
                        "description": "Gets or sets the date time.\r\n<br>\r\nRepresents the planned date and time of the action.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualDateTime": {
                        "type": "string",
                        "description": "Gets or sets the actual date time.\r\n<br>\r\nRepresents the actual date and time of the action.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedDateTime": {
                        "type": "string",
                        "description": "Gets or sets the calculated date time.\r\n<br>\r\nRepresents the calculated date and time of the action.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "mirroredTourNumber": {
                        "type": "string",
                        "description": "Gets or sets the tour number of the mirrored tour.\r\n<br>\r\nThe tour number will be used to make sure that all generated tours from this action have the same \r\ntour number.\r\n",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the type.",
                        "nullable": true
                    },
                    "globalActionId": {
                        "type": "string",
                        "description": "Gets or sets the global action id.",
                        "format": "uuid"
                    },
                    "entity": {
                        "$ref": "#/components/schemas/TourEntityModel"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "address": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "cleaningSlots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LoadingSlotModel"
                        },
                        "description": "Gets or sets a list of used loading slots.",
                        "nullable": true
                    },
                    "usedLoadingSlots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LoadingSlotModel"
                        },
                        "description": "Gets or sets a list of used loading slots.",
                        "nullable": true
                    },
                    "mirroredTourTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TourTagModel"
                        },
                        "description": "Gets or sets the mirrored tour tags. \r\n<br>\r\nThe mirrored tour tags will be used to add tags to the mirrored tour.\r\n",
                        "nullable": true
                    },
                    "mirroredTourStatus": {
                        "$ref": "#/components/schemas/TourStatusModel"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of a tour action."
            },
            "TourEntityModel": {
                "type": "object",
                "properties": {
                    "shipment": {
                        "$ref": "#/components/schemas/ShipmentModel"
                    },
                    "cleaning": {
                        "$ref": "#/components/schemas/CleaningModel"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model for tour entities."
            },
            "TourManipulateResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Gets or sets whether the manipulate was successfull."
                    }
                },
                "additionalProperties": false,
                "description": "Response to a tour manipulate requests."
            },
            "TourModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.\r\n<br>\r\nRepresents a unique identifier for a tour.\r\n",
                        "format": "uuid"
                    },
                    "globalTourId": {
                        "type": "string",
                        "description": "Gets or sets the global tour id.\r\n<br>\r\nThe global tour id is used to group tours that were generated from the same tour.\r\n",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the tour.",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the reference number.",
                        "nullable": true
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "startAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "endAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the start date time.\r\n<br>\r\nRepresents the date and time when the resource should start it's trip.\r\n\r\nThis just represents the planned date and time, not the actual start.",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "Gets or sets the end date time.\r\n<br>\r\nRerpresents the date and time when the resource should end it's trip.\r\n\r\nThis just represents the planned date and time, not the actual end.",
                        "format": "date-time"
                    },
                    "actualStartDateTime": {
                        "type": "string",
                        "description": "Gets or sets the actual start date and time.\r\n<br>\r\nThis represents the time the resource actually started it's trip, not the planned start.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualEndDateTime": {
                        "type": "string",
                        "description": "Gets or sets the actual end date and time.\r\n<br>\r\nThis represents the time the resource actually ended it's trip, not the planned end.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedStartDateTime": {
                        "type": "string",
                        "description": "Gets or sets the calculated start date and time.\r\n<br>\r\nThis value should be calculated by a service and not set by the user in most cases.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "calculatedEndDateTime": {
                        "type": "string",
                        "description": "Gets or sets the calculated end date and time.\r\n<br>\r\nThis value should be calculated by a service and not set by the user in most cases.\r\n",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TourActionModel"
                        },
                        "description": "Gets or sets the tour actions.\r\n<br>\r\nThis list contains a list of actions which define single events during the trip.\r\n\r\nThis list will be the primary resource for the generation of attached resources and entities.\r\n<br>\r\nSome of these actoins might be e.g.: \"Add trailer\", \"Change tractor unit\" or \"Load shipment\".\r\n",
                        "nullable": true
                    },
                    "attachedResources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttachedResourceModel"
                        },
                        "description": "Gets or sets the attached resources.\r\n<br>\r\nEach attached resource will be generetad from a attaching and detaching action.\r\n\r\nThe user should not be able to add data to this list directly.",
                        "nullable": true
                    },
                    "attachedEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttachedEntityModel"
                        },
                        "description": "Gets or sets the attached entities.\r\n<br>\r\nEach attached entity will be generated from a attaching and detaching action.\r\n\r\nThe user should not be able to add data to this list directly.",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TourTagModel"
                        },
                        "description": "Gets or sets tour tags.\r\n<br>\r\nTags are shorts additional information that can be added to a tour.\r\n",
                        "nullable": true
                    },
                    "transits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransitModel"
                        },
                        "description": "Gets or sets transits.\r\n<br>\r\nA transit is a trip/movement of the primary resource from one place to another.\r\n",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/TourStatusModel"
                    },
                    "isMirroredTour": {
                        "type": "boolean",
                        "description": "Gets or sets whether the tour is mirrored.",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Gets or sets a note to the tour.",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets werther the tour is deleted."
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the tour create date time",
                        "format": "date-time"
                    },
                    "updateDateTime": {
                        "type": "string",
                        "description": "Gets or sets the tour update date time",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of tour."
            },
            "TourReportingModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.\r\n<br>\r\nRepresents a unique identifier for a tour.\r\n",
                        "format": "uuid"
                    },
                    "globalTourId": {
                        "type": "string",
                        "description": "Gets or sets the global tour id.\r\n<br>\r\nThe global tour id is used to group tours that were generated from the same tour.\r\n",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the tour.",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the reference number.",
                        "nullable": true
                    },
                    "startAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "endAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the start date time.\r\n<br>\r\nRepresents the date and time when the resource should start it's trip.\r\n\r\nThis just represents the planned date and time, not the actual start.",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "Gets or sets the end date time.\r\n<br>\r\nRerpresents the date and time when the resource should end it's trip.\r\n\r\nThis just represents the planned date and time, not the actual end.",
                        "format": "date-time"
                    },
                    "tractorUnit1": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "tractorUnit2": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "tractorUnit3": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "trailer1": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "trailer2": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "driver1": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "driver2": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "carrier1": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "carrier2": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "container1": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "container2": {
                        "$ref": "#/components/schemas/ResourceModel"
                    },
                    "shipments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentModel"
                        },
                        "nullable": true
                    },
                    "firstShipment": {
                        "$ref": "#/components/schemas/ShipmentModel"
                    },
                    "lastShipment": {
                        "$ref": "#/components/schemas/ShipmentModel"
                    },
                    "shipmentItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportingShipmentItem"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TourStatusModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the status as guid.\r\n<br>\r\nThis will define the unique identifier of the status.\r\n",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the namme of the status.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the status.\r\n<br>\r\nThe number is a human readable short name or number of the status.\r\n",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets roles.\r\n<br>\r\nThese roles will decide whether shipments with the status can or can not to certain things.\r\n\r\nA list of available roles at the moment:\r\n<list type=\"bullet\"><item>is_default</item><item>disable_edit</item><item>disable_delete</item></list>",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color.\r\n<br>\r\nWill define the color of the status as hex code.\r\n",
                        "nullable": true
                    },
                    "orderNr": {
                        "type": "integer",
                        "description": "Gets or sets the order number.\r\n<br>\r\nThe order nr will define in which order the statuses are resolved. \r\n\r\nThe lowest value will always be resolved first.",
                        "format": "int32"
                    },
                    "resolver": {
                        "type": "string",
                        "description": "Gets or sets the resolver name.\r\n<br>\r\nThe name of the resolver is also the name which the resolver is registererd. \r\n\r\nWithin the resolving of the status the service will try to find a resolver with the given name.",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the status is deleted."
                    }
                },
                "additionalProperties": false,
                "description": "Represents the status of a tour.\r\n<br>\r\nThe tour status will define what actions the user can and can not do with the tour and in which state the tour\r\ncurrently is.\r\n"
            },
            "TourTagModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the unique identifier of the tour tag.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name.",
                        "nullable": true
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Gets or sets the group name.\r\n<br>\r\nGroup names are a possibillity to group tags. \r\nE.g. when just a single tag from a certain pool should be used.\r\n",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color of the string.",
                        "nullable": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "Gets or sets the organization id.",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the tour tag is deleted."
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets the functions of the tour tag.\r\n<br>\r\nFunctions are used to add additional functionalities to a tour tag.\r\n<list type=\"bullet\"><item>disable_edit: Disables editing the tour or action the tag is attached to.</item></list>",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the server model of a tag for tours.\r\n<br>\r\nTags are short texts to add information to a tour without the need to add new properties.\r\n\r\nThese are e.g. used in the pricing module to add some additional conditions."
            },
            "TransitModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.",
                        "format": "uuid"
                    },
                    "startAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "Gets or sets the start date time of the transit.",
                        "format": "date-time"
                    },
                    "endAddress": {
                        "$ref": "#/components/schemas/AddressModel"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "Gets or sets the end date time off the transit.",
                        "format": "date-time"
                    },
                    "startActionId": {
                        "type": "string",
                        "description": "Gets or sets the id of the start action.\r\n<br>\r\nWhen the guid is null the transit will start at the start of the tour.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "globalStartActionId": {
                        "type": "string",
                        "description": "Gets or sets the global id of the start action.\r\n<br>\r\nWill contain the tour id in case of the start of the tour.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "endActionId": {
                        "type": "string",
                        "description": "Gets or sets the id of the end action.\r\n<br>\r\nWhen the guid is null the transit will end at the end of the tour.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "globalEndActionId": {
                        "type": "string",
                        "description": "Gets or sets the global id of the end action.\r\n<br>\r\nWill contain the tour id in case of the end of the tour.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Gets or sets the distance in meter",
                        "format": "int32"
                    },
                    "tollDistance": {
                        "type": "integer",
                        "description": "Gets or sets the toll distance in meter",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Class to represent a transit.\r\n<br>\r\nA transit describes a movement of the primary resource from one place to another during a tour.\r\n\r\nTransits will be automaically generated and updated from a service."
            },
            "TransportOrderStatusModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the status as guid.\r\n<br>\r\nThis will define the unique identifier of the status.\r\n",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the namme of the status.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the status.\r\n<br>\r\nThe number is a human readable short name or number of the status.\r\n",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets roles.\r\n<br>\r\nThese roles will decide whether transport orders with the status can or can not to certain things.\r\n\r\nA list of available roles at the moment:\r\n<list type=\"bullet\"><item>is_default</item><br>Will set the status as default, only one status should be a default status.<item>disable_edit</item><br>Will diable editing of the transport order.<item>disable_delete</item><br>The user should be unable to delete the billing line if a status with this role is set.<item>billable</item><br>Will set the transport order as billable.<item>update_instance_data</item><br>If a status is set with this role the instance data, e.g. contact information will be automatically\r\nupdated when updated in a contact.</list>",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color.\r\n<br>\r\nWill define the color of the status as hex code.\r\n",
                        "nullable": true
                    },
                    "orderNr": {
                        "type": "integer",
                        "description": "Gets or sets the order number.\r\n<br>\r\nThe order nr will define in which order the statuses are resolved. \r\n\r\nThe lowest value will always be resolved first.",
                        "format": "int32"
                    },
                    "resolver": {
                        "type": "string",
                        "description": "Gets or sets the resolver name.\r\n<br>\r\nThe name of the resolver is also the name which the resolver is registererd. \r\n\r\nWithin the resolving of the status the service will try to find a resolver with the given name.",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the status is deleted."
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of transport order status."
            },
            "UpdateResourceGroupRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the resource group.",
                        "nullable": true
                    },
                    "resourceIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The resources in the resource group.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateResourceRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Gets the type of the resource.\r\n<br>\r\nE.g. \"Driver\" or \"Tractor Unit\"\r\n",
                        "nullable": true
                    },
                    "matchCode": {
                        "type": "string",
                        "description": "Gets or sets the match code.\r\n<br>\r\nThis will be a non unique human readable number for the resource.\r\n",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the user-friendly display name\r\n<br>\r\nThis will be the display-name of the resource. E.g. for drivers\r\nthis might be the first- and lastname. For vehicles this might be \r\nthe registration plate.\r\n",
                        "nullable": true
                    },
                    "loadingSlots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LoadingSlotModel"
                        },
                        "description": "Gets or sets the loading slots of the resource.",
                        "nullable": true
                    },
                    "location": {
                        "$ref": "#/components/schemas/ResourceLocationModel"
                    },
                    "isLoadable": {
                        "type": "boolean",
                        "description": "Gets or sets whether the resource is loadable"
                    },
                    "planningOrderKey": {
                        "type": "string",
                        "description": "Gets or sets an order key for the disposition",
                        "nullable": true
                    },
                    "usableUntil": {
                        "type": "string",
                        "description": "Gets or sets a date, until",
                        "format": "date-time",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Gets or sets resource notes",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateShipmentStatusRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the namme of the status.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the status.\r\n<br>\r\nThe number is a human readable short name or number of the shipment.\r\n",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets roles.\r\n<br>\r\nThese roles will decide whether shipments with the status can or can not to certain things.\r\n\r\nA list of available roles at the moment:\r\n<list type=\"bullet\"><item>is_default</item><item>disable_edit</item><item>billable</item><item>disable_delete</item></list>",
                        "nullable": true
                    },
                    "hexColor": {
                        "type": "string",
                        "description": "Gets or sets the hex color.\r\n<br>\r\nWill define the color of the status as hex code.\r\n",
                        "nullable": true
                    },
                    "orderNr": {
                        "type": "integer",
                        "description": "Gets or sets the order number.\r\n<br>\r\nThe order nr will define in which order the statuses are resolved. \r\n\r\nThe lowest value will always be resolved first.",
                        "format": "int32"
                    },
                    "resolver": {
                        "type": "string",
                        "description": "Gets or sets the resolver name.\r\n<br>\r\nThe name of the resolver is also the name which the resolver is registererd. \r\n\r\nWithin the resolving of the status the service will try to find a resolver with the given name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to create a shipment status."
            },
            "UsedLoadingSlotAggregationModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the tour id",
                        "format": "uuid"
                    },
                    "shipment": {
                        "$ref": "#/components/schemas/ShipmentModel"
                    },
                    "loadingSlot": {
                        "$ref": "#/components/schemas/LoadingSlotModel"
                    }
                },
                "additionalProperties": false,
                "description": "Represents an aggregated search result for loading slots and shipments"
            },
            "ValidateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Gets or sets the message.",
                        "nullable": true
                    },
                    "redundancies": {
                        "type": "integer",
                        "description": "Gets or sets the count of redundancies.",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for validate requests."
            },
            "WeightNoteModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id.\r\n<br>\r\nRepresents the unique identifier of the weight note.\r\n",
                        "format": "uuid"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets whether the weight note is deleted."
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number.\r\n<br>\r\nThe number is usually given by the scale operator/ scale document.\r\n",
                        "nullable": true
                    },
                    "documentId": {
                        "type": "string",
                        "description": "Gets or sets the document id.\r\n<br>\r\nReferences a document with the weight note.\r\n",
                        "format": "uuid",
                        "nullable": true
                    },
                    "quantity": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "type": {
                        "$ref": "#/components/schemas/WeightNoteType"
                    },
                    "createDateTime": {
                        "type": "string",
                        "description": "Gets or sets the create date time.",
                        "format": "date-time"
                    },
                    "firstWeight": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "secondWeight": {
                        "$ref": "#/components/schemas/QuantityModel"
                    },
                    "firstDateTime": {
                        "type": "string",
                        "description": "Gets or sets the first date time.\r\n<br>\r\nRepresents the date and time of the first weighing.\r\n",
                        "format": "date-time"
                    },
                    "secondDateTime": {
                        "type": "string",
                        "description": "Gets or sets the second date time.\r\n<br>\r\nRepresents the date and time of the second weighing.\r\n",
                        "format": "date-time"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Gets or sets the external reference.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shared model of weight note."
            },
            "WeightNoteType": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "description": "Represents the type of a weight note.",
                "format": "int32"
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "apiKey",
                "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}